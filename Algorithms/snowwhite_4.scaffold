// Scaffold file synthesized by rand-bench.py
// qubits: 16 ancilla: 64 gates: 128 levels: 2 degrees: 4
#include "qalloc.h"
#include "uncompute.h"
#define LOOP 4
// Call list: 1,2,3,4;5,6,7;8,9,10,11;;12,13,14;15,16,17,18
// Function 18 with degree 0
// nq: 6, na: 29, ng: 33
void func18(qbit **q, int n) {
printf("func18\n");
fflush(stderr);
	qbit *anc[29]; // ancilla
	qbit *nb[13]; // interacting bits
	qbit *res[2];
	nb[0] = q[1];
	nb[1] = q[2];
	nb[2] = q[5];
	nb[3] = q[4];
	nb[4] = q[2];
	nb[5] = q[3];
	nb[6] = q[2];
	nb[7] = q[4];
	nb[8] = q[0];
	nb[9] = q[2];
	nb[10] = q[0];
	nb[11] = q[3];
	nb[12] = q[1];
	res[0] = q[3];
	res[1] = q[2];
	// Leaf function
	Compute (0, 29, 68, 35, 0, 4, 0) {
		acquire(29, anc, 13, nb);
		CNOT( anc[4], anc[8] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[6], anc[24] );
		Toffoli( anc[11], anc[19], anc[24] );
		CNOT( q[1], anc[21] );
		Toffoli( anc[16], anc[18], q[2] );
		Toffoli( anc[1], anc[12], anc[6] );
		CNOT( q[5], q[4] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[21], anc[2], anc[9] );
		Toffoli( anc[16], q[3], anc[25] );
		Toffoli( anc[10], anc[3], anc[6] );
		Toffoli( anc[1], anc[25], anc[18] );
		CNOT( q[2], anc[25] );
		CNOT( anc[0], q[4] );
		CNOT( anc[2], anc[28] );
		CNOT( anc[22], anc[2] );
		Toffoli( anc[4], anc[23], anc[15] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[16], q[2], anc[12] );
		Toffoli( anc[16], anc[2], q[0] );
		Toffoli( anc[22], anc[16], anc[1] );
		Toffoli( anc[8], anc[5], anc[26] );
		CNOT( anc[20], anc[4] );
		CNOT( anc[6], anc[22] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[25], anc[15] );
		Toffoli( anc[19], anc[9], q[3] );
		CNOT( anc[10], anc[17] );
		Toffoli( anc[3], q[1], anc[15] );
		Toffoli( anc[28], anc[21], anc[14] );
		Toffoli( anc[15], anc[16], anc[26] );
		CNOT( anc[21], anc[19] );
	}
	Store {
		CNOT( q[2], res[0] );
		CNOT( q[0], res[1] );
	}
	Uncompute(res, 0, anc, 29, 68, 35){
		CNOT( anc[21], anc[19] );
		Toffoli( anc[15], anc[16], anc[26] );
		Toffoli( anc[28], anc[21], anc[14] );
		Toffoli( anc[3], q[1], anc[15] );
		CNOT( anc[10], anc[17] );
		Toffoli( anc[19], anc[9], q[3] );
		CNOT( anc[25], anc[15] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[6], anc[22] );
		CNOT( anc[20], anc[4] );
		Toffoli( anc[8], anc[5], anc[26] );
		Toffoli( anc[22], anc[16], anc[1] );
		Toffoli( anc[16], anc[2], q[0] );
		Toffoli( anc[16], q[2], anc[12] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[4], anc[23], anc[15] );
		CNOT( anc[22], anc[2] );
		CNOT( anc[2], anc[28] );
		CNOT( anc[0], q[4] );
		CNOT( q[2], anc[25] );
		Toffoli( anc[1], anc[25], anc[18] );
		Toffoli( anc[10], anc[3], anc[6] );
		Toffoli( anc[16], q[3], anc[25] );
		Toffoli( anc[21], anc[2], anc[9] );
		CNOT( anc[0], q[2] );
		CNOT( q[5], q[4] );
		Toffoli( anc[1], anc[12], anc[6] );
		Toffoli( anc[16], anc[18], q[2] );
		CNOT( q[1], anc[21] );
		Toffoli( anc[11], anc[19], anc[24] );
		CNOT( anc[6], anc[24] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[4], anc[8] );
	} Free(anc, 29) {}
}
// Function 18 with degree 0
// nq: 6, na: 29, ng: 33
void func18R(qbit **q, int n) {
printf("func18R\n");
fflush(stderr);
	qbit *anc[29]; // ancilla
	qbit *nb[13]; // interacting bits
	qbit *res[2];
	nb[0] = q[1];
	nb[1] = q[2];
	nb[2] = q[5];
	nb[3] = q[4];
	nb[4] = q[2];
	nb[5] = q[3];
	nb[6] = q[2];
	nb[7] = q[4];
	nb[8] = q[0];
	nb[9] = q[2];
	nb[10] = q[0];
	nb[11] = q[3];
	nb[12] = q[1];
	res[0] = q[3];
	res[1] = q[2];
	// Leaf function
	_computeModule(0, 29, 68, 35, 0, 4, 0);
	acquire(29, anc, 13, nb);
	Recompute (res, 0, anc, 29, 68, 35){
		CNOT( anc[21], anc[19] );
		Toffoli( anc[15], anc[16], anc[26] );
		Toffoli( anc[28], anc[21], anc[14] );
		Toffoli( anc[3], q[1], anc[15] );
		CNOT( anc[10], anc[17] );
		Toffoli( anc[19], anc[9], q[3] );
		CNOT( anc[25], anc[15] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[6], anc[22] );
		CNOT( anc[20], anc[4] );
		Toffoli( anc[8], anc[5], anc[26] );
		Toffoli( anc[22], anc[16], anc[1] );
		Toffoli( anc[16], anc[2], q[0] );
		Toffoli( anc[16], q[2], anc[12] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[4], anc[23], anc[15] );
		CNOT( anc[22], anc[2] );
		CNOT( anc[2], anc[28] );
		CNOT( anc[0], q[4] );
		CNOT( q[2], anc[25] );
		Toffoli( anc[1], anc[25], anc[18] );
		Toffoli( anc[10], anc[3], anc[6] );
		Toffoli( anc[16], q[3], anc[25] );
		Toffoli( anc[21], anc[2], anc[9] );
		CNOT( anc[0], q[2] );
		CNOT( q[5], q[4] );
		Toffoli( anc[1], anc[12], anc[6] );
		Toffoli( anc[16], anc[18], q[2] );
		CNOT( q[1], anc[21] );
		Toffoli( anc[11], anc[19], anc[24] );
		CNOT( anc[6], anc[24] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[4], anc[8] );
	}
	Restore {
		CNOT( q[2], res[0] );
		CNOT( q[0], res[1] );
	}
	Unrecompute {
		CNOT( anc[4], anc[8] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[6], anc[24] );
		Toffoli( anc[11], anc[19], anc[24] );
		CNOT( q[1], anc[21] );
		Toffoli( anc[16], anc[18], q[2] );
		Toffoli( anc[1], anc[12], anc[6] );
		CNOT( q[5], q[4] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[21], anc[2], anc[9] );
		Toffoli( anc[16], q[3], anc[25] );
		Toffoli( anc[10], anc[3], anc[6] );
		Toffoli( anc[1], anc[25], anc[18] );
		CNOT( q[2], anc[25] );
		CNOT( anc[0], q[4] );
		CNOT( anc[2], anc[28] );
		CNOT( anc[22], anc[2] );
		Toffoli( anc[4], anc[23], anc[15] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[16], q[2], anc[12] );
		Toffoli( anc[16], anc[2], q[0] );
		Toffoli( anc[22], anc[16], anc[1] );
		Toffoli( anc[8], anc[5], anc[26] );
		CNOT( anc[20], anc[4] );
		CNOT( anc[6], anc[22] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[25], anc[15] );
		Toffoli( anc[19], anc[9], q[3] );
		CNOT( anc[10], anc[17] );
		Toffoli( anc[3], q[1], anc[15] );
		Toffoli( anc[28], anc[21], anc[14] );
		Toffoli( anc[15], anc[16], anc[26] );
		CNOT( anc[21], anc[19] );
	} Refree(anc, 29) {}
}
// Function 17 with degree 0
// nq: 10, na: 34, ng: 55
void func17(qbit **q, int n) {
printf("func17\n");
fflush(stderr);
	qbit *anc[34]; // ancilla
	qbit *nb[39]; // interacting bits
	qbit *res[10];
	nb[0] = q[3];
	nb[1] = q[0];
	nb[2] = q[6];
	nb[3] = q[0];
	nb[4] = q[4];
	nb[5] = q[8];
	nb[6] = q[8];
	nb[7] = q[1];
	nb[8] = q[6];
	nb[9] = q[3];
	nb[10] = q[8];
	nb[11] = q[2];
	nb[12] = q[6];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[6];
	nb[16] = q[8];
	nb[17] = q[2];
	nb[18] = q[2];
	nb[19] = q[9];
	nb[20] = q[2];
	nb[21] = q[4];
	nb[22] = q[9];
	nb[23] = q[7];
	nb[24] = q[2];
	nb[25] = q[9];
	nb[26] = q[5];
	nb[27] = q[2];
	nb[28] = q[5];
	nb[29] = q[5];
	nb[30] = q[2];
	nb[31] = q[9];
	nb[32] = q[9];
	nb[33] = q[4];
	nb[34] = q[2];
	nb[35] = q[1];
	nb[36] = q[5];
	nb[37] = q[2];
	nb[38] = q[1];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[9];
	res[3] = q[8];
	res[4] = q[3];
	res[5] = q[5];
	res[6] = q[6];
	res[7] = q[7];
	res[8] = q[4];
	res[9] = q[1];
	// Leaf function
	Compute (0, 34, 120, 65, 0, 4, 0) {
		acquire(34, anc, 39, nb);
		CNOT( anc[12], anc[3] );
		CNOT( anc[25], anc[22] );
		CNOT( q[3], anc[25] );
		CNOT( q[0], anc[13] );
		Toffoli( anc[2], q[6], anc[7] );
		Toffoli( anc[6], anc[30], q[0] );
		Toffoli( anc[22], anc[11], anc[12] );
		CNOT( q[4], anc[0] );
		CNOT( anc[2], anc[18] );
		Toffoli( anc[33], q[8], anc[14] );
		Toffoli( anc[31], q[8], anc[12] );
		Toffoli( q[1], anc[29], anc[19] );
		Toffoli( anc[10], anc[9], q[6] );
		Toffoli( anc[16], anc[14], anc[10] );
		Toffoli( q[3], anc[8], anc[11] );
		CNOT( anc[7], anc[24] );
		Toffoli( q[8], q[2], anc[1] );
		CNOT( anc[4], anc[13] );
		CNOT( anc[28], anc[4] );
		Toffoli( anc[20], q[6], anc[24] );
		Toffoli( anc[27], anc[19], q[0] );
		Toffoli( anc[15], anc[18], anc[26] );
		Toffoli( q[0], anc[14], anc[32] );
		Toffoli( anc[23], anc[18], anc[15] );
		CNOT( anc[23], anc[22] );
		CNOT( anc[27], anc[14] );
		CNOT( q[6], anc[17] );
		Toffoli( q[8], anc[6], q[2] );
		CNOT( anc[13], anc[15] );
		Toffoli( anc[8], anc[4], anc[21] );
		Toffoli( anc[19], q[2], anc[0] );
		CNOT( anc[28], anc[18] );
		CNOT( anc[19], anc[3] );
		CNOT( anc[1], anc[10] );
		Toffoli( anc[33], anc[11], anc[29] );
		Toffoli( q[9], anc[3], q[2] );
		CNOT( q[4], anc[27] );
		CNOT( anc[9], q[9] );
		CNOT( anc[11], anc[23] );
		Toffoli( anc[24], q[7], q[2] );
		Toffoli( anc[21], q[9], anc[5] );
		Toffoli( anc[24], anc[31], anc[19] );
		Toffoli( anc[30], anc[8], q[5] );
		Toffoli( anc[15], q[2], q[5] );
		CNOT( anc[15], anc[29] );
		Toffoli( anc[11], anc[1], anc[12] );
		Toffoli( anc[33], anc[11], anc[14] );
		Toffoli( anc[24], anc[30], q[5] );
		Toffoli( anc[21], q[2], q[9] );
		CNOT( anc[15], anc[27] );
		Toffoli( q[9], anc[12], anc[25] );
		CNOT( q[4], q[2] );
		Toffoli( q[1], q[5], q[2] );
		Toffoli( q[1], anc[24], anc[28] );
		Toffoli( anc[2], anc[20], anc[33] );
	}
	Store {
		CNOT( anc[16], res[0] );
		CNOT( anc[33], res[1] );
		CNOT( anc[6], res[2] );
		CNOT( anc[13], res[3] );
		CNOT( anc[27], res[4] );
		CNOT( q[3], res[5] );
		CNOT( anc[30], res[6] );
		CNOT( anc[14], res[7] );
		CNOT( anc[31], res[8] );
		CNOT( q[8], res[9] );
	}
	Uncompute(res, 0, anc, 34, 120, 65){
		Toffoli( anc[2], anc[20], anc[33] );
		Toffoli( q[1], anc[24], anc[28] );
		Toffoli( q[1], q[5], q[2] );
		CNOT( q[4], q[2] );
		Toffoli( q[9], anc[12], anc[25] );
		CNOT( anc[15], anc[27] );
		Toffoli( anc[21], q[2], q[9] );
		Toffoli( anc[24], anc[30], q[5] );
		Toffoli( anc[33], anc[11], anc[14] );
		Toffoli( anc[11], anc[1], anc[12] );
		CNOT( anc[15], anc[29] );
		Toffoli( anc[15], q[2], q[5] );
		Toffoli( anc[30], anc[8], q[5] );
		Toffoli( anc[24], anc[31], anc[19] );
		Toffoli( anc[21], q[9], anc[5] );
		Toffoli( anc[24], q[7], q[2] );
		CNOT( anc[11], anc[23] );
		CNOT( anc[9], q[9] );
		CNOT( q[4], anc[27] );
		Toffoli( q[9], anc[3], q[2] );
		Toffoli( anc[33], anc[11], anc[29] );
		CNOT( anc[1], anc[10] );
		CNOT( anc[19], anc[3] );
		CNOT( anc[28], anc[18] );
		Toffoli( anc[19], q[2], anc[0] );
		Toffoli( anc[8], anc[4], anc[21] );
		CNOT( anc[13], anc[15] );
		Toffoli( q[8], anc[6], q[2] );
		CNOT( q[6], anc[17] );
		CNOT( anc[27], anc[14] );
		CNOT( anc[23], anc[22] );
		Toffoli( anc[23], anc[18], anc[15] );
		Toffoli( q[0], anc[14], anc[32] );
		Toffoli( anc[15], anc[18], anc[26] );
		Toffoli( anc[27], anc[19], q[0] );
		Toffoli( anc[20], q[6], anc[24] );
		CNOT( anc[28], anc[4] );
		CNOT( anc[4], anc[13] );
		Toffoli( q[8], q[2], anc[1] );
		CNOT( anc[7], anc[24] );
		Toffoli( q[3], anc[8], anc[11] );
		Toffoli( anc[16], anc[14], anc[10] );
		Toffoli( anc[10], anc[9], q[6] );
		Toffoli( q[1], anc[29], anc[19] );
		Toffoli( anc[31], q[8], anc[12] );
		Toffoli( anc[33], q[8], anc[14] );
		CNOT( anc[2], anc[18] );
		CNOT( q[4], anc[0] );
		Toffoli( anc[22], anc[11], anc[12] );
		Toffoli( anc[6], anc[30], q[0] );
		Toffoli( anc[2], q[6], anc[7] );
		CNOT( q[0], anc[13] );
		CNOT( q[3], anc[25] );
		CNOT( anc[25], anc[22] );
		CNOT( anc[12], anc[3] );
	} Free(anc, 34) {}
}
// Function 17 with degree 0
// nq: 10, na: 34, ng: 55
void func17R(qbit **q, int n) {
printf("func17R\n");
fflush(stderr);
	qbit *anc[34]; // ancilla
	qbit *nb[39]; // interacting bits
	qbit *res[10];
	nb[0] = q[3];
	nb[1] = q[0];
	nb[2] = q[6];
	nb[3] = q[0];
	nb[4] = q[4];
	nb[5] = q[8];
	nb[6] = q[8];
	nb[7] = q[1];
	nb[8] = q[6];
	nb[9] = q[3];
	nb[10] = q[8];
	nb[11] = q[2];
	nb[12] = q[6];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[6];
	nb[16] = q[8];
	nb[17] = q[2];
	nb[18] = q[2];
	nb[19] = q[9];
	nb[20] = q[2];
	nb[21] = q[4];
	nb[22] = q[9];
	nb[23] = q[7];
	nb[24] = q[2];
	nb[25] = q[9];
	nb[26] = q[5];
	nb[27] = q[2];
	nb[28] = q[5];
	nb[29] = q[5];
	nb[30] = q[2];
	nb[31] = q[9];
	nb[32] = q[9];
	nb[33] = q[4];
	nb[34] = q[2];
	nb[35] = q[1];
	nb[36] = q[5];
	nb[37] = q[2];
	nb[38] = q[1];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[9];
	res[3] = q[8];
	res[4] = q[3];
	res[5] = q[5];
	res[6] = q[6];
	res[7] = q[7];
	res[8] = q[4];
	res[9] = q[1];
	// Leaf function
	_computeModule(0, 34, 120, 65, 0, 4, 0);
	acquire(34, anc, 39, nb);
	Recompute (res, 0, anc, 34, 120, 65){
		Toffoli( anc[2], anc[20], anc[33] );
		Toffoli( q[1], anc[24], anc[28] );
		Toffoli( q[1], q[5], q[2] );
		CNOT( q[4], q[2] );
		Toffoli( q[9], anc[12], anc[25] );
		CNOT( anc[15], anc[27] );
		Toffoli( anc[21], q[2], q[9] );
		Toffoli( anc[24], anc[30], q[5] );
		Toffoli( anc[33], anc[11], anc[14] );
		Toffoli( anc[11], anc[1], anc[12] );
		CNOT( anc[15], anc[29] );
		Toffoli( anc[15], q[2], q[5] );
		Toffoli( anc[30], anc[8], q[5] );
		Toffoli( anc[24], anc[31], anc[19] );
		Toffoli( anc[21], q[9], anc[5] );
		Toffoli( anc[24], q[7], q[2] );
		CNOT( anc[11], anc[23] );
		CNOT( anc[9], q[9] );
		CNOT( q[4], anc[27] );
		Toffoli( q[9], anc[3], q[2] );
		Toffoli( anc[33], anc[11], anc[29] );
		CNOT( anc[1], anc[10] );
		CNOT( anc[19], anc[3] );
		CNOT( anc[28], anc[18] );
		Toffoli( anc[19], q[2], anc[0] );
		Toffoli( anc[8], anc[4], anc[21] );
		CNOT( anc[13], anc[15] );
		Toffoli( q[8], anc[6], q[2] );
		CNOT( q[6], anc[17] );
		CNOT( anc[27], anc[14] );
		CNOT( anc[23], anc[22] );
		Toffoli( anc[23], anc[18], anc[15] );
		Toffoli( q[0], anc[14], anc[32] );
		Toffoli( anc[15], anc[18], anc[26] );
		Toffoli( anc[27], anc[19], q[0] );
		Toffoli( anc[20], q[6], anc[24] );
		CNOT( anc[28], anc[4] );
		CNOT( anc[4], anc[13] );
		Toffoli( q[8], q[2], anc[1] );
		CNOT( anc[7], anc[24] );
		Toffoli( q[3], anc[8], anc[11] );
		Toffoli( anc[16], anc[14], anc[10] );
		Toffoli( anc[10], anc[9], q[6] );
		Toffoli( q[1], anc[29], anc[19] );
		Toffoli( anc[31], q[8], anc[12] );
		Toffoli( anc[33], q[8], anc[14] );
		CNOT( anc[2], anc[18] );
		CNOT( q[4], anc[0] );
		Toffoli( anc[22], anc[11], anc[12] );
		Toffoli( anc[6], anc[30], q[0] );
		Toffoli( anc[2], q[6], anc[7] );
		CNOT( q[0], anc[13] );
		CNOT( q[3], anc[25] );
		CNOT( anc[25], anc[22] );
		CNOT( anc[12], anc[3] );
	}
	Restore {
		CNOT( anc[16], res[0] );
		CNOT( anc[33], res[1] );
		CNOT( anc[6], res[2] );
		CNOT( anc[13], res[3] );
		CNOT( anc[27], res[4] );
		CNOT( q[3], res[5] );
		CNOT( anc[30], res[6] );
		CNOT( anc[14], res[7] );
		CNOT( anc[31], res[8] );
		CNOT( q[8], res[9] );
	}
	Unrecompute {
		CNOT( anc[12], anc[3] );
		CNOT( anc[25], anc[22] );
		CNOT( q[3], anc[25] );
		CNOT( q[0], anc[13] );
		Toffoli( anc[2], q[6], anc[7] );
		Toffoli( anc[6], anc[30], q[0] );
		Toffoli( anc[22], anc[11], anc[12] );
		CNOT( q[4], anc[0] );
		CNOT( anc[2], anc[18] );
		Toffoli( anc[33], q[8], anc[14] );
		Toffoli( anc[31], q[8], anc[12] );
		Toffoli( q[1], anc[29], anc[19] );
		Toffoli( anc[10], anc[9], q[6] );
		Toffoli( anc[16], anc[14], anc[10] );
		Toffoli( q[3], anc[8], anc[11] );
		CNOT( anc[7], anc[24] );
		Toffoli( q[8], q[2], anc[1] );
		CNOT( anc[4], anc[13] );
		CNOT( anc[28], anc[4] );
		Toffoli( anc[20], q[6], anc[24] );
		Toffoli( anc[27], anc[19], q[0] );
		Toffoli( anc[15], anc[18], anc[26] );
		Toffoli( q[0], anc[14], anc[32] );
		Toffoli( anc[23], anc[18], anc[15] );
		CNOT( anc[23], anc[22] );
		CNOT( anc[27], anc[14] );
		CNOT( q[6], anc[17] );
		Toffoli( q[8], anc[6], q[2] );
		CNOT( anc[13], anc[15] );
		Toffoli( anc[8], anc[4], anc[21] );
		Toffoli( anc[19], q[2], anc[0] );
		CNOT( anc[28], anc[18] );
		CNOT( anc[19], anc[3] );
		CNOT( anc[1], anc[10] );
		Toffoli( anc[33], anc[11], anc[29] );
		Toffoli( q[9], anc[3], q[2] );
		CNOT( q[4], anc[27] );
		CNOT( anc[9], q[9] );
		CNOT( anc[11], anc[23] );
		Toffoli( anc[24], q[7], q[2] );
		Toffoli( anc[21], q[9], anc[5] );
		Toffoli( anc[24], anc[31], anc[19] );
		Toffoli( anc[30], anc[8], q[5] );
		Toffoli( anc[15], q[2], q[5] );
		CNOT( anc[15], anc[29] );
		Toffoli( anc[11], anc[1], anc[12] );
		Toffoli( anc[33], anc[11], anc[14] );
		Toffoli( anc[24], anc[30], q[5] );
		Toffoli( anc[21], q[2], q[9] );
		CNOT( anc[15], anc[27] );
		Toffoli( q[9], anc[12], anc[25] );
		CNOT( q[4], q[2] );
		Toffoli( q[1], q[5], q[2] );
		Toffoli( q[1], anc[24], anc[28] );
		Toffoli( anc[2], anc[20], anc[33] );
	} Refree(anc, 34) {}
}
// Function 16 with degree 0
// nq: 6, na: 63, ng: 49
void func16(qbit **q, int n) {
printf("func16\n");
fflush(stderr);
	qbit *anc[63]; // ancilla
	qbit *nb[12]; // interacting bits
	qbit *res[4];
	nb[0] = q[0];
	nb[1] = q[5];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[1];
	nb[6] = q[1];
	nb[7] = q[5];
	nb[8] = q[2];
	nb[9] = q[5];
	nb[10] = q[0];
	nb[11] = q[2];
	res[0] = q[0];
	res[1] = q[3];
	res[2] = q[1];
	res[3] = q[2];
	// Leaf function
	Compute (0, 63, 102, 53, 0, 4, 0) {
		acquire(63, anc, 12, nb);
		CNOT( anc[15], anc[53] );
		Toffoli( anc[35], anc[54], anc[50] );
		CNOT( q[0], anc[43] );
		Toffoli( anc[51], q[5], anc[3] );
		Toffoli( anc[11], anc[21], anc[57] );
		Toffoli( q[0], anc[1], anc[14] );
		CNOT( anc[52], anc[8] );
		Toffoli( anc[18], anc[21], anc[1] );
		CNOT( anc[46], anc[61] );
		CNOT( anc[57], anc[49] );
		Toffoli( anc[33], anc[59], anc[46] );
		Toffoli( anc[18], q[0], anc[44] );
		Toffoli( anc[21], anc[25], anc[4] );
		CNOT( anc[42], anc[29] );
		Toffoli( anc[48], anc[44], anc[36] );
		Toffoli( anc[19], anc[35], anc[48] );
		Toffoli( anc[59], anc[27], anc[57] );
		CNOT( anc[10], anc[20] );
		Toffoli( anc[48], anc[9], anc[50] );
		Toffoli( anc[2], anc[32], q[1] );
		Toffoli( anc[23], anc[39], anc[5] );
		Toffoli( anc[26], anc[52], q[1] );
		Toffoli( anc[53], anc[1], anc[27] );
		CNOT( anc[56], q[1] );
		CNOT( anc[46], anc[31] );
		Toffoli( anc[10], anc[54], anc[23] );
		Toffoli( q[5], anc[21], anc[24] );
		CNOT( anc[61], anc[44] );
		Toffoli( anc[60], anc[12], anc[59] );
		CNOT( anc[48], anc[30] );
		Toffoli( anc[2], anc[8], q[2] );
		CNOT( anc[24], anc[58] );
		Toffoli( anc[13], anc[20], anc[53] );
		CNOT( anc[7], anc[60] );
		Toffoli( anc[0], anc[19], anc[55] );
		Toffoli( anc[59], anc[54], anc[12] );
		Toffoli( anc[25], anc[47], anc[61] );
		CNOT( anc[35], anc[11] );
		CNOT( anc[36], anc[43] );
		Toffoli( anc[28], anc[60], anc[13] );
		CNOT( anc[55], anc[28] );
		Toffoli( anc[24], anc[40], anc[13] );
		CNOT( anc[18], anc[46] );
		CNOT( anc[16], anc[18] );
		Toffoli( anc[26], q[5], anc[38] );
		Toffoli( anc[57], anc[38], q[0] );
		CNOT( q[2], anc[1] );
		Toffoli( anc[23], anc[17], anc[44] );
		CNOT( anc[61], anc[26] );
	}
	Store {
		CNOT( anc[37], res[0] );
		CNOT( anc[33], res[1] );
		CNOT( anc[4], res[2] );
		CNOT( anc[56], res[3] );
	}
	Uncompute(res, 0, anc, 63, 102, 53){
		CNOT( anc[61], anc[26] );
		Toffoli( anc[23], anc[17], anc[44] );
		CNOT( q[2], anc[1] );
		Toffoli( anc[57], anc[38], q[0] );
		Toffoli( anc[26], q[5], anc[38] );
		CNOT( anc[16], anc[18] );
		CNOT( anc[18], anc[46] );
		Toffoli( anc[24], anc[40], anc[13] );
		CNOT( anc[55], anc[28] );
		Toffoli( anc[28], anc[60], anc[13] );
		CNOT( anc[36], anc[43] );
		CNOT( anc[35], anc[11] );
		Toffoli( anc[25], anc[47], anc[61] );
		Toffoli( anc[59], anc[54], anc[12] );
		Toffoli( anc[0], anc[19], anc[55] );
		CNOT( anc[7], anc[60] );
		Toffoli( anc[13], anc[20], anc[53] );
		CNOT( anc[24], anc[58] );
		Toffoli( anc[2], anc[8], q[2] );
		CNOT( anc[48], anc[30] );
		Toffoli( anc[60], anc[12], anc[59] );
		CNOT( anc[61], anc[44] );
		Toffoli( q[5], anc[21], anc[24] );
		Toffoli( anc[10], anc[54], anc[23] );
		CNOT( anc[46], anc[31] );
		CNOT( anc[56], q[1] );
		Toffoli( anc[53], anc[1], anc[27] );
		Toffoli( anc[26], anc[52], q[1] );
		Toffoli( anc[23], anc[39], anc[5] );
		Toffoli( anc[2], anc[32], q[1] );
		Toffoli( anc[48], anc[9], anc[50] );
		CNOT( anc[10], anc[20] );
		Toffoli( anc[59], anc[27], anc[57] );
		Toffoli( anc[19], anc[35], anc[48] );
		Toffoli( anc[48], anc[44], anc[36] );
		CNOT( anc[42], anc[29] );
		Toffoli( anc[21], anc[25], anc[4] );
		Toffoli( anc[18], q[0], anc[44] );
		Toffoli( anc[33], anc[59], anc[46] );
		CNOT( anc[57], anc[49] );
		CNOT( anc[46], anc[61] );
		Toffoli( anc[18], anc[21], anc[1] );
		CNOT( anc[52], anc[8] );
		Toffoli( q[0], anc[1], anc[14] );
		Toffoli( anc[11], anc[21], anc[57] );
		Toffoli( anc[51], q[5], anc[3] );
		CNOT( q[0], anc[43] );
		Toffoli( anc[35], anc[54], anc[50] );
		CNOT( anc[15], anc[53] );
	} Free(anc, 63) {}
}
// Function 16 with degree 0
// nq: 6, na: 63, ng: 49
void func16R(qbit **q, int n) {
printf("func16R\n");
fflush(stderr);
	qbit *anc[63]; // ancilla
	qbit *nb[12]; // interacting bits
	qbit *res[4];
	nb[0] = q[0];
	nb[1] = q[5];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[1];
	nb[6] = q[1];
	nb[7] = q[5];
	nb[8] = q[2];
	nb[9] = q[5];
	nb[10] = q[0];
	nb[11] = q[2];
	res[0] = q[0];
	res[1] = q[3];
	res[2] = q[1];
	res[3] = q[2];
	// Leaf function
	_computeModule(0, 63, 102, 53, 0, 4, 0);
	acquire(63, anc, 12, nb);
	Recompute (res, 0, anc, 63, 102, 53){
		CNOT( anc[61], anc[26] );
		Toffoli( anc[23], anc[17], anc[44] );
		CNOT( q[2], anc[1] );
		Toffoli( anc[57], anc[38], q[0] );
		Toffoli( anc[26], q[5], anc[38] );
		CNOT( anc[16], anc[18] );
		CNOT( anc[18], anc[46] );
		Toffoli( anc[24], anc[40], anc[13] );
		CNOT( anc[55], anc[28] );
		Toffoli( anc[28], anc[60], anc[13] );
		CNOT( anc[36], anc[43] );
		CNOT( anc[35], anc[11] );
		Toffoli( anc[25], anc[47], anc[61] );
		Toffoli( anc[59], anc[54], anc[12] );
		Toffoli( anc[0], anc[19], anc[55] );
		CNOT( anc[7], anc[60] );
		Toffoli( anc[13], anc[20], anc[53] );
		CNOT( anc[24], anc[58] );
		Toffoli( anc[2], anc[8], q[2] );
		CNOT( anc[48], anc[30] );
		Toffoli( anc[60], anc[12], anc[59] );
		CNOT( anc[61], anc[44] );
		Toffoli( q[5], anc[21], anc[24] );
		Toffoli( anc[10], anc[54], anc[23] );
		CNOT( anc[46], anc[31] );
		CNOT( anc[56], q[1] );
		Toffoli( anc[53], anc[1], anc[27] );
		Toffoli( anc[26], anc[52], q[1] );
		Toffoli( anc[23], anc[39], anc[5] );
		Toffoli( anc[2], anc[32], q[1] );
		Toffoli( anc[48], anc[9], anc[50] );
		CNOT( anc[10], anc[20] );
		Toffoli( anc[59], anc[27], anc[57] );
		Toffoli( anc[19], anc[35], anc[48] );
		Toffoli( anc[48], anc[44], anc[36] );
		CNOT( anc[42], anc[29] );
		Toffoli( anc[21], anc[25], anc[4] );
		Toffoli( anc[18], q[0], anc[44] );
		Toffoli( anc[33], anc[59], anc[46] );
		CNOT( anc[57], anc[49] );
		CNOT( anc[46], anc[61] );
		Toffoli( anc[18], anc[21], anc[1] );
		CNOT( anc[52], anc[8] );
		Toffoli( q[0], anc[1], anc[14] );
		Toffoli( anc[11], anc[21], anc[57] );
		Toffoli( anc[51], q[5], anc[3] );
		CNOT( q[0], anc[43] );
		Toffoli( anc[35], anc[54], anc[50] );
		CNOT( anc[15], anc[53] );
	}
	Restore {
		CNOT( anc[37], res[0] );
		CNOT( anc[33], res[1] );
		CNOT( anc[4], res[2] );
		CNOT( anc[56], res[3] );
	}
	Unrecompute {
		CNOT( anc[15], anc[53] );
		Toffoli( anc[35], anc[54], anc[50] );
		CNOT( q[0], anc[43] );
		Toffoli( anc[51], q[5], anc[3] );
		Toffoli( anc[11], anc[21], anc[57] );
		Toffoli( q[0], anc[1], anc[14] );
		CNOT( anc[52], anc[8] );
		Toffoli( anc[18], anc[21], anc[1] );
		CNOT( anc[46], anc[61] );
		CNOT( anc[57], anc[49] );
		Toffoli( anc[33], anc[59], anc[46] );
		Toffoli( anc[18], q[0], anc[44] );
		Toffoli( anc[21], anc[25], anc[4] );
		CNOT( anc[42], anc[29] );
		Toffoli( anc[48], anc[44], anc[36] );
		Toffoli( anc[19], anc[35], anc[48] );
		Toffoli( anc[59], anc[27], anc[57] );
		CNOT( anc[10], anc[20] );
		Toffoli( anc[48], anc[9], anc[50] );
		Toffoli( anc[2], anc[32], q[1] );
		Toffoli( anc[23], anc[39], anc[5] );
		Toffoli( anc[26], anc[52], q[1] );
		Toffoli( anc[53], anc[1], anc[27] );
		CNOT( anc[56], q[1] );
		CNOT( anc[46], anc[31] );
		Toffoli( anc[10], anc[54], anc[23] );
		Toffoli( q[5], anc[21], anc[24] );
		CNOT( anc[61], anc[44] );
		Toffoli( anc[60], anc[12], anc[59] );
		CNOT( anc[48], anc[30] );
		Toffoli( anc[2], anc[8], q[2] );
		CNOT( anc[24], anc[58] );
		Toffoli( anc[13], anc[20], anc[53] );
		CNOT( anc[7], anc[60] );
		Toffoli( anc[0], anc[19], anc[55] );
		Toffoli( anc[59], anc[54], anc[12] );
		Toffoli( anc[25], anc[47], anc[61] );
		CNOT( anc[35], anc[11] );
		CNOT( anc[36], anc[43] );
		Toffoli( anc[28], anc[60], anc[13] );
		CNOT( anc[55], anc[28] );
		Toffoli( anc[24], anc[40], anc[13] );
		CNOT( anc[18], anc[46] );
		CNOT( anc[16], anc[18] );
		Toffoli( anc[26], q[5], anc[38] );
		Toffoli( anc[57], anc[38], q[0] );
		CNOT( q[2], anc[1] );
		Toffoli( anc[23], anc[17], anc[44] );
		CNOT( anc[61], anc[26] );
	} Refree(anc, 63) {}
}
// Function 15 with degree 0
// nq: 9, na: 46, ng: 90
void func15(qbit **q, int n) {
printf("func15\n");
fflush(stderr);
	qbit *anc[46]; // ancilla
	qbit *nb[36]; // interacting bits
	qbit *res[7];
	nb[0] = q[4];
	nb[1] = q[0];
	nb[2] = q[7];
	nb[3] = q[6];
	nb[4] = q[0];
	nb[5] = q[6];
	nb[6] = q[6];
	nb[7] = q[8];
	nb[8] = q[3];
	nb[9] = q[0];
	nb[10] = q[2];
	nb[11] = q[1];
	nb[12] = q[6];
	nb[13] = q[1];
	nb[14] = q[4];
	nb[15] = q[2];
	nb[16] = q[1];
	nb[17] = q[7];
	nb[18] = q[5];
	nb[19] = q[8];
	nb[20] = q[8];
	nb[21] = q[5];
	nb[22] = q[0];
	nb[23] = q[4];
	nb[24] = q[2];
	nb[25] = q[1];
	nb[26] = q[8];
	nb[27] = q[0];
	nb[28] = q[1];
	nb[29] = q[7];
	nb[30] = q[1];
	nb[31] = q[4];
	nb[32] = q[7];
	nb[33] = q[2];
	nb[34] = q[3];
	nb[35] = q[7];
	res[0] = q[5];
	res[1] = q[3];
	res[2] = q[1];
	res[3] = q[7];
	res[4] = q[8];
	res[5] = q[4];
	res[6] = q[6];
	// Leaf function
	Compute (0, 46, 187, 97, 0, 4, 0) {
		acquire(46, anc, 36, nb);
		Toffoli( q[4], anc[7], anc[19] );
		Toffoli( anc[31], anc[27], anc[23] );
		Toffoli( anc[38], anc[0], anc[25] );
		CNOT( q[0], anc[18] );
		CNOT( anc[19], anc[3] );
		Toffoli( q[7], anc[16], q[6] );
		Toffoli( anc[19], anc[8], q[0] );
		CNOT( anc[23], anc[9] );
		CNOT( q[6], anc[24] );
		CNOT( anc[3], anc[43] );
		Toffoli( q[6], anc[1], anc[23] );
		CNOT( anc[30], anc[8] );
		Toffoli( anc[19], anc[44], anc[39] );
		CNOT( anc[29], anc[4] );
		Toffoli( anc[28], anc[12], anc[17] );
		Toffoli( anc[36], q[8], anc[38] );
		Toffoli( anc[5], q[3], anc[13] );
		Toffoli( anc[12], anc[31], anc[19] );
		CNOT( anc[6], anc[26] );
		CNOT( anc[24], anc[39] );
		Toffoli( anc[35], anc[33], anc[29] );
		CNOT( anc[41], q[0] );
		CNOT( anc[38], anc[43] );
		Toffoli( anc[34], anc[22], anc[11] );
		CNOT( anc[24], q[2] );
		CNOT( anc[19], q[1] );
		Toffoli( anc[33], q[6], anc[21] );
		CNOT( anc[10], anc[44] );
		Toffoli( anc[37], anc[19], anc[8] );
		CNOT( anc[17], anc[20] );
		CNOT( anc[9], anc[30] );
		CNOT( anc[17], anc[42] );
		Toffoli( q[1], anc[40], anc[38] );
		CNOT( anc[28], q[4] );
		CNOT( anc[13], anc[32] );
		CNOT( anc[11], anc[17] );
		Toffoli( anc[17], q[2], anc[21] );
		Toffoli( anc[30], anc[27], q[1] );
		CNOT( anc[34], anc[41] );
		Toffoli( anc[24], anc[6], anc[21] );
		Toffoli( anc[12], anc[19], anc[33] );
		CNOT( anc[14], anc[30] );
		Toffoli( anc[40], anc[37], anc[32] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[39], anc[22] );
		Toffoli( anc[38], anc[13], q[7] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[37], anc[1] );
		CNOT( anc[43], anc[32] );
		CNOT( anc[1], q[5] );
		Toffoli( anc[34], anc[44], anc[5] );
		Toffoli( anc[17], q[8], anc[36] );
		Toffoli( anc[22], anc[14], anc[21] );
		Toffoli( anc[2], anc[18], anc[32] );
		CNOT( anc[8], anc[10] );
		CNOT( q[8], anc[32] );
		CNOT( anc[27], anc[28] );
		Toffoli( anc[16], anc[23], anc[2] );
		Toffoli( q[5], anc[17], anc[19] );
		CNOT( anc[7], anc[23] );
		CNOT( anc[30], anc[3] );
		Toffoli( anc[14], anc[19], anc[26] );
		CNOT( anc[38], q[0] );
		CNOT( q[4], anc[19] );
		CNOT( anc[16], q[2] );
		Toffoli( q[1], anc[12], anc[39] );
		Toffoli( anc[45], anc[44], anc[38] );
		Toffoli( anc[40], anc[10], anc[45] );
		Toffoli( anc[8], anc[27], anc[31] );
		CNOT( anc[24], q[8] );
		Toffoli( anc[21], anc[24], q[0] );
		Toffoli( anc[37], anc[13], anc[19] );
		CNOT( anc[24], anc[32] );
		Toffoli( anc[43], anc[23], anc[31] );
		CNOT( anc[1], anc[13] );
		Toffoli( q[1], q[7], anc[43] );
		CNOT( anc[12], anc[6] );
		CNOT( anc[14], anc[35] );
		CNOT( anc[37], anc[7] );
		CNOT( anc[21], q[1] );
		CNOT( anc[19], anc[11] );
		Toffoli( anc[37], anc[28], anc[27] );
		Toffoli( anc[16], anc[24], anc[33] );
		Toffoli( anc[37], anc[44], anc[30] );
		CNOT( anc[34], anc[44] );
		Toffoli( anc[38], q[4], anc[0] );
		Toffoli( anc[24], anc[27], q[7] );
		CNOT( q[2], anc[12] );
		CNOT( anc[25], anc[10] );
		Toffoli( q[3], q[7], anc[38] );
	}
	Store {
		CNOT( anc[45], res[0] );
		CNOT( anc[10], res[1] );
		CNOT( anc[0], res[2] );
		CNOT( anc[22], res[3] );
		CNOT( anc[27], res[4] );
		CNOT( anc[4], res[5] );
		CNOT( q[5], res[6] );
	}
	Uncompute(res, 0, anc, 46, 187, 97){
		Toffoli( q[3], q[7], anc[38] );
		CNOT( anc[25], anc[10] );
		CNOT( q[2], anc[12] );
		Toffoli( anc[24], anc[27], q[7] );
		Toffoli( anc[38], q[4], anc[0] );
		CNOT( anc[34], anc[44] );
		Toffoli( anc[37], anc[44], anc[30] );
		Toffoli( anc[16], anc[24], anc[33] );
		Toffoli( anc[37], anc[28], anc[27] );
		CNOT( anc[19], anc[11] );
		CNOT( anc[21], q[1] );
		CNOT( anc[37], anc[7] );
		CNOT( anc[14], anc[35] );
		CNOT( anc[12], anc[6] );
		Toffoli( q[1], q[7], anc[43] );
		CNOT( anc[1], anc[13] );
		Toffoli( anc[43], anc[23], anc[31] );
		CNOT( anc[24], anc[32] );
		Toffoli( anc[37], anc[13], anc[19] );
		Toffoli( anc[21], anc[24], q[0] );
		CNOT( anc[24], q[8] );
		Toffoli( anc[8], anc[27], anc[31] );
		Toffoli( anc[40], anc[10], anc[45] );
		Toffoli( anc[45], anc[44], anc[38] );
		Toffoli( q[1], anc[12], anc[39] );
		CNOT( anc[16], q[2] );
		CNOT( q[4], anc[19] );
		CNOT( anc[38], q[0] );
		Toffoli( anc[14], anc[19], anc[26] );
		CNOT( anc[30], anc[3] );
		CNOT( anc[7], anc[23] );
		Toffoli( q[5], anc[17], anc[19] );
		Toffoli( anc[16], anc[23], anc[2] );
		CNOT( anc[27], anc[28] );
		CNOT( q[8], anc[32] );
		CNOT( anc[8], anc[10] );
		Toffoli( anc[2], anc[18], anc[32] );
		Toffoli( anc[22], anc[14], anc[21] );
		Toffoli( anc[17], q[8], anc[36] );
		Toffoli( anc[34], anc[44], anc[5] );
		CNOT( anc[1], q[5] );
		CNOT( anc[43], anc[32] );
		CNOT( anc[37], anc[1] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[38], anc[13], q[7] );
		CNOT( anc[39], anc[22] );
		CNOT( anc[6], anc[5] );
		Toffoli( anc[40], anc[37], anc[32] );
		CNOT( anc[14], anc[30] );
		Toffoli( anc[12], anc[19], anc[33] );
		Toffoli( anc[24], anc[6], anc[21] );
		CNOT( anc[34], anc[41] );
		Toffoli( anc[30], anc[27], q[1] );
		Toffoli( anc[17], q[2], anc[21] );
		CNOT( anc[11], anc[17] );
		CNOT( anc[13], anc[32] );
		CNOT( anc[28], q[4] );
		Toffoli( q[1], anc[40], anc[38] );
		CNOT( anc[17], anc[42] );
		CNOT( anc[9], anc[30] );
		CNOT( anc[17], anc[20] );
		Toffoli( anc[37], anc[19], anc[8] );
		CNOT( anc[10], anc[44] );
		Toffoli( anc[33], q[6], anc[21] );
		CNOT( anc[19], q[1] );
		CNOT( anc[24], q[2] );
		Toffoli( anc[34], anc[22], anc[11] );
		CNOT( anc[38], anc[43] );
		CNOT( anc[41], q[0] );
		Toffoli( anc[35], anc[33], anc[29] );
		CNOT( anc[24], anc[39] );
		CNOT( anc[6], anc[26] );
		Toffoli( anc[12], anc[31], anc[19] );
		Toffoli( anc[5], q[3], anc[13] );
		Toffoli( anc[36], q[8], anc[38] );
		Toffoli( anc[28], anc[12], anc[17] );
		CNOT( anc[29], anc[4] );
		Toffoli( anc[19], anc[44], anc[39] );
		CNOT( anc[30], anc[8] );
		Toffoli( q[6], anc[1], anc[23] );
		CNOT( anc[3], anc[43] );
		CNOT( q[6], anc[24] );
		CNOT( anc[23], anc[9] );
		Toffoli( anc[19], anc[8], q[0] );
		Toffoli( q[7], anc[16], q[6] );
		CNOT( anc[19], anc[3] );
		CNOT( q[0], anc[18] );
		Toffoli( anc[38], anc[0], anc[25] );
		Toffoli( anc[31], anc[27], anc[23] );
		Toffoli( q[4], anc[7], anc[19] );
	} Free(anc, 46) {}
}
// Function 15 with degree 0
// nq: 9, na: 46, ng: 90
void func15R(qbit **q, int n) {
printf("func15R\n");
fflush(stderr);
	qbit *anc[46]; // ancilla
	qbit *nb[36]; // interacting bits
	qbit *res[7];
	nb[0] = q[4];
	nb[1] = q[0];
	nb[2] = q[7];
	nb[3] = q[6];
	nb[4] = q[0];
	nb[5] = q[6];
	nb[6] = q[6];
	nb[7] = q[8];
	nb[8] = q[3];
	nb[9] = q[0];
	nb[10] = q[2];
	nb[11] = q[1];
	nb[12] = q[6];
	nb[13] = q[1];
	nb[14] = q[4];
	nb[15] = q[2];
	nb[16] = q[1];
	nb[17] = q[7];
	nb[18] = q[5];
	nb[19] = q[8];
	nb[20] = q[8];
	nb[21] = q[5];
	nb[22] = q[0];
	nb[23] = q[4];
	nb[24] = q[2];
	nb[25] = q[1];
	nb[26] = q[8];
	nb[27] = q[0];
	nb[28] = q[1];
	nb[29] = q[7];
	nb[30] = q[1];
	nb[31] = q[4];
	nb[32] = q[7];
	nb[33] = q[2];
	nb[34] = q[3];
	nb[35] = q[7];
	res[0] = q[5];
	res[1] = q[3];
	res[2] = q[1];
	res[3] = q[7];
	res[4] = q[8];
	res[5] = q[4];
	res[6] = q[6];
	// Leaf function
	_computeModule(0, 46, 187, 97, 0, 4, 0);
	acquire(46, anc, 36, nb);
	Recompute (res, 0, anc, 46, 187, 97){
		Toffoli( q[3], q[7], anc[38] );
		CNOT( anc[25], anc[10] );
		CNOT( q[2], anc[12] );
		Toffoli( anc[24], anc[27], q[7] );
		Toffoli( anc[38], q[4], anc[0] );
		CNOT( anc[34], anc[44] );
		Toffoli( anc[37], anc[44], anc[30] );
		Toffoli( anc[16], anc[24], anc[33] );
		Toffoli( anc[37], anc[28], anc[27] );
		CNOT( anc[19], anc[11] );
		CNOT( anc[21], q[1] );
		CNOT( anc[37], anc[7] );
		CNOT( anc[14], anc[35] );
		CNOT( anc[12], anc[6] );
		Toffoli( q[1], q[7], anc[43] );
		CNOT( anc[1], anc[13] );
		Toffoli( anc[43], anc[23], anc[31] );
		CNOT( anc[24], anc[32] );
		Toffoli( anc[37], anc[13], anc[19] );
		Toffoli( anc[21], anc[24], q[0] );
		CNOT( anc[24], q[8] );
		Toffoli( anc[8], anc[27], anc[31] );
		Toffoli( anc[40], anc[10], anc[45] );
		Toffoli( anc[45], anc[44], anc[38] );
		Toffoli( q[1], anc[12], anc[39] );
		CNOT( anc[16], q[2] );
		CNOT( q[4], anc[19] );
		CNOT( anc[38], q[0] );
		Toffoli( anc[14], anc[19], anc[26] );
		CNOT( anc[30], anc[3] );
		CNOT( anc[7], anc[23] );
		Toffoli( q[5], anc[17], anc[19] );
		Toffoli( anc[16], anc[23], anc[2] );
		CNOT( anc[27], anc[28] );
		CNOT( q[8], anc[32] );
		CNOT( anc[8], anc[10] );
		Toffoli( anc[2], anc[18], anc[32] );
		Toffoli( anc[22], anc[14], anc[21] );
		Toffoli( anc[17], q[8], anc[36] );
		Toffoli( anc[34], anc[44], anc[5] );
		CNOT( anc[1], q[5] );
		CNOT( anc[43], anc[32] );
		CNOT( anc[37], anc[1] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[38], anc[13], q[7] );
		CNOT( anc[39], anc[22] );
		CNOT( anc[6], anc[5] );
		Toffoli( anc[40], anc[37], anc[32] );
		CNOT( anc[14], anc[30] );
		Toffoli( anc[12], anc[19], anc[33] );
		Toffoli( anc[24], anc[6], anc[21] );
		CNOT( anc[34], anc[41] );
		Toffoli( anc[30], anc[27], q[1] );
		Toffoli( anc[17], q[2], anc[21] );
		CNOT( anc[11], anc[17] );
		CNOT( anc[13], anc[32] );
		CNOT( anc[28], q[4] );
		Toffoli( q[1], anc[40], anc[38] );
		CNOT( anc[17], anc[42] );
		CNOT( anc[9], anc[30] );
		CNOT( anc[17], anc[20] );
		Toffoli( anc[37], anc[19], anc[8] );
		CNOT( anc[10], anc[44] );
		Toffoli( anc[33], q[6], anc[21] );
		CNOT( anc[19], q[1] );
		CNOT( anc[24], q[2] );
		Toffoli( anc[34], anc[22], anc[11] );
		CNOT( anc[38], anc[43] );
		CNOT( anc[41], q[0] );
		Toffoli( anc[35], anc[33], anc[29] );
		CNOT( anc[24], anc[39] );
		CNOT( anc[6], anc[26] );
		Toffoli( anc[12], anc[31], anc[19] );
		Toffoli( anc[5], q[3], anc[13] );
		Toffoli( anc[36], q[8], anc[38] );
		Toffoli( anc[28], anc[12], anc[17] );
		CNOT( anc[29], anc[4] );
		Toffoli( anc[19], anc[44], anc[39] );
		CNOT( anc[30], anc[8] );
		Toffoli( q[6], anc[1], anc[23] );
		CNOT( anc[3], anc[43] );
		CNOT( q[6], anc[24] );
		CNOT( anc[23], anc[9] );
		Toffoli( anc[19], anc[8], q[0] );
		Toffoli( q[7], anc[16], q[6] );
		CNOT( anc[19], anc[3] );
		CNOT( q[0], anc[18] );
		Toffoli( anc[38], anc[0], anc[25] );
		Toffoli( anc[31], anc[27], anc[23] );
		Toffoli( q[4], anc[7], anc[19] );
	}
	Restore {
		CNOT( anc[45], res[0] );
		CNOT( anc[10], res[1] );
		CNOT( anc[0], res[2] );
		CNOT( anc[22], res[3] );
		CNOT( anc[27], res[4] );
		CNOT( anc[4], res[5] );
		CNOT( q[5], res[6] );
	}
	Unrecompute {
		Toffoli( q[4], anc[7], anc[19] );
		Toffoli( anc[31], anc[27], anc[23] );
		Toffoli( anc[38], anc[0], anc[25] );
		CNOT( q[0], anc[18] );
		CNOT( anc[19], anc[3] );
		Toffoli( q[7], anc[16], q[6] );
		Toffoli( anc[19], anc[8], q[0] );
		CNOT( anc[23], anc[9] );
		CNOT( q[6], anc[24] );
		CNOT( anc[3], anc[43] );
		Toffoli( q[6], anc[1], anc[23] );
		CNOT( anc[30], anc[8] );
		Toffoli( anc[19], anc[44], anc[39] );
		CNOT( anc[29], anc[4] );
		Toffoli( anc[28], anc[12], anc[17] );
		Toffoli( anc[36], q[8], anc[38] );
		Toffoli( anc[5], q[3], anc[13] );
		Toffoli( anc[12], anc[31], anc[19] );
		CNOT( anc[6], anc[26] );
		CNOT( anc[24], anc[39] );
		Toffoli( anc[35], anc[33], anc[29] );
		CNOT( anc[41], q[0] );
		CNOT( anc[38], anc[43] );
		Toffoli( anc[34], anc[22], anc[11] );
		CNOT( anc[24], q[2] );
		CNOT( anc[19], q[1] );
		Toffoli( anc[33], q[6], anc[21] );
		CNOT( anc[10], anc[44] );
		Toffoli( anc[37], anc[19], anc[8] );
		CNOT( anc[17], anc[20] );
		CNOT( anc[9], anc[30] );
		CNOT( anc[17], anc[42] );
		Toffoli( q[1], anc[40], anc[38] );
		CNOT( anc[28], q[4] );
		CNOT( anc[13], anc[32] );
		CNOT( anc[11], anc[17] );
		Toffoli( anc[17], q[2], anc[21] );
		Toffoli( anc[30], anc[27], q[1] );
		CNOT( anc[34], anc[41] );
		Toffoli( anc[24], anc[6], anc[21] );
		Toffoli( anc[12], anc[19], anc[33] );
		CNOT( anc[14], anc[30] );
		Toffoli( anc[40], anc[37], anc[32] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[39], anc[22] );
		Toffoli( anc[38], anc[13], q[7] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[37], anc[1] );
		CNOT( anc[43], anc[32] );
		CNOT( anc[1], q[5] );
		Toffoli( anc[34], anc[44], anc[5] );
		Toffoli( anc[17], q[8], anc[36] );
		Toffoli( anc[22], anc[14], anc[21] );
		Toffoli( anc[2], anc[18], anc[32] );
		CNOT( anc[8], anc[10] );
		CNOT( q[8], anc[32] );
		CNOT( anc[27], anc[28] );
		Toffoli( anc[16], anc[23], anc[2] );
		Toffoli( q[5], anc[17], anc[19] );
		CNOT( anc[7], anc[23] );
		CNOT( anc[30], anc[3] );
		Toffoli( anc[14], anc[19], anc[26] );
		CNOT( anc[38], q[0] );
		CNOT( q[4], anc[19] );
		CNOT( anc[16], q[2] );
		Toffoli( q[1], anc[12], anc[39] );
		Toffoli( anc[45], anc[44], anc[38] );
		Toffoli( anc[40], anc[10], anc[45] );
		Toffoli( anc[8], anc[27], anc[31] );
		CNOT( anc[24], q[8] );
		Toffoli( anc[21], anc[24], q[0] );
		Toffoli( anc[37], anc[13], anc[19] );
		CNOT( anc[24], anc[32] );
		Toffoli( anc[43], anc[23], anc[31] );
		CNOT( anc[1], anc[13] );
		Toffoli( q[1], q[7], anc[43] );
		CNOT( anc[12], anc[6] );
		CNOT( anc[14], anc[35] );
		CNOT( anc[37], anc[7] );
		CNOT( anc[21], q[1] );
		CNOT( anc[19], anc[11] );
		Toffoli( anc[37], anc[28], anc[27] );
		Toffoli( anc[16], anc[24], anc[33] );
		Toffoli( anc[37], anc[44], anc[30] );
		CNOT( anc[34], anc[44] );
		Toffoli( anc[38], q[4], anc[0] );
		Toffoli( anc[24], anc[27], q[7] );
		CNOT( q[2], anc[12] );
		CNOT( anc[25], anc[10] );
		Toffoli( q[3], q[7], anc[38] );
	} Refree(anc, 46) {}
}
// Function 14 with degree 0
// nq: 12, na: 59, ng: 51
void func14(qbit **q, int n) {
printf("func14\n");
fflush(stderr);
	qbit *anc[59]; // ancilla
	qbit *nb[18]; // interacting bits
	qbit *res[9];
	nb[0] = q[8];
	nb[1] = q[0];
	nb[2] = q[6];
	nb[3] = q[10];
	nb[4] = q[3];
	nb[5] = q[3];
	nb[6] = q[4];
	nb[7] = q[11];
	nb[8] = q[6];
	nb[9] = q[7];
	nb[10] = q[8];
	nb[11] = q[1];
	nb[12] = q[3];
	nb[13] = q[5];
	nb[14] = q[0];
	nb[15] = q[6];
	nb[16] = q[1];
	nb[17] = q[2];
	res[0] = q[10];
	res[1] = q[4];
	res[2] = q[1];
	res[3] = q[7];
	res[4] = q[8];
	res[5] = q[11];
	res[6] = q[6];
	res[7] = q[0];
	res[8] = q[2];
	// Leaf function
	Compute (0, 59, 111, 60, 0, 3, 0) {
		acquire(59, anc, 18, nb);
		Toffoli( anc[4], anc[18], anc[52] );
		CNOT( anc[10], anc[40] );
		Toffoli( anc[18], anc[19], anc[12] );
		CNOT( anc[33], anc[19] );
		CNOT( anc[8], anc[46] );
		Toffoli( anc[18], anc[16], anc[1] );
		Toffoli( anc[49], anc[23], anc[41] );
		CNOT( anc[17], anc[24] );
		Toffoli( anc[7], anc[19], anc[16] );
		Toffoli( anc[58], anc[24], anc[22] );
		Toffoli( anc[57], anc[56], anc[18] );
		Toffoli( anc[51], anc[18], anc[30] );
		CNOT( anc[28], anc[49] );
		CNOT( anc[58], anc[54] );
		Toffoli( anc[54], q[8], anc[14] );
		CNOT( anc[33], anc[47] );
		CNOT( anc[15], anc[10] );
		CNOT( anc[32], anc[14] );
		CNOT( anc[3], anc[32] );
		CNOT( q[0], q[6] );
		CNOT( anc[5], anc[56] );
		Toffoli( anc[42], anc[28], q[10] );
		Toffoli( anc[47], q[3], anc[15] );
		Toffoli( anc[24], anc[20], anc[3] );
		CNOT( anc[43], anc[17] );
		Toffoli( anc[13], anc[46], anc[39] );
		Toffoli( anc[28], q[3], anc[39] );
		Toffoli( q[4], anc[3], q[11] );
		Toffoli( q[6], anc[20], anc[42] );
		CNOT( anc[25], anc[45] );
		CNOT( anc[56], anc[52] );
		CNOT( q[7], anc[10] );
		Toffoli( anc[8], q[8], anc[7] );
		Toffoli( anc[9], anc[5], q[1] );
		Toffoli( anc[58], anc[47], anc[28] );
		Toffoli( q[3], anc[7], anc[10] );
		Toffoli( anc[37], q[5], anc[22] );
		CNOT( anc[23], q[0] );
		Toffoli( q[6], anc[33], anc[24] );
		Toffoli( anc[42], anc[26], anc[9] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[4], anc[43], anc[25] );
		CNOT( anc[30], anc[43] );
		Toffoli( anc[54], anc[23], anc[10] );
		CNOT( anc[54], anc[34] );
		CNOT( anc[42], anc[57] );
		CNOT( anc[8], anc[14] );
		Toffoli( anc[7], anc[27], anc[38] );
		CNOT( anc[55], anc[35] );
		Toffoli( anc[17], anc[9], q[2] );
		CNOT( anc[2], anc[13] );
	}
	Store {
		CNOT( q[6], res[0] );
		CNOT( q[8], res[1] );
		CNOT( anc[48], res[2] );
		CNOT( q[11], res[3] );
		CNOT( q[3], res[4] );
		CNOT( anc[46], res[5] );
		CNOT( anc[57], res[6] );
		CNOT( anc[28], res[7] );
		CNOT( anc[12], res[8] );
	}
	Uncompute(res, 0, anc, 59, 111, 60){
		CNOT( anc[2], anc[13] );
		Toffoli( anc[17], anc[9], q[2] );
		CNOT( anc[55], anc[35] );
		Toffoli( anc[7], anc[27], anc[38] );
		CNOT( anc[8], anc[14] );
		CNOT( anc[42], anc[57] );
		CNOT( anc[54], anc[34] );
		Toffoli( anc[54], anc[23], anc[10] );
		CNOT( anc[30], anc[43] );
		Toffoli( anc[4], anc[43], anc[25] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[42], anc[26], anc[9] );
		Toffoli( q[6], anc[33], anc[24] );
		CNOT( anc[23], q[0] );
		Toffoli( anc[37], q[5], anc[22] );
		Toffoli( q[3], anc[7], anc[10] );
		Toffoli( anc[58], anc[47], anc[28] );
		Toffoli( anc[9], anc[5], q[1] );
		Toffoli( anc[8], q[8], anc[7] );
		CNOT( q[7], anc[10] );
		CNOT( anc[56], anc[52] );
		CNOT( anc[25], anc[45] );
		Toffoli( q[6], anc[20], anc[42] );
		Toffoli( q[4], anc[3], q[11] );
		Toffoli( anc[28], q[3], anc[39] );
		Toffoli( anc[13], anc[46], anc[39] );
		CNOT( anc[43], anc[17] );
		Toffoli( anc[24], anc[20], anc[3] );
		Toffoli( anc[47], q[3], anc[15] );
		Toffoli( anc[42], anc[28], q[10] );
		CNOT( anc[5], anc[56] );
		CNOT( q[0], q[6] );
		CNOT( anc[3], anc[32] );
		CNOT( anc[32], anc[14] );
		CNOT( anc[15], anc[10] );
		CNOT( anc[33], anc[47] );
		Toffoli( anc[54], q[8], anc[14] );
		CNOT( anc[58], anc[54] );
		CNOT( anc[28], anc[49] );
		Toffoli( anc[51], anc[18], anc[30] );
		Toffoli( anc[57], anc[56], anc[18] );
		Toffoli( anc[58], anc[24], anc[22] );
		Toffoli( anc[7], anc[19], anc[16] );
		CNOT( anc[17], anc[24] );
		Toffoli( anc[49], anc[23], anc[41] );
		Toffoli( anc[18], anc[16], anc[1] );
		CNOT( anc[8], anc[46] );
		CNOT( anc[33], anc[19] );
		Toffoli( anc[18], anc[19], anc[12] );
		CNOT( anc[10], anc[40] );
		Toffoli( anc[4], anc[18], anc[52] );
	} Free(anc, 59) {}
}
// Function 14 with degree 0
// nq: 12, na: 59, ng: 51
void func14R(qbit **q, int n) {
printf("func14R\n");
fflush(stderr);
	qbit *anc[59]; // ancilla
	qbit *nb[18]; // interacting bits
	qbit *res[9];
	nb[0] = q[8];
	nb[1] = q[0];
	nb[2] = q[6];
	nb[3] = q[10];
	nb[4] = q[3];
	nb[5] = q[3];
	nb[6] = q[4];
	nb[7] = q[11];
	nb[8] = q[6];
	nb[9] = q[7];
	nb[10] = q[8];
	nb[11] = q[1];
	nb[12] = q[3];
	nb[13] = q[5];
	nb[14] = q[0];
	nb[15] = q[6];
	nb[16] = q[1];
	nb[17] = q[2];
	res[0] = q[10];
	res[1] = q[4];
	res[2] = q[1];
	res[3] = q[7];
	res[4] = q[8];
	res[5] = q[11];
	res[6] = q[6];
	res[7] = q[0];
	res[8] = q[2];
	// Leaf function
	_computeModule(0, 59, 111, 60, 0, 3, 0);
	acquire(59, anc, 18, nb);
	Recompute (res, 0, anc, 59, 111, 60){
		CNOT( anc[2], anc[13] );
		Toffoli( anc[17], anc[9], q[2] );
		CNOT( anc[55], anc[35] );
		Toffoli( anc[7], anc[27], anc[38] );
		CNOT( anc[8], anc[14] );
		CNOT( anc[42], anc[57] );
		CNOT( anc[54], anc[34] );
		Toffoli( anc[54], anc[23], anc[10] );
		CNOT( anc[30], anc[43] );
		Toffoli( anc[4], anc[43], anc[25] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[42], anc[26], anc[9] );
		Toffoli( q[6], anc[33], anc[24] );
		CNOT( anc[23], q[0] );
		Toffoli( anc[37], q[5], anc[22] );
		Toffoli( q[3], anc[7], anc[10] );
		Toffoli( anc[58], anc[47], anc[28] );
		Toffoli( anc[9], anc[5], q[1] );
		Toffoli( anc[8], q[8], anc[7] );
		CNOT( q[7], anc[10] );
		CNOT( anc[56], anc[52] );
		CNOT( anc[25], anc[45] );
		Toffoli( q[6], anc[20], anc[42] );
		Toffoli( q[4], anc[3], q[11] );
		Toffoli( anc[28], q[3], anc[39] );
		Toffoli( anc[13], anc[46], anc[39] );
		CNOT( anc[43], anc[17] );
		Toffoli( anc[24], anc[20], anc[3] );
		Toffoli( anc[47], q[3], anc[15] );
		Toffoli( anc[42], anc[28], q[10] );
		CNOT( anc[5], anc[56] );
		CNOT( q[0], q[6] );
		CNOT( anc[3], anc[32] );
		CNOT( anc[32], anc[14] );
		CNOT( anc[15], anc[10] );
		CNOT( anc[33], anc[47] );
		Toffoli( anc[54], q[8], anc[14] );
		CNOT( anc[58], anc[54] );
		CNOT( anc[28], anc[49] );
		Toffoli( anc[51], anc[18], anc[30] );
		Toffoli( anc[57], anc[56], anc[18] );
		Toffoli( anc[58], anc[24], anc[22] );
		Toffoli( anc[7], anc[19], anc[16] );
		CNOT( anc[17], anc[24] );
		Toffoli( anc[49], anc[23], anc[41] );
		Toffoli( anc[18], anc[16], anc[1] );
		CNOT( anc[8], anc[46] );
		CNOT( anc[33], anc[19] );
		Toffoli( anc[18], anc[19], anc[12] );
		CNOT( anc[10], anc[40] );
		Toffoli( anc[4], anc[18], anc[52] );
	}
	Restore {
		CNOT( q[6], res[0] );
		CNOT( q[8], res[1] );
		CNOT( anc[48], res[2] );
		CNOT( q[11], res[3] );
		CNOT( q[3], res[4] );
		CNOT( anc[46], res[5] );
		CNOT( anc[57], res[6] );
		CNOT( anc[28], res[7] );
		CNOT( anc[12], res[8] );
	}
	Unrecompute {
		Toffoli( anc[4], anc[18], anc[52] );
		CNOT( anc[10], anc[40] );
		Toffoli( anc[18], anc[19], anc[12] );
		CNOT( anc[33], anc[19] );
		CNOT( anc[8], anc[46] );
		Toffoli( anc[18], anc[16], anc[1] );
		Toffoli( anc[49], anc[23], anc[41] );
		CNOT( anc[17], anc[24] );
		Toffoli( anc[7], anc[19], anc[16] );
		Toffoli( anc[58], anc[24], anc[22] );
		Toffoli( anc[57], anc[56], anc[18] );
		Toffoli( anc[51], anc[18], anc[30] );
		CNOT( anc[28], anc[49] );
		CNOT( anc[58], anc[54] );
		Toffoli( anc[54], q[8], anc[14] );
		CNOT( anc[33], anc[47] );
		CNOT( anc[15], anc[10] );
		CNOT( anc[32], anc[14] );
		CNOT( anc[3], anc[32] );
		CNOT( q[0], q[6] );
		CNOT( anc[5], anc[56] );
		Toffoli( anc[42], anc[28], q[10] );
		Toffoli( anc[47], q[3], anc[15] );
		Toffoli( anc[24], anc[20], anc[3] );
		CNOT( anc[43], anc[17] );
		Toffoli( anc[13], anc[46], anc[39] );
		Toffoli( anc[28], q[3], anc[39] );
		Toffoli( q[4], anc[3], q[11] );
		Toffoli( q[6], anc[20], anc[42] );
		CNOT( anc[25], anc[45] );
		CNOT( anc[56], anc[52] );
		CNOT( q[7], anc[10] );
		Toffoli( anc[8], q[8], anc[7] );
		Toffoli( anc[9], anc[5], q[1] );
		Toffoli( anc[58], anc[47], anc[28] );
		Toffoli( q[3], anc[7], anc[10] );
		Toffoli( anc[37], q[5], anc[22] );
		CNOT( anc[23], q[0] );
		Toffoli( q[6], anc[33], anc[24] );
		Toffoli( anc[42], anc[26], anc[9] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[4], anc[43], anc[25] );
		CNOT( anc[30], anc[43] );
		Toffoli( anc[54], anc[23], anc[10] );
		CNOT( anc[54], anc[34] );
		CNOT( anc[42], anc[57] );
		CNOT( anc[8], anc[14] );
		Toffoli( anc[7], anc[27], anc[38] );
		CNOT( anc[55], anc[35] );
		Toffoli( anc[17], anc[9], q[2] );
		CNOT( anc[2], anc[13] );
	} Refree(anc, 59) {}
}
// Function 13 with degree 0
// nq: 4, na: 44, ng: 11
void func13(qbit **q, int n) {
printf("func13\n");
fflush(stderr);
	qbit *anc[44]; // ancilla
	qbit *nb[0]; // interacting bits
	qbit *res[3];
	res[0] = q[1];
	res[1] = q[2];
	res[2] = q[0];
	// Leaf function
	Compute (0, 44, 25, 14, 0, 3, 0) {
		acquire(44, anc, 0, nb);
		Toffoli( anc[19], anc[0], anc[37] );
		CNOT( anc[1], anc[11] );
		CNOT( anc[5], anc[12] );
		CNOT( anc[43], anc[7] );
		Toffoli( anc[28], anc[24], anc[16] );
		Toffoli( anc[36], anc[32], anc[14] );
		Toffoli( anc[14], anc[15], anc[25] );
		Toffoli( anc[28], anc[23], anc[27] );
		Toffoli( anc[23], anc[33], anc[16] );
		Toffoli( anc[7], anc[5], anc[1] );
		CNOT( anc[38], anc[19] );
	}
	Store {
		CNOT( anc[12], res[0] );
		CNOT( anc[5], res[1] );
		CNOT( anc[3], res[2] );
	}
	Uncompute(res, 0, anc, 44, 25, 14){
		CNOT( anc[38], anc[19] );
		Toffoli( anc[7], anc[5], anc[1] );
		Toffoli( anc[23], anc[33], anc[16] );
		Toffoli( anc[28], anc[23], anc[27] );
		Toffoli( anc[14], anc[15], anc[25] );
		Toffoli( anc[36], anc[32], anc[14] );
		Toffoli( anc[28], anc[24], anc[16] );
		CNOT( anc[43], anc[7] );
		CNOT( anc[5], anc[12] );
		CNOT( anc[1], anc[11] );
		Toffoli( anc[19], anc[0], anc[37] );
	} Free(anc, 44) {}
}
// Function 13 with degree 0
// nq: 4, na: 44, ng: 11
void func13R(qbit **q, int n) {
printf("func13R\n");
fflush(stderr);
	qbit *anc[44]; // ancilla
	qbit *nb[0]; // interacting bits
	qbit *res[3];
	res[0] = q[1];
	res[1] = q[2];
	res[2] = q[0];
	// Leaf function
	_computeModule(0, 44, 25, 14, 0, 3, 0);
	acquire(44, anc, 0, nb);
	Recompute (res, 0, anc, 44, 25, 14){
		CNOT( anc[38], anc[19] );
		Toffoli( anc[7], anc[5], anc[1] );
		Toffoli( anc[23], anc[33], anc[16] );
		Toffoli( anc[28], anc[23], anc[27] );
		Toffoli( anc[14], anc[15], anc[25] );
		Toffoli( anc[36], anc[32], anc[14] );
		Toffoli( anc[28], anc[24], anc[16] );
		CNOT( anc[43], anc[7] );
		CNOT( anc[5], anc[12] );
		CNOT( anc[1], anc[11] );
		Toffoli( anc[19], anc[0], anc[37] );
	}
	Restore {
		CNOT( anc[12], res[0] );
		CNOT( anc[5], res[1] );
		CNOT( anc[3], res[2] );
	}
	Unrecompute {
		Toffoli( anc[19], anc[0], anc[37] );
		CNOT( anc[1], anc[11] );
		CNOT( anc[5], anc[12] );
		CNOT( anc[43], anc[7] );
		Toffoli( anc[28], anc[24], anc[16] );
		Toffoli( anc[36], anc[32], anc[14] );
		Toffoli( anc[14], anc[15], anc[25] );
		Toffoli( anc[28], anc[23], anc[27] );
		Toffoli( anc[23], anc[33], anc[16] );
		Toffoli( anc[7], anc[5], anc[1] );
		CNOT( anc[38], anc[19] );
	} Refree(anc, 44) {}
}
// Function 12 with degree 0
// nq: 16, na: 1, ng: 107
void func12(qbit **q, int n) {
printf("func12\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[251]; // interacting bits
	qbit *res[1];
	nb[0] = q[11];
	nb[1] = q[13];
	nb[2] = q[6];
	nb[3] = q[8];
	nb[4] = q[3];
	nb[5] = q[8];
	nb[6] = q[11];
	nb[7] = q[14];
	nb[8] = q[1];
	nb[9] = q[15];
	nb[10] = q[9];
	nb[11] = q[11];
	nb[12] = q[13];
	nb[13] = q[7];
	nb[14] = q[10];
	nb[15] = q[9];
	nb[16] = q[3];
	nb[17] = q[10];
	nb[18] = q[11];
	nb[19] = q[9];
	nb[20] = q[12];
	nb[21] = q[10];
	nb[22] = q[12];
	nb[23] = q[5];
	nb[24] = q[3];
	nb[25] = q[14];
	nb[26] = q[2];
	nb[27] = q[1];
	nb[28] = q[0];
	nb[29] = q[15];
	nb[30] = q[11];
	nb[31] = q[6];
	nb[32] = q[1];
	nb[33] = q[0];
	nb[34] = q[14];
	nb[35] = q[13];
	nb[36] = q[5];
	nb[37] = q[14];
	nb[38] = q[14];
	nb[39] = q[10];
	nb[40] = q[5];
	nb[41] = q[3];
	nb[42] = q[1];
	nb[43] = q[15];
	nb[44] = q[6];
	nb[45] = q[8];
	nb[46] = q[7];
	nb[47] = q[15];
	nb[48] = q[11];
	nb[49] = q[7];
	nb[50] = q[12];
	nb[51] = q[15];
	nb[52] = q[13];
	nb[53] = q[5];
	nb[54] = q[10];
	nb[55] = q[2];
	nb[56] = q[10];
	nb[57] = q[3];
	nb[58] = q[12];
	nb[59] = q[9];
	nb[60] = q[12];
	nb[61] = q[5];
	nb[62] = q[6];
	nb[63] = q[1];
	nb[64] = q[9];
	nb[65] = q[2];
	nb[66] = q[6];
	nb[67] = q[5];
	nb[68] = q[14];
	nb[69] = q[0];
	nb[70] = q[0];
	nb[71] = q[8];
	nb[72] = q[10];
	nb[73] = q[7];
	nb[74] = q[9];
	nb[75] = q[11];
	nb[76] = q[6];
	nb[77] = q[5];
	nb[78] = q[5];
	nb[79] = q[7];
	nb[80] = q[10];
	nb[81] = q[6];
	nb[82] = q[7];
	nb[83] = q[13];
	nb[84] = q[14];
	nb[85] = q[14];
	nb[86] = q[0];
	nb[87] = q[14];
	nb[88] = q[11];
	nb[89] = q[10];
	nb[90] = q[5];
	nb[91] = q[7];
	nb[92] = q[0];
	nb[93] = q[11];
	nb[94] = q[13];
	nb[95] = q[0];
	nb[96] = q[14];
	nb[97] = q[5];
	nb[98] = q[13];
	nb[99] = q[14];
	nb[100] = q[7];
	nb[101] = q[6];
	nb[102] = q[8];
	nb[103] = q[3];
	nb[104] = q[13];
	nb[105] = q[6];
	nb[106] = q[5];
	nb[107] = q[11];
	nb[108] = q[15];
	nb[109] = q[7];
	nb[110] = q[15];
	nb[111] = q[2];
	nb[112] = q[14];
	nb[113] = q[2];
	nb[114] = q[5];
	nb[115] = q[6];
	nb[116] = q[14];
	nb[117] = q[0];
	nb[118] = q[15];
	nb[119] = q[3];
	nb[120] = q[9];
	nb[121] = q[1];
	nb[122] = q[8];
	nb[123] = q[10];
	nb[124] = q[13];
	nb[125] = q[3];
	nb[126] = q[4];
	nb[127] = q[1];
	nb[128] = q[9];
	nb[129] = q[6];
	nb[130] = q[5];
	nb[131] = q[7];
	nb[132] = q[0];
	nb[133] = q[4];
	nb[134] = q[6];
	nb[135] = q[2];
	nb[136] = q[1];
	nb[137] = q[8];
	nb[138] = q[7];
	nb[139] = q[15];
	nb[140] = q[1];
	nb[141] = q[5];
	nb[142] = q[15];
	nb[143] = q[7];
	nb[144] = q[14];
	nb[145] = q[0];
	nb[146] = q[2];
	nb[147] = q[8];
	nb[148] = q[1];
	nb[149] = q[8];
	nb[150] = q[12];
	nb[151] = q[10];
	nb[152] = q[12];
	nb[153] = q[0];
	nb[154] = q[1];
	nb[155] = q[6];
	nb[156] = q[6];
	nb[157] = q[8];
	nb[158] = q[8];
	nb[159] = q[7];
	nb[160] = q[10];
	nb[161] = q[14];
	nb[162] = q[9];
	nb[163] = q[12];
	nb[164] = q[6];
	nb[165] = q[0];
	nb[166] = q[6];
	nb[167] = q[8];
	nb[168] = q[2];
	nb[169] = q[8];
	nb[170] = q[1];
	nb[171] = q[9];
	nb[172] = q[12];
	nb[173] = q[15];
	nb[174] = q[12];
	nb[175] = q[6];
	nb[176] = q[8];
	nb[177] = q[6];
	nb[178] = q[15];
	nb[179] = q[5];
	nb[180] = q[3];
	nb[181] = q[15];
	nb[182] = q[9];
	nb[183] = q[0];
	nb[184] = q[12];
	nb[185] = q[2];
	nb[186] = q[9];
	nb[187] = q[14];
	nb[188] = q[4];
	nb[189] = q[6];
	nb[190] = q[7];
	nb[191] = q[14];
	nb[192] = q[0];
	nb[193] = q[7];
	nb[194] = q[7];
	nb[195] = q[15];
	nb[196] = q[9];
	nb[197] = q[3];
	nb[198] = q[6];
	nb[199] = q[11];
	nb[200] = q[4];
	nb[201] = q[11];
	nb[202] = q[5];
	nb[203] = q[13];
	nb[204] = q[9];
	nb[205] = q[4];
	nb[206] = q[5];
	nb[207] = q[7];
	nb[208] = q[5];
	nb[209] = q[11];
	nb[210] = q[8];
	nb[211] = q[4];
	nb[212] = q[1];
	nb[213] = q[1];
	nb[214] = q[0];
	nb[215] = q[7];
	nb[216] = q[6];
	nb[217] = q[8];
	nb[218] = q[15];
	nb[219] = q[3];
	nb[220] = q[2];
	nb[221] = q[1];
	nb[222] = q[12];
	nb[223] = q[9];
	nb[224] = q[11];
	nb[225] = q[6];
	nb[226] = q[8];
	nb[227] = q[3];
	nb[228] = q[8];
	nb[229] = q[11];
	nb[230] = q[1];
	nb[231] = q[6];
	nb[232] = q[3];
	nb[233] = q[10];
	nb[234] = q[9];
	nb[235] = q[3];
	nb[236] = q[12];
	nb[237] = q[7];
	nb[238] = q[10];
	nb[239] = q[4];
	nb[240] = q[13];
	nb[241] = q[1];
	nb[242] = q[15];
	nb[243] = q[14];
	nb[244] = q[2];
	nb[245] = q[3];
	nb[246] = q[10];
	nb[247] = q[5];
	nb[248] = q[10];
	nb[249] = q[1];
	nb[250] = q[6];
	res[0] = q[15];
	// Leaf function
	Compute (0, 1, 215, 108, 0, 3, 0) {
		acquire(1, anc, 251, nb);
		CNOT( q[11], q[13] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[8], q[11], q[14] );
		CNOT( q[1], q[15] );
		Toffoli( q[9], q[11], q[13] );
		Toffoli( q[7], q[10], q[9] );
		CNOT( q[3], q[10] );
		Toffoli( q[11], q[9], q[12] );
		Toffoli( q[10], q[12], q[5] );
		Toffoli( q[3], q[14], q[2] );
		Toffoli( q[1], q[0], q[15] );
		Toffoli( q[11], anc[0], q[6] );
		CNOT( q[1], q[0] );
		CNOT( q[14], q[13] );
		CNOT( q[5], q[14] );
		CNOT( q[14], q[10] );
		CNOT( q[5], q[3] );
		CNOT( q[1], q[15] );
		CNOT( q[6], q[8] );
		Toffoli( q[7], q[15], q[11] );
		CNOT( q[7], q[12] );
		CNOT( q[15], q[13] );
		CNOT( q[5], q[10] );
		Toffoli( q[2], q[10], q[3] );
		CNOT( q[12], anc[0] );
		Toffoli( q[9], q[12], q[5] );
		Toffoli( q[6], q[1], q[9] );
		CNOT( q[2], q[6] );
		Toffoli( q[5], q[14], q[0] );
		Toffoli( q[0], q[8], q[10] );
		CNOT( q[7], q[9] );
		Toffoli( q[11], q[6], q[5] );
		Toffoli( q[5], q[7], q[10] );
		CNOT( q[6], q[7] );
		CNOT( q[13], q[14] );
		CNOT( q[14], q[0] );
		Toffoli( q[14], q[11], q[10] );
		Toffoli( q[5], q[7], q[0] );
		CNOT( q[11], q[13] );
		Toffoli( q[0], q[14], q[5] );
		Toffoli( q[13], q[14], q[7] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[13], q[6], q[5] );
		Toffoli( q[11], q[15], q[7] );
		CNOT( q[15], q[2] );
		CNOT( q[14], q[2] );
		CNOT( q[5], q[6] );
		Toffoli( q[14], q[0], q[15] );
		Toffoli( q[3], q[9], q[1] );
		CNOT( q[8], q[10] );
		Toffoli( q[13], q[3], anc[0] );
		Toffoli( q[4], q[1], q[9] );
		Toffoli( q[6], q[5], q[7] );
		CNOT( q[0], q[4] );
		CNOT( q[6], q[2] );
		Toffoli( q[1], q[8], q[7] );
		Toffoli( anc[0], q[15], q[1] );
		Toffoli( q[5], q[15], q[7] );
		CNOT( q[14], q[0] );
		Toffoli( q[2], q[8], q[1] );
		Toffoli( q[8], q[12], q[10] );
		CNOT( q[12], q[0] );
		CNOT( q[1], q[6] );
		CNOT( q[6], q[8] );
		CNOT( q[8], q[7] );
		CNOT( anc[0], q[10] );
		Toffoli( q[14], q[9], q[12] );
		CNOT( anc[0], q[6] );
		Toffoli( q[0], q[6], q[8] );
		CNOT( q[2], q[8] );
		Toffoli( anc[0], q[1], q[9] );
		CNOT( q[12], q[15] );
		CNOT( q[12], q[6] );
		Toffoli( q[8], q[6], q[15] );
		CNOT( q[5], q[3] );
		CNOT( q[15], q[9] );
		CNOT( q[0], q[12] );
		CNOT( q[2], q[9] );
		CNOT( q[14], q[4] );
		Toffoli( anc[0], q[6], q[7] );
		Toffoli( q[14], q[0], q[7] );
		CNOT( q[7], q[15] );
		Toffoli( q[9], q[3], q[6] );
		CNOT( q[11], q[4] );
		Toffoli( q[11], q[5], q[13] );
		CNOT( q[9], q[4] );
		CNOT( q[5], q[7] );
		CNOT( q[5], q[11] );
		CNOT( q[8], anc[0] );
		CNOT( q[4], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[7], q[6], q[8] );
		Toffoli( q[15], q[3], anc[0] );
		CNOT( anc[0], q[2] );
		CNOT( q[1], anc[0] );
		Toffoli( q[12], q[9], q[11] );
		Toffoli( q[6], q[8], q[3] );
		CNOT( q[8], q[11] );
		CNOT( q[1], q[6] );
		CNOT( q[3], anc[0] );
		Toffoli( q[10], q[9], anc[0] );
		Toffoli( q[3], q[12], q[7] );
		CNOT( q[10], q[4] );
		CNOT( q[13], q[1] );
		Toffoli( q[15], q[14], q[2] );
		Toffoli( q[3], q[10], q[5] );
		Toffoli( q[10], q[1], q[6] );
	}
	Store {
		CNOT( anc[0], res[0] );
	}
	Uncompute(res, 0, anc, 1, 215, 108){
		Toffoli( q[10], q[1], q[6] );
		Toffoli( q[3], q[10], q[5] );
		Toffoli( q[15], q[14], q[2] );
		CNOT( q[13], q[1] );
		CNOT( q[10], q[4] );
		Toffoli( q[3], q[12], q[7] );
		Toffoli( q[10], q[9], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], q[6] );
		CNOT( q[8], q[11] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[12], q[9], q[11] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[2] );
		Toffoli( q[15], q[3], anc[0] );
		Toffoli( q[7], q[6], q[8] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[4], q[1] );
		CNOT( q[8], anc[0] );
		CNOT( q[5], q[11] );
		CNOT( q[5], q[7] );
		CNOT( q[9], q[4] );
		Toffoli( q[11], q[5], q[13] );
		CNOT( q[11], q[4] );
		Toffoli( q[9], q[3], q[6] );
		CNOT( q[7], q[15] );
		Toffoli( q[14], q[0], q[7] );
		Toffoli( anc[0], q[6], q[7] );
		CNOT( q[14], q[4] );
		CNOT( q[2], q[9] );
		CNOT( q[0], q[12] );
		CNOT( q[15], q[9] );
		CNOT( q[5], q[3] );
		Toffoli( q[8], q[6], q[15] );
		CNOT( q[12], q[6] );
		CNOT( q[12], q[15] );
		Toffoli( anc[0], q[1], q[9] );
		CNOT( q[2], q[8] );
		Toffoli( q[0], q[6], q[8] );
		CNOT( anc[0], q[6] );
		Toffoli( q[14], q[9], q[12] );
		CNOT( anc[0], q[10] );
		CNOT( q[8], q[7] );
		CNOT( q[6], q[8] );
		CNOT( q[1], q[6] );
		CNOT( q[12], q[0] );
		Toffoli( q[8], q[12], q[10] );
		Toffoli( q[2], q[8], q[1] );
		CNOT( q[14], q[0] );
		Toffoli( q[5], q[15], q[7] );
		Toffoli( anc[0], q[15], q[1] );
		Toffoli( q[1], q[8], q[7] );
		CNOT( q[6], q[2] );
		CNOT( q[0], q[4] );
		Toffoli( q[6], q[5], q[7] );
		Toffoli( q[4], q[1], q[9] );
		Toffoli( q[13], q[3], anc[0] );
		CNOT( q[8], q[10] );
		Toffoli( q[3], q[9], q[1] );
		Toffoli( q[14], q[0], q[15] );
		CNOT( q[5], q[6] );
		CNOT( q[14], q[2] );
		CNOT( q[15], q[2] );
		Toffoli( q[11], q[15], q[7] );
		Toffoli( q[13], q[6], q[5] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[13], q[14], q[7] );
		Toffoli( q[0], q[14], q[5] );
		CNOT( q[11], q[13] );
		Toffoli( q[5], q[7], q[0] );
		Toffoli( q[14], q[11], q[10] );
		CNOT( q[14], q[0] );
		CNOT( q[13], q[14] );
		CNOT( q[6], q[7] );
		Toffoli( q[5], q[7], q[10] );
		Toffoli( q[11], q[6], q[5] );
		CNOT( q[7], q[9] );
		Toffoli( q[0], q[8], q[10] );
		Toffoli( q[5], q[14], q[0] );
		CNOT( q[2], q[6] );
		Toffoli( q[6], q[1], q[9] );
		Toffoli( q[9], q[12], q[5] );
		CNOT( q[12], anc[0] );
		Toffoli( q[2], q[10], q[3] );
		CNOT( q[5], q[10] );
		CNOT( q[15], q[13] );
		CNOT( q[7], q[12] );
		Toffoli( q[7], q[15], q[11] );
		CNOT( q[6], q[8] );
		CNOT( q[1], q[15] );
		CNOT( q[5], q[3] );
		CNOT( q[14], q[10] );
		CNOT( q[5], q[14] );
		CNOT( q[14], q[13] );
		CNOT( q[1], q[0] );
		Toffoli( q[11], anc[0], q[6] );
		Toffoli( q[1], q[0], q[15] );
		Toffoli( q[3], q[14], q[2] );
		Toffoli( q[10], q[12], q[5] );
		Toffoli( q[11], q[9], q[12] );
		CNOT( q[3], q[10] );
		Toffoli( q[7], q[10], q[9] );
		Toffoli( q[9], q[11], q[13] );
		CNOT( q[1], q[15] );
		Toffoli( q[8], q[11], q[14] );
		Toffoli( q[6], q[8], q[3] );
		CNOT( q[11], q[13] );
	} Free(anc, 1) {}
}
// Function 12 with degree 0
// nq: 16, na: 1, ng: 107
void func12R(qbit **q, int n) {
printf("func12R\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[251]; // interacting bits
	qbit *res[1];
	nb[0] = q[11];
	nb[1] = q[13];
	nb[2] = q[6];
	nb[3] = q[8];
	nb[4] = q[3];
	nb[5] = q[8];
	nb[6] = q[11];
	nb[7] = q[14];
	nb[8] = q[1];
	nb[9] = q[15];
	nb[10] = q[9];
	nb[11] = q[11];
	nb[12] = q[13];
	nb[13] = q[7];
	nb[14] = q[10];
	nb[15] = q[9];
	nb[16] = q[3];
	nb[17] = q[10];
	nb[18] = q[11];
	nb[19] = q[9];
	nb[20] = q[12];
	nb[21] = q[10];
	nb[22] = q[12];
	nb[23] = q[5];
	nb[24] = q[3];
	nb[25] = q[14];
	nb[26] = q[2];
	nb[27] = q[1];
	nb[28] = q[0];
	nb[29] = q[15];
	nb[30] = q[11];
	nb[31] = q[6];
	nb[32] = q[1];
	nb[33] = q[0];
	nb[34] = q[14];
	nb[35] = q[13];
	nb[36] = q[5];
	nb[37] = q[14];
	nb[38] = q[14];
	nb[39] = q[10];
	nb[40] = q[5];
	nb[41] = q[3];
	nb[42] = q[1];
	nb[43] = q[15];
	nb[44] = q[6];
	nb[45] = q[8];
	nb[46] = q[7];
	nb[47] = q[15];
	nb[48] = q[11];
	nb[49] = q[7];
	nb[50] = q[12];
	nb[51] = q[15];
	nb[52] = q[13];
	nb[53] = q[5];
	nb[54] = q[10];
	nb[55] = q[2];
	nb[56] = q[10];
	nb[57] = q[3];
	nb[58] = q[12];
	nb[59] = q[9];
	nb[60] = q[12];
	nb[61] = q[5];
	nb[62] = q[6];
	nb[63] = q[1];
	nb[64] = q[9];
	nb[65] = q[2];
	nb[66] = q[6];
	nb[67] = q[5];
	nb[68] = q[14];
	nb[69] = q[0];
	nb[70] = q[0];
	nb[71] = q[8];
	nb[72] = q[10];
	nb[73] = q[7];
	nb[74] = q[9];
	nb[75] = q[11];
	nb[76] = q[6];
	nb[77] = q[5];
	nb[78] = q[5];
	nb[79] = q[7];
	nb[80] = q[10];
	nb[81] = q[6];
	nb[82] = q[7];
	nb[83] = q[13];
	nb[84] = q[14];
	nb[85] = q[14];
	nb[86] = q[0];
	nb[87] = q[14];
	nb[88] = q[11];
	nb[89] = q[10];
	nb[90] = q[5];
	nb[91] = q[7];
	nb[92] = q[0];
	nb[93] = q[11];
	nb[94] = q[13];
	nb[95] = q[0];
	nb[96] = q[14];
	nb[97] = q[5];
	nb[98] = q[13];
	nb[99] = q[14];
	nb[100] = q[7];
	nb[101] = q[6];
	nb[102] = q[8];
	nb[103] = q[3];
	nb[104] = q[13];
	nb[105] = q[6];
	nb[106] = q[5];
	nb[107] = q[11];
	nb[108] = q[15];
	nb[109] = q[7];
	nb[110] = q[15];
	nb[111] = q[2];
	nb[112] = q[14];
	nb[113] = q[2];
	nb[114] = q[5];
	nb[115] = q[6];
	nb[116] = q[14];
	nb[117] = q[0];
	nb[118] = q[15];
	nb[119] = q[3];
	nb[120] = q[9];
	nb[121] = q[1];
	nb[122] = q[8];
	nb[123] = q[10];
	nb[124] = q[13];
	nb[125] = q[3];
	nb[126] = q[4];
	nb[127] = q[1];
	nb[128] = q[9];
	nb[129] = q[6];
	nb[130] = q[5];
	nb[131] = q[7];
	nb[132] = q[0];
	nb[133] = q[4];
	nb[134] = q[6];
	nb[135] = q[2];
	nb[136] = q[1];
	nb[137] = q[8];
	nb[138] = q[7];
	nb[139] = q[15];
	nb[140] = q[1];
	nb[141] = q[5];
	nb[142] = q[15];
	nb[143] = q[7];
	nb[144] = q[14];
	nb[145] = q[0];
	nb[146] = q[2];
	nb[147] = q[8];
	nb[148] = q[1];
	nb[149] = q[8];
	nb[150] = q[12];
	nb[151] = q[10];
	nb[152] = q[12];
	nb[153] = q[0];
	nb[154] = q[1];
	nb[155] = q[6];
	nb[156] = q[6];
	nb[157] = q[8];
	nb[158] = q[8];
	nb[159] = q[7];
	nb[160] = q[10];
	nb[161] = q[14];
	nb[162] = q[9];
	nb[163] = q[12];
	nb[164] = q[6];
	nb[165] = q[0];
	nb[166] = q[6];
	nb[167] = q[8];
	nb[168] = q[2];
	nb[169] = q[8];
	nb[170] = q[1];
	nb[171] = q[9];
	nb[172] = q[12];
	nb[173] = q[15];
	nb[174] = q[12];
	nb[175] = q[6];
	nb[176] = q[8];
	nb[177] = q[6];
	nb[178] = q[15];
	nb[179] = q[5];
	nb[180] = q[3];
	nb[181] = q[15];
	nb[182] = q[9];
	nb[183] = q[0];
	nb[184] = q[12];
	nb[185] = q[2];
	nb[186] = q[9];
	nb[187] = q[14];
	nb[188] = q[4];
	nb[189] = q[6];
	nb[190] = q[7];
	nb[191] = q[14];
	nb[192] = q[0];
	nb[193] = q[7];
	nb[194] = q[7];
	nb[195] = q[15];
	nb[196] = q[9];
	nb[197] = q[3];
	nb[198] = q[6];
	nb[199] = q[11];
	nb[200] = q[4];
	nb[201] = q[11];
	nb[202] = q[5];
	nb[203] = q[13];
	nb[204] = q[9];
	nb[205] = q[4];
	nb[206] = q[5];
	nb[207] = q[7];
	nb[208] = q[5];
	nb[209] = q[11];
	nb[210] = q[8];
	nb[211] = q[4];
	nb[212] = q[1];
	nb[213] = q[1];
	nb[214] = q[0];
	nb[215] = q[7];
	nb[216] = q[6];
	nb[217] = q[8];
	nb[218] = q[15];
	nb[219] = q[3];
	nb[220] = q[2];
	nb[221] = q[1];
	nb[222] = q[12];
	nb[223] = q[9];
	nb[224] = q[11];
	nb[225] = q[6];
	nb[226] = q[8];
	nb[227] = q[3];
	nb[228] = q[8];
	nb[229] = q[11];
	nb[230] = q[1];
	nb[231] = q[6];
	nb[232] = q[3];
	nb[233] = q[10];
	nb[234] = q[9];
	nb[235] = q[3];
	nb[236] = q[12];
	nb[237] = q[7];
	nb[238] = q[10];
	nb[239] = q[4];
	nb[240] = q[13];
	nb[241] = q[1];
	nb[242] = q[15];
	nb[243] = q[14];
	nb[244] = q[2];
	nb[245] = q[3];
	nb[246] = q[10];
	nb[247] = q[5];
	nb[248] = q[10];
	nb[249] = q[1];
	nb[250] = q[6];
	res[0] = q[15];
	// Leaf function
	_computeModule(0, 1, 215, 108, 0, 3, 0);
	acquire(1, anc, 251, nb);
	Recompute (res, 0, anc, 1, 215, 108){
		Toffoli( q[10], q[1], q[6] );
		Toffoli( q[3], q[10], q[5] );
		Toffoli( q[15], q[14], q[2] );
		CNOT( q[13], q[1] );
		CNOT( q[10], q[4] );
		Toffoli( q[3], q[12], q[7] );
		Toffoli( q[10], q[9], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], q[6] );
		CNOT( q[8], q[11] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[12], q[9], q[11] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[2] );
		Toffoli( q[15], q[3], anc[0] );
		Toffoli( q[7], q[6], q[8] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[4], q[1] );
		CNOT( q[8], anc[0] );
		CNOT( q[5], q[11] );
		CNOT( q[5], q[7] );
		CNOT( q[9], q[4] );
		Toffoli( q[11], q[5], q[13] );
		CNOT( q[11], q[4] );
		Toffoli( q[9], q[3], q[6] );
		CNOT( q[7], q[15] );
		Toffoli( q[14], q[0], q[7] );
		Toffoli( anc[0], q[6], q[7] );
		CNOT( q[14], q[4] );
		CNOT( q[2], q[9] );
		CNOT( q[0], q[12] );
		CNOT( q[15], q[9] );
		CNOT( q[5], q[3] );
		Toffoli( q[8], q[6], q[15] );
		CNOT( q[12], q[6] );
		CNOT( q[12], q[15] );
		Toffoli( anc[0], q[1], q[9] );
		CNOT( q[2], q[8] );
		Toffoli( q[0], q[6], q[8] );
		CNOT( anc[0], q[6] );
		Toffoli( q[14], q[9], q[12] );
		CNOT( anc[0], q[10] );
		CNOT( q[8], q[7] );
		CNOT( q[6], q[8] );
		CNOT( q[1], q[6] );
		CNOT( q[12], q[0] );
		Toffoli( q[8], q[12], q[10] );
		Toffoli( q[2], q[8], q[1] );
		CNOT( q[14], q[0] );
		Toffoli( q[5], q[15], q[7] );
		Toffoli( anc[0], q[15], q[1] );
		Toffoli( q[1], q[8], q[7] );
		CNOT( q[6], q[2] );
		CNOT( q[0], q[4] );
		Toffoli( q[6], q[5], q[7] );
		Toffoli( q[4], q[1], q[9] );
		Toffoli( q[13], q[3], anc[0] );
		CNOT( q[8], q[10] );
		Toffoli( q[3], q[9], q[1] );
		Toffoli( q[14], q[0], q[15] );
		CNOT( q[5], q[6] );
		CNOT( q[14], q[2] );
		CNOT( q[15], q[2] );
		Toffoli( q[11], q[15], q[7] );
		Toffoli( q[13], q[6], q[5] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[13], q[14], q[7] );
		Toffoli( q[0], q[14], q[5] );
		CNOT( q[11], q[13] );
		Toffoli( q[5], q[7], q[0] );
		Toffoli( q[14], q[11], q[10] );
		CNOT( q[14], q[0] );
		CNOT( q[13], q[14] );
		CNOT( q[6], q[7] );
		Toffoli( q[5], q[7], q[10] );
		Toffoli( q[11], q[6], q[5] );
		CNOT( q[7], q[9] );
		Toffoli( q[0], q[8], q[10] );
		Toffoli( q[5], q[14], q[0] );
		CNOT( q[2], q[6] );
		Toffoli( q[6], q[1], q[9] );
		Toffoli( q[9], q[12], q[5] );
		CNOT( q[12], anc[0] );
		Toffoli( q[2], q[10], q[3] );
		CNOT( q[5], q[10] );
		CNOT( q[15], q[13] );
		CNOT( q[7], q[12] );
		Toffoli( q[7], q[15], q[11] );
		CNOT( q[6], q[8] );
		CNOT( q[1], q[15] );
		CNOT( q[5], q[3] );
		CNOT( q[14], q[10] );
		CNOT( q[5], q[14] );
		CNOT( q[14], q[13] );
		CNOT( q[1], q[0] );
		Toffoli( q[11], anc[0], q[6] );
		Toffoli( q[1], q[0], q[15] );
		Toffoli( q[3], q[14], q[2] );
		Toffoli( q[10], q[12], q[5] );
		Toffoli( q[11], q[9], q[12] );
		CNOT( q[3], q[10] );
		Toffoli( q[7], q[10], q[9] );
		Toffoli( q[9], q[11], q[13] );
		CNOT( q[1], q[15] );
		Toffoli( q[8], q[11], q[14] );
		Toffoli( q[6], q[8], q[3] );
		CNOT( q[11], q[13] );
	}
	Restore {
		CNOT( anc[0], res[0] );
	}
	Unrecompute {
		CNOT( q[11], q[13] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[8], q[11], q[14] );
		CNOT( q[1], q[15] );
		Toffoli( q[9], q[11], q[13] );
		Toffoli( q[7], q[10], q[9] );
		CNOT( q[3], q[10] );
		Toffoli( q[11], q[9], q[12] );
		Toffoli( q[10], q[12], q[5] );
		Toffoli( q[3], q[14], q[2] );
		Toffoli( q[1], q[0], q[15] );
		Toffoli( q[11], anc[0], q[6] );
		CNOT( q[1], q[0] );
		CNOT( q[14], q[13] );
		CNOT( q[5], q[14] );
		CNOT( q[14], q[10] );
		CNOT( q[5], q[3] );
		CNOT( q[1], q[15] );
		CNOT( q[6], q[8] );
		Toffoli( q[7], q[15], q[11] );
		CNOT( q[7], q[12] );
		CNOT( q[15], q[13] );
		CNOT( q[5], q[10] );
		Toffoli( q[2], q[10], q[3] );
		CNOT( q[12], anc[0] );
		Toffoli( q[9], q[12], q[5] );
		Toffoli( q[6], q[1], q[9] );
		CNOT( q[2], q[6] );
		Toffoli( q[5], q[14], q[0] );
		Toffoli( q[0], q[8], q[10] );
		CNOT( q[7], q[9] );
		Toffoli( q[11], q[6], q[5] );
		Toffoli( q[5], q[7], q[10] );
		CNOT( q[6], q[7] );
		CNOT( q[13], q[14] );
		CNOT( q[14], q[0] );
		Toffoli( q[14], q[11], q[10] );
		Toffoli( q[5], q[7], q[0] );
		CNOT( q[11], q[13] );
		Toffoli( q[0], q[14], q[5] );
		Toffoli( q[13], q[14], q[7] );
		Toffoli( q[6], q[8], q[3] );
		Toffoli( q[13], q[6], q[5] );
		Toffoli( q[11], q[15], q[7] );
		CNOT( q[15], q[2] );
		CNOT( q[14], q[2] );
		CNOT( q[5], q[6] );
		Toffoli( q[14], q[0], q[15] );
		Toffoli( q[3], q[9], q[1] );
		CNOT( q[8], q[10] );
		Toffoli( q[13], q[3], anc[0] );
		Toffoli( q[4], q[1], q[9] );
		Toffoli( q[6], q[5], q[7] );
		CNOT( q[0], q[4] );
		CNOT( q[6], q[2] );
		Toffoli( q[1], q[8], q[7] );
		Toffoli( anc[0], q[15], q[1] );
		Toffoli( q[5], q[15], q[7] );
		CNOT( q[14], q[0] );
		Toffoli( q[2], q[8], q[1] );
		Toffoli( q[8], q[12], q[10] );
		CNOT( q[12], q[0] );
		CNOT( q[1], q[6] );
		CNOT( q[6], q[8] );
		CNOT( q[8], q[7] );
		CNOT( anc[0], q[10] );
		Toffoli( q[14], q[9], q[12] );
		CNOT( anc[0], q[6] );
		Toffoli( q[0], q[6], q[8] );
		CNOT( q[2], q[8] );
		Toffoli( anc[0], q[1], q[9] );
		CNOT( q[12], q[15] );
		CNOT( q[12], q[6] );
		Toffoli( q[8], q[6], q[15] );
		CNOT( q[5], q[3] );
		CNOT( q[15], q[9] );
		CNOT( q[0], q[12] );
		CNOT( q[2], q[9] );
		CNOT( q[14], q[4] );
		Toffoli( anc[0], q[6], q[7] );
		Toffoli( q[14], q[0], q[7] );
		CNOT( q[7], q[15] );
		Toffoli( q[9], q[3], q[6] );
		CNOT( q[11], q[4] );
		Toffoli( q[11], q[5], q[13] );
		CNOT( q[9], q[4] );
		CNOT( q[5], q[7] );
		CNOT( q[5], q[11] );
		CNOT( q[8], anc[0] );
		CNOT( q[4], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[7], q[6], q[8] );
		Toffoli( q[15], q[3], anc[0] );
		CNOT( anc[0], q[2] );
		CNOT( q[1], anc[0] );
		Toffoli( q[12], q[9], q[11] );
		Toffoli( q[6], q[8], q[3] );
		CNOT( q[8], q[11] );
		CNOT( q[1], q[6] );
		CNOT( q[3], anc[0] );
		Toffoli( q[10], q[9], anc[0] );
		Toffoli( q[3], q[12], q[7] );
		CNOT( q[10], q[4] );
		CNOT( q[13], q[1] );
		Toffoli( q[15], q[14], q[2] );
		Toffoli( q[3], q[10], q[5] );
		Toffoli( q[10], q[1], q[6] );
	} Refree(anc, 1) {}
}
// Function 11 with degree 0
// nq: 3, na: 19, ng: 96
void func11(qbit **q, int n) {
printf("func11\n");
fflush(stderr);
	qbit *anc[19]; // ancilla
	qbit *nb[33]; // interacting bits
	qbit *res[2];
	nb[0] = q[0];
	nb[1] = q[2];
	nb[2] = q[1];
	nb[3] = q[0];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[0];
	nb[7] = q[1];
	nb[8] = q[1];
	nb[9] = q[2];
	nb[10] = q[2];
	nb[11] = q[0];
	nb[12] = q[2];
	nb[13] = q[2];
	nb[14] = q[1];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[2];
	nb[18] = q[0];
	nb[19] = q[2];
	nb[20] = q[2];
	nb[21] = q[1];
	nb[22] = q[0];
	nb[23] = q[0];
	nb[24] = q[2];
	nb[25] = q[2];
	nb[26] = q[0];
	nb[27] = q[2];
	nb[28] = q[2];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[1];
	res[0] = q[1];
	res[1] = q[0];
	// Leaf function
	Compute (0, 19, 194, 98, 0, 4, 0) {
		acquire(19, anc, 33, nb);
		Toffoli( anc[13], anc[12], anc[3] );
		CNOT( anc[14], anc[5] );
		CNOT( q[0], anc[3] );
		CNOT( anc[14], anc[17] );
		Toffoli( q[2], anc[7], anc[16] );
		Toffoli( anc[14], anc[5], anc[12] );
		CNOT( anc[6], anc[10] );
		Toffoli( anc[14], anc[13], q[1] );
		Toffoli( anc[11], anc[10], anc[4] );
		Toffoli( q[0], q[2], anc[6] );
		Toffoli( q[1], anc[18], anc[17] );
		CNOT( anc[0], anc[13] );
		Toffoli( anc[1], anc[18], anc[12] );
		Toffoli( anc[7], anc[0], anc[6] );
		Toffoli( anc[3], anc[13], anc[2] );
		CNOT( anc[12], q[0] );
		Toffoli( q[1], anc[13], anc[10] );
		Toffoli( anc[1], anc[8], anc[9] );
		CNOT( anc[3], anc[15] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[18], anc[7] );
		Toffoli( anc[17], anc[14], anc[10] );
		CNOT( anc[17], anc[2] );
		CNOT( anc[9], anc[13] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[15], q[1] );
		CNOT( anc[15], anc[3] );
		Toffoli( anc[15], anc[8], anc[9] );
		Toffoli( anc[5], anc[2], anc[9] );
		Toffoli( anc[9], anc[17], anc[8] );
		CNOT( anc[6], anc[14] );
		Toffoli( anc[3], anc[17], anc[13] );
		CNOT( anc[1], anc[10] );
		Toffoli( anc[2], anc[18], anc[9] );
		Toffoli( anc[12], anc[2], anc[18] );
		Toffoli( anc[8], anc[1], anc[0] );
		Toffoli( q[2], anc[6], anc[8] );
		Toffoli( anc[8], anc[6], q[2] );
		Toffoli( anc[2], anc[13], anc[12] );
		Toffoli( q[0], anc[15], q[2] );
		Toffoli( q[2], anc[18], anc[0] );
		Toffoli( anc[6], anc[3], anc[12] );
		CNOT( anc[13], anc[0] );
		Toffoli( anc[2], anc[5], anc[15] );
		Toffoli( anc[1], anc[2], anc[16] );
		CNOT( anc[12], anc[8] );
		CNOT( anc[9], anc[13] );
		Toffoli( anc[18], anc[0], anc[10] );
		Toffoli( anc[7], anc[17], anc[11] );
		Toffoli( anc[14], anc[13], anc[16] );
		Toffoli( anc[10], anc[18], anc[8] );
		CNOT( anc[2], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[14], q[2], q[0] );
		Toffoli( anc[7], anc[3], anc[9] );
		Toffoli( anc[14], anc[4], anc[7] );
		CNOT( q[2], anc[4] );
		CNOT( anc[8], anc[18] );
		CNOT( anc[1], q[2] );
		Toffoli( anc[6], anc[4], anc[5] );
		Toffoli( anc[0], anc[5], q[1] );
		CNOT( anc[15], anc[5] );
		Toffoli( anc[8], anc[3], anc[6] );
		CNOT( anc[14], q[0] );
		Toffoli( anc[9], anc[4], anc[2] );
		CNOT( anc[17], anc[4] );
		CNOT( anc[13], q[0] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[11], anc[10], anc[9] );
		CNOT( anc[0], anc[13] );
		Toffoli( anc[11], anc[13], anc[2] );
		CNOT( anc[12], anc[11] );
		Toffoli( anc[11], anc[18], anc[7] );
		Toffoli( anc[15], q[2], anc[3] );
		CNOT( q[2], anc[12] );
		CNOT( q[0], anc[4] );
		Toffoli( anc[12], anc[1], anc[2] );
		CNOT( anc[2], anc[11] );
		Toffoli( q[2], anc[14], anc[0] );
		Toffoli( anc[18], anc[1], anc[17] );
		CNOT( anc[16], anc[17] );
		Toffoli( anc[12], q[2], anc[14] );
		CNOT( anc[4], anc[8] );
		CNOT( anc[8], anc[9] );
		CNOT( anc[10], anc[0] );
		CNOT( q[0], anc[17] );
		Toffoli( anc[18], anc[12], anc[16] );
		Toffoli( anc[6], q[0], anc[1] );
		Toffoli( anc[0], anc[2], anc[12] );
		Toffoli( anc[10], anc[17], anc[16] );
		Toffoli( anc[14], anc[0], anc[17] );
		Toffoli( anc[6], anc[9], q[0] );
		CNOT( q[1], anc[13] );
		Toffoli( anc[2], anc[15], anc[13] );
		CNOT( anc[14], anc[1] );
	}
	Store {
		CNOT( anc[1], res[0] );
		CNOT( q[2], res[1] );
	}
	Uncompute(res, 0, anc, 19, 194, 98){
		CNOT( anc[14], anc[1] );
		Toffoli( anc[2], anc[15], anc[13] );
		CNOT( q[1], anc[13] );
		Toffoli( anc[6], anc[9], q[0] );
		Toffoli( anc[14], anc[0], anc[17] );
		Toffoli( anc[10], anc[17], anc[16] );
		Toffoli( anc[0], anc[2], anc[12] );
		Toffoli( anc[6], q[0], anc[1] );
		Toffoli( anc[18], anc[12], anc[16] );
		CNOT( q[0], anc[17] );
		CNOT( anc[10], anc[0] );
		CNOT( anc[8], anc[9] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[12], q[2], anc[14] );
		CNOT( anc[16], anc[17] );
		Toffoli( anc[18], anc[1], anc[17] );
		Toffoli( q[2], anc[14], anc[0] );
		CNOT( anc[2], anc[11] );
		Toffoli( anc[12], anc[1], anc[2] );
		CNOT( q[0], anc[4] );
		CNOT( q[2], anc[12] );
		Toffoli( anc[15], q[2], anc[3] );
		Toffoli( anc[11], anc[18], anc[7] );
		CNOT( anc[12], anc[11] );
		Toffoli( anc[11], anc[13], anc[2] );
		CNOT( anc[0], anc[13] );
		Toffoli( anc[11], anc[10], anc[9] );
		CNOT( anc[4], anc[8] );
		CNOT( anc[13], q[0] );
		CNOT( anc[17], anc[4] );
		Toffoli( anc[9], anc[4], anc[2] );
		CNOT( anc[14], q[0] );
		Toffoli( anc[8], anc[3], anc[6] );
		CNOT( anc[15], anc[5] );
		Toffoli( anc[0], anc[5], q[1] );
		Toffoli( anc[6], anc[4], anc[5] );
		CNOT( anc[1], q[2] );
		CNOT( anc[8], anc[18] );
		CNOT( q[2], anc[4] );
		Toffoli( anc[14], anc[4], anc[7] );
		Toffoli( anc[7], anc[3], anc[9] );
		Toffoli( anc[14], q[2], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[10], anc[18], anc[8] );
		Toffoli( anc[14], anc[13], anc[16] );
		Toffoli( anc[7], anc[17], anc[11] );
		Toffoli( anc[18], anc[0], anc[10] );
		CNOT( anc[9], anc[13] );
		CNOT( anc[12], anc[8] );
		Toffoli( anc[1], anc[2], anc[16] );
		Toffoli( anc[2], anc[5], anc[15] );
		CNOT( anc[13], anc[0] );
		Toffoli( anc[6], anc[3], anc[12] );
		Toffoli( q[2], anc[18], anc[0] );
		Toffoli( q[0], anc[15], q[2] );
		Toffoli( anc[2], anc[13], anc[12] );
		Toffoli( anc[8], anc[6], q[2] );
		Toffoli( q[2], anc[6], anc[8] );
		Toffoli( anc[8], anc[1], anc[0] );
		Toffoli( anc[12], anc[2], anc[18] );
		Toffoli( anc[2], anc[18], anc[9] );
		CNOT( anc[1], anc[10] );
		Toffoli( anc[3], anc[17], anc[13] );
		CNOT( anc[6], anc[14] );
		Toffoli( anc[9], anc[17], anc[8] );
		Toffoli( anc[5], anc[2], anc[9] );
		Toffoli( anc[15], anc[8], anc[9] );
		CNOT( anc[15], anc[3] );
		CNOT( anc[15], q[1] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[9], anc[13] );
		CNOT( anc[17], anc[2] );
		Toffoli( anc[17], anc[14], anc[10] );
		CNOT( anc[18], anc[7] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[3], anc[15] );
		Toffoli( anc[1], anc[8], anc[9] );
		Toffoli( q[1], anc[13], anc[10] );
		CNOT( anc[12], q[0] );
		Toffoli( anc[3], anc[13], anc[2] );
		Toffoli( anc[7], anc[0], anc[6] );
		Toffoli( anc[1], anc[18], anc[12] );
		CNOT( anc[0], anc[13] );
		Toffoli( q[1], anc[18], anc[17] );
		Toffoli( q[0], q[2], anc[6] );
		Toffoli( anc[11], anc[10], anc[4] );
		Toffoli( anc[14], anc[13], q[1] );
		CNOT( anc[6], anc[10] );
		Toffoli( anc[14], anc[5], anc[12] );
		Toffoli( q[2], anc[7], anc[16] );
		CNOT( anc[14], anc[17] );
		CNOT( q[0], anc[3] );
		CNOT( anc[14], anc[5] );
		Toffoli( anc[13], anc[12], anc[3] );
	} Free(anc, 19) {}
}
// Function 11 with degree 0
// nq: 3, na: 19, ng: 96
void func11R(qbit **q, int n) {
printf("func11R\n");
fflush(stderr);
	qbit *anc[19]; // ancilla
	qbit *nb[33]; // interacting bits
	qbit *res[2];
	nb[0] = q[0];
	nb[1] = q[2];
	nb[2] = q[1];
	nb[3] = q[0];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[0];
	nb[7] = q[1];
	nb[8] = q[1];
	nb[9] = q[2];
	nb[10] = q[2];
	nb[11] = q[0];
	nb[12] = q[2];
	nb[13] = q[2];
	nb[14] = q[1];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[2];
	nb[18] = q[0];
	nb[19] = q[2];
	nb[20] = q[2];
	nb[21] = q[1];
	nb[22] = q[0];
	nb[23] = q[0];
	nb[24] = q[2];
	nb[25] = q[2];
	nb[26] = q[0];
	nb[27] = q[2];
	nb[28] = q[2];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[1];
	res[0] = q[1];
	res[1] = q[0];
	// Leaf function
	_computeModule(0, 19, 194, 98, 0, 4, 0);
	acquire(19, anc, 33, nb);
	Recompute (res, 0, anc, 19, 194, 98){
		CNOT( anc[14], anc[1] );
		Toffoli( anc[2], anc[15], anc[13] );
		CNOT( q[1], anc[13] );
		Toffoli( anc[6], anc[9], q[0] );
		Toffoli( anc[14], anc[0], anc[17] );
		Toffoli( anc[10], anc[17], anc[16] );
		Toffoli( anc[0], anc[2], anc[12] );
		Toffoli( anc[6], q[0], anc[1] );
		Toffoli( anc[18], anc[12], anc[16] );
		CNOT( q[0], anc[17] );
		CNOT( anc[10], anc[0] );
		CNOT( anc[8], anc[9] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[12], q[2], anc[14] );
		CNOT( anc[16], anc[17] );
		Toffoli( anc[18], anc[1], anc[17] );
		Toffoli( q[2], anc[14], anc[0] );
		CNOT( anc[2], anc[11] );
		Toffoli( anc[12], anc[1], anc[2] );
		CNOT( q[0], anc[4] );
		CNOT( q[2], anc[12] );
		Toffoli( anc[15], q[2], anc[3] );
		Toffoli( anc[11], anc[18], anc[7] );
		CNOT( anc[12], anc[11] );
		Toffoli( anc[11], anc[13], anc[2] );
		CNOT( anc[0], anc[13] );
		Toffoli( anc[11], anc[10], anc[9] );
		CNOT( anc[4], anc[8] );
		CNOT( anc[13], q[0] );
		CNOT( anc[17], anc[4] );
		Toffoli( anc[9], anc[4], anc[2] );
		CNOT( anc[14], q[0] );
		Toffoli( anc[8], anc[3], anc[6] );
		CNOT( anc[15], anc[5] );
		Toffoli( anc[0], anc[5], q[1] );
		Toffoli( anc[6], anc[4], anc[5] );
		CNOT( anc[1], q[2] );
		CNOT( anc[8], anc[18] );
		CNOT( q[2], anc[4] );
		Toffoli( anc[14], anc[4], anc[7] );
		Toffoli( anc[7], anc[3], anc[9] );
		Toffoli( anc[14], q[2], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[10], anc[18], anc[8] );
		Toffoli( anc[14], anc[13], anc[16] );
		Toffoli( anc[7], anc[17], anc[11] );
		Toffoli( anc[18], anc[0], anc[10] );
		CNOT( anc[9], anc[13] );
		CNOT( anc[12], anc[8] );
		Toffoli( anc[1], anc[2], anc[16] );
		Toffoli( anc[2], anc[5], anc[15] );
		CNOT( anc[13], anc[0] );
		Toffoli( anc[6], anc[3], anc[12] );
		Toffoli( q[2], anc[18], anc[0] );
		Toffoli( q[0], anc[15], q[2] );
		Toffoli( anc[2], anc[13], anc[12] );
		Toffoli( anc[8], anc[6], q[2] );
		Toffoli( q[2], anc[6], anc[8] );
		Toffoli( anc[8], anc[1], anc[0] );
		Toffoli( anc[12], anc[2], anc[18] );
		Toffoli( anc[2], anc[18], anc[9] );
		CNOT( anc[1], anc[10] );
		Toffoli( anc[3], anc[17], anc[13] );
		CNOT( anc[6], anc[14] );
		Toffoli( anc[9], anc[17], anc[8] );
		Toffoli( anc[5], anc[2], anc[9] );
		Toffoli( anc[15], anc[8], anc[9] );
		CNOT( anc[15], anc[3] );
		CNOT( anc[15], q[1] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[9], anc[13] );
		CNOT( anc[17], anc[2] );
		Toffoli( anc[17], anc[14], anc[10] );
		CNOT( anc[18], anc[7] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[3], anc[15] );
		Toffoli( anc[1], anc[8], anc[9] );
		Toffoli( q[1], anc[13], anc[10] );
		CNOT( anc[12], q[0] );
		Toffoli( anc[3], anc[13], anc[2] );
		Toffoli( anc[7], anc[0], anc[6] );
		Toffoli( anc[1], anc[18], anc[12] );
		CNOT( anc[0], anc[13] );
		Toffoli( q[1], anc[18], anc[17] );
		Toffoli( q[0], q[2], anc[6] );
		Toffoli( anc[11], anc[10], anc[4] );
		Toffoli( anc[14], anc[13], q[1] );
		CNOT( anc[6], anc[10] );
		Toffoli( anc[14], anc[5], anc[12] );
		Toffoli( q[2], anc[7], anc[16] );
		CNOT( anc[14], anc[17] );
		CNOT( q[0], anc[3] );
		CNOT( anc[14], anc[5] );
		Toffoli( anc[13], anc[12], anc[3] );
	}
	Restore {
		CNOT( anc[1], res[0] );
		CNOT( q[2], res[1] );
	}
	Unrecompute {
		Toffoli( anc[13], anc[12], anc[3] );
		CNOT( anc[14], anc[5] );
		CNOT( q[0], anc[3] );
		CNOT( anc[14], anc[17] );
		Toffoli( q[2], anc[7], anc[16] );
		Toffoli( anc[14], anc[5], anc[12] );
		CNOT( anc[6], anc[10] );
		Toffoli( anc[14], anc[13], q[1] );
		Toffoli( anc[11], anc[10], anc[4] );
		Toffoli( q[0], q[2], anc[6] );
		Toffoli( q[1], anc[18], anc[17] );
		CNOT( anc[0], anc[13] );
		Toffoli( anc[1], anc[18], anc[12] );
		Toffoli( anc[7], anc[0], anc[6] );
		Toffoli( anc[3], anc[13], anc[2] );
		CNOT( anc[12], q[0] );
		Toffoli( q[1], anc[13], anc[10] );
		Toffoli( anc[1], anc[8], anc[9] );
		CNOT( anc[3], anc[15] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[18], anc[7] );
		Toffoli( anc[17], anc[14], anc[10] );
		CNOT( anc[17], anc[2] );
		CNOT( anc[9], anc[13] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[15], q[1] );
		CNOT( anc[15], anc[3] );
		Toffoli( anc[15], anc[8], anc[9] );
		Toffoli( anc[5], anc[2], anc[9] );
		Toffoli( anc[9], anc[17], anc[8] );
		CNOT( anc[6], anc[14] );
		Toffoli( anc[3], anc[17], anc[13] );
		CNOT( anc[1], anc[10] );
		Toffoli( anc[2], anc[18], anc[9] );
		Toffoli( anc[12], anc[2], anc[18] );
		Toffoli( anc[8], anc[1], anc[0] );
		Toffoli( q[2], anc[6], anc[8] );
		Toffoli( anc[8], anc[6], q[2] );
		Toffoli( anc[2], anc[13], anc[12] );
		Toffoli( q[0], anc[15], q[2] );
		Toffoli( q[2], anc[18], anc[0] );
		Toffoli( anc[6], anc[3], anc[12] );
		CNOT( anc[13], anc[0] );
		Toffoli( anc[2], anc[5], anc[15] );
		Toffoli( anc[1], anc[2], anc[16] );
		CNOT( anc[12], anc[8] );
		CNOT( anc[9], anc[13] );
		Toffoli( anc[18], anc[0], anc[10] );
		Toffoli( anc[7], anc[17], anc[11] );
		Toffoli( anc[14], anc[13], anc[16] );
		Toffoli( anc[10], anc[18], anc[8] );
		CNOT( anc[2], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[14], q[2], q[0] );
		Toffoli( anc[7], anc[3], anc[9] );
		Toffoli( anc[14], anc[4], anc[7] );
		CNOT( q[2], anc[4] );
		CNOT( anc[8], anc[18] );
		CNOT( anc[1], q[2] );
		Toffoli( anc[6], anc[4], anc[5] );
		Toffoli( anc[0], anc[5], q[1] );
		CNOT( anc[15], anc[5] );
		Toffoli( anc[8], anc[3], anc[6] );
		CNOT( anc[14], q[0] );
		Toffoli( anc[9], anc[4], anc[2] );
		CNOT( anc[17], anc[4] );
		CNOT( anc[13], q[0] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[11], anc[10], anc[9] );
		CNOT( anc[0], anc[13] );
		Toffoli( anc[11], anc[13], anc[2] );
		CNOT( anc[12], anc[11] );
		Toffoli( anc[11], anc[18], anc[7] );
		Toffoli( anc[15], q[2], anc[3] );
		CNOT( q[2], anc[12] );
		CNOT( q[0], anc[4] );
		Toffoli( anc[12], anc[1], anc[2] );
		CNOT( anc[2], anc[11] );
		Toffoli( q[2], anc[14], anc[0] );
		Toffoli( anc[18], anc[1], anc[17] );
		CNOT( anc[16], anc[17] );
		Toffoli( anc[12], q[2], anc[14] );
		CNOT( anc[4], anc[8] );
		CNOT( anc[8], anc[9] );
		CNOT( anc[10], anc[0] );
		CNOT( q[0], anc[17] );
		Toffoli( anc[18], anc[12], anc[16] );
		Toffoli( anc[6], q[0], anc[1] );
		Toffoli( anc[0], anc[2], anc[12] );
		Toffoli( anc[10], anc[17], anc[16] );
		Toffoli( anc[14], anc[0], anc[17] );
		Toffoli( anc[6], anc[9], q[0] );
		CNOT( q[1], anc[13] );
		Toffoli( anc[2], anc[15], anc[13] );
		CNOT( anc[14], anc[1] );
	} Refree(anc, 19) {}
}
// Function 10 with degree 0
// nq: 4, na: 20, ng: 25
void func10(qbit **q, int n) {
printf("func10\n");
fflush(stderr);
	qbit *anc[20]; // ancilla
	qbit *nb[11]; // interacting bits
	qbit *res[4];
	nb[0] = q[0];
	nb[1] = q[1];
	nb[2] = q[2];
	nb[3] = q[3];
	nb[4] = q[1];
	nb[5] = q[0];
	nb[6] = q[1];
	nb[7] = q[3];
	nb[8] = q[0];
	nb[9] = q[2];
	nb[10] = q[1];
	res[0] = q[2];
	res[1] = q[3];
	res[2] = q[0];
	res[3] = q[1];
	// Leaf function
	Compute (0, 20, 54, 29, 0, 4, 0) {
		acquire(20, anc, 11, nb);
		CNOT( anc[0], anc[2] );
		CNOT( anc[6], anc[13] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[6], anc[11], anc[19] );
		Toffoli( anc[8], anc[5], q[2] );
		CNOT( q[3], anc[1] );
		CNOT( anc[13], anc[2] );
		CNOT( anc[8], anc[14] );
		CNOT( anc[16], anc[5] );
		Toffoli( anc[8], q[1], anc[3] );
		CNOT( anc[8], anc[16] );
		CNOT( anc[18], q[0] );
		Toffoli( anc[10], anc[2], anc[18] );
		CNOT( anc[7], q[1] );
		Toffoli( anc[5], anc[11], anc[15] );
		Toffoli( q[3], anc[1], anc[16] );
		CNOT( anc[2], anc[8] );
		CNOT( anc[11], q[0] );
		Toffoli( anc[12], anc[16], anc[10] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[7], anc[5], anc[16] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[9], anc[5], q[2] );
		CNOT( anc[19], q[1] );
	}
	Store {
		CNOT( anc[12], res[0] );
		CNOT( anc[17], res[1] );
		CNOT( anc[15], res[2] );
		CNOT( q[0], res[3] );
	}
	Uncompute(res, 0, anc, 20, 54, 29){
		CNOT( anc[19], q[1] );
		Toffoli( anc[9], anc[5], q[2] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[7], anc[5], anc[16] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[12], anc[16], anc[10] );
		CNOT( anc[11], q[0] );
		CNOT( anc[2], anc[8] );
		Toffoli( q[3], anc[1], anc[16] );
		Toffoli( anc[5], anc[11], anc[15] );
		CNOT( anc[7], q[1] );
		Toffoli( anc[10], anc[2], anc[18] );
		CNOT( anc[18], q[0] );
		CNOT( anc[8], anc[16] );
		Toffoli( anc[8], q[1], anc[3] );
		CNOT( anc[16], anc[5] );
		CNOT( anc[8], anc[14] );
		CNOT( anc[13], anc[2] );
		CNOT( q[3], anc[1] );
		Toffoli( anc[8], anc[5], q[2] );
		Toffoli( anc[6], anc[11], anc[19] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[6], anc[13] );
		CNOT( anc[0], anc[2] );
	} Free(anc, 20) {}
}
// Function 10 with degree 0
// nq: 4, na: 20, ng: 25
void func10R(qbit **q, int n) {
printf("func10R\n");
fflush(stderr);
	qbit *anc[20]; // ancilla
	qbit *nb[11]; // interacting bits
	qbit *res[4];
	nb[0] = q[0];
	nb[1] = q[1];
	nb[2] = q[2];
	nb[3] = q[3];
	nb[4] = q[1];
	nb[5] = q[0];
	nb[6] = q[1];
	nb[7] = q[3];
	nb[8] = q[0];
	nb[9] = q[2];
	nb[10] = q[1];
	res[0] = q[2];
	res[1] = q[3];
	res[2] = q[0];
	res[3] = q[1];
	// Leaf function
	_computeModule(0, 20, 54, 29, 0, 4, 0);
	acquire(20, anc, 11, nb);
	Recompute (res, 0, anc, 20, 54, 29){
		CNOT( anc[19], q[1] );
		Toffoli( anc[9], anc[5], q[2] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[7], anc[5], anc[16] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[12], anc[16], anc[10] );
		CNOT( anc[11], q[0] );
		CNOT( anc[2], anc[8] );
		Toffoli( q[3], anc[1], anc[16] );
		Toffoli( anc[5], anc[11], anc[15] );
		CNOT( anc[7], q[1] );
		Toffoli( anc[10], anc[2], anc[18] );
		CNOT( anc[18], q[0] );
		CNOT( anc[8], anc[16] );
		Toffoli( anc[8], q[1], anc[3] );
		CNOT( anc[16], anc[5] );
		CNOT( anc[8], anc[14] );
		CNOT( anc[13], anc[2] );
		CNOT( q[3], anc[1] );
		Toffoli( anc[8], anc[5], q[2] );
		Toffoli( anc[6], anc[11], anc[19] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[6], anc[13] );
		CNOT( anc[0], anc[2] );
	}
	Restore {
		CNOT( anc[12], res[0] );
		CNOT( anc[17], res[1] );
		CNOT( anc[15], res[2] );
		CNOT( q[0], res[3] );
	}
	Unrecompute {
		CNOT( anc[0], anc[2] );
		CNOT( anc[6], anc[13] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[6], anc[11], anc[19] );
		Toffoli( anc[8], anc[5], q[2] );
		CNOT( q[3], anc[1] );
		CNOT( anc[13], anc[2] );
		CNOT( anc[8], anc[14] );
		CNOT( anc[16], anc[5] );
		Toffoli( anc[8], q[1], anc[3] );
		CNOT( anc[8], anc[16] );
		CNOT( anc[18], q[0] );
		Toffoli( anc[10], anc[2], anc[18] );
		CNOT( anc[7], q[1] );
		Toffoli( anc[5], anc[11], anc[15] );
		Toffoli( q[3], anc[1], anc[16] );
		CNOT( anc[2], anc[8] );
		CNOT( anc[11], q[0] );
		Toffoli( anc[12], anc[16], anc[10] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[7], anc[5], anc[16] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[9], anc[5], q[2] );
		CNOT( anc[19], q[1] );
	} Refree(anc, 20) {}
}
// Function 9 with degree 0
// nq: 13, na: 48, ng: 99
void func9(qbit **q, int n) {
printf("func9\n");
fflush(stderr);
	qbit *anc[48]; // ancilla
	qbit *nb[43]; // interacting bits
	qbit *res[5];
	nb[0] = q[9];
	nb[1] = q[4];
	nb[2] = q[3];
	nb[3] = q[2];
	nb[4] = q[0];
	nb[5] = q[8];
	nb[6] = q[10];
	nb[7] = q[10];
	nb[8] = q[7];
	nb[9] = q[1];
	nb[10] = q[8];
	nb[11] = q[10];
	nb[12] = q[4];
	nb[13] = q[6];
	nb[14] = q[11];
	nb[15] = q[4];
	nb[16] = q[9];
	nb[17] = q[6];
	nb[18] = q[9];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[12];
	nb[22] = q[1];
	nb[23] = q[5];
	nb[24] = q[10];
	nb[25] = q[12];
	nb[26] = q[8];
	nb[27] = q[6];
	nb[28] = q[12];
	nb[29] = q[3];
	nb[30] = q[3];
	nb[31] = q[12];
	nb[32] = q[11];
	nb[33] = q[7];
	nb[34] = q[4];
	nb[35] = q[11];
	nb[36] = q[2];
	nb[37] = q[7];
	nb[38] = q[6];
	nb[39] = q[4];
	nb[40] = q[7];
	nb[41] = q[0];
	nb[42] = q[7];
	res[0] = q[11];
	res[1] = q[10];
	res[2] = q[3];
	res[3] = q[5];
	res[4] = q[0];
	// Leaf function
	Compute (0, 48, 203, 104, 0, 4, 0) {
		acquire(48, anc, 43, nb);
		Toffoli( anc[19], anc[35], anc[1] );
		Toffoli( anc[41], anc[27], anc[22] );
		Toffoli( anc[2], anc[23], anc[29] );
		CNOT( q[9], anc[36] );
		Toffoli( anc[21], anc[17], anc[39] );
		CNOT( anc[14], anc[1] );
		CNOT( anc[35], q[4] );
		Toffoli( anc[15], anc[12], anc[43] );
		CNOT( anc[5], anc[4] );
		CNOT( anc[20], q[3] );
		CNOT( anc[19], anc[4] );
		Toffoli( q[2], anc[37], anc[33] );
		CNOT( q[0], anc[11] );
		CNOT( anc[4], q[8] );
		Toffoli( anc[41], anc[1], anc[5] );
		Toffoli( anc[37], anc[44], anc[16] );
		CNOT( q[10], anc[9] );
		CNOT( anc[27], anc[16] );
		Toffoli( anc[10], anc[33], anc[47] );
		CNOT( anc[8], q[10] );
		Toffoli( anc[23], anc[44], anc[35] );
		CNOT( q[7], anc[26] );
		CNOT( q[1], anc[8] );
		CNOT( anc[10], anc[35] );
		Toffoli( anc[15], anc[22], anc[5] );
		CNOT( anc[6], anc[26] );
		CNOT( anc[4], anc[10] );
		Toffoli( anc[7], anc[29], anc[15] );
		CNOT( anc[47], q[8] );
		Toffoli( anc[19], q[10], anc[13] );
		CNOT( anc[22], anc[35] );
		Toffoli( anc[6], anc[16], anc[34] );
		Toffoli( anc[34], anc[42], q[4] );
		CNOT( anc[34], anc[31] );
		CNOT( anc[21], anc[27] );
		Toffoli( anc[37], anc[14], q[6] );
		Toffoli( q[11], anc[24], q[4] );
		CNOT( anc[18], q[9] );
		Toffoli( anc[19], anc[32], anc[22] );
		Toffoli( anc[7], anc[32], anc[45] );
		Toffoli( q[6], anc[27], anc[19] );
		Toffoli( anc[37], anc[34], anc[5] );
		CNOT( anc[8], anc[20] );
		Toffoli( q[9], q[1], q[0] );
		Toffoli( q[12], anc[33], anc[27] );
		CNOT( anc[21], anc[40] );
		CNOT( anc[47], anc[10] );
		CNOT( anc[24], anc[42] );
		CNOT( anc[24], anc[21] );
		CNOT( anc[42], anc[10] );
		CNOT( anc[2], q[1] );
		CNOT( anc[16], anc[26] );
		Toffoli( anc[5], anc[28], anc[41] );
		Toffoli( anc[0], q[5], anc[28] );
		Toffoli( anc[8], anc[37], anc[12] );
		CNOT( anc[39], anc[18] );
		Toffoli( anc[5], anc[38], anc[39] );
		CNOT( q[10], anc[35] );
		CNOT( anc[17], anc[21] );
		Toffoli( anc[44], anc[43], anc[41] );
		CNOT( anc[14], anc[4] );
		Toffoli( q[12], q[8], anc[37] );
		Toffoli( anc[4], anc[23], q[6] );
		Toffoli( anc[2], anc[10], anc[24] );
		CNOT( anc[32], anc[8] );
		Toffoli( anc[36], anc[11], anc[0] );
		Toffoli( q[12], anc[44], q[3] );
		Toffoli( anc[28], anc[33], anc[22] );
		Toffoli( anc[37], anc[40], anc[30] );
		CNOT( anc[38], anc[2] );
		Toffoli( anc[22], anc[40], anc[39] );
		CNOT( anc[18], anc[4] );
		Toffoli( q[3], anc[34], anc[2] );
		CNOT( anc[13], anc[37] );
		Toffoli( anc[12], q[12], anc[24] );
		CNOT( anc[0], anc[32] );
		Toffoli( anc[2], q[11], anc[41] );
		Toffoli( anc[17], anc[19], anc[34] );
		CNOT( anc[5], anc[18] );
		Toffoli( q[7], anc[17], anc[38] );
		CNOT( q[4], anc[38] );
		Toffoli( anc[4], anc[17], anc[21] );
		CNOT( anc[35], q[11] );
		Toffoli( anc[0], anc[30], q[2] );
		CNOT( q[7], anc[40] );
		Toffoli( q[6], anc[42], anc[1] );
		Toffoli( anc[7], anc[26], anc[33] );
		Toffoli( anc[19], anc[24], anc[36] );
		CNOT( anc[22], anc[45] );
		Toffoli( anc[15], anc[5], anc[38] );
		CNOT( q[4], anc[40] );
		Toffoli( anc[3], anc[6], anc[16] );
		Toffoli( q[7], anc[47], anc[35] );
		Toffoli( anc[40], anc[15], anc[0] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[39], anc[2], anc[4] );
		Toffoli( anc[36], anc[31], anc[33] );
		Toffoli( anc[46], anc[29], anc[42] );
		Toffoli( anc[25], anc[20], q[7] );
	}
	Store {
		CNOT( anc[39], res[0] );
		CNOT( anc[2], res[1] );
		CNOT( anc[41], res[2] );
		CNOT( anc[34], res[3] );
		CNOT( anc[30], res[4] );
	}
	Uncompute(res, 0, anc, 48, 203, 104){
		Toffoli( anc[25], anc[20], q[7] );
		Toffoli( anc[46], anc[29], anc[42] );
		Toffoli( anc[36], anc[31], anc[33] );
		Toffoli( anc[39], anc[2], anc[4] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[40], anc[15], anc[0] );
		Toffoli( q[7], anc[47], anc[35] );
		Toffoli( anc[3], anc[6], anc[16] );
		CNOT( q[4], anc[40] );
		Toffoli( anc[15], anc[5], anc[38] );
		CNOT( anc[22], anc[45] );
		Toffoli( anc[19], anc[24], anc[36] );
		Toffoli( anc[7], anc[26], anc[33] );
		Toffoli( q[6], anc[42], anc[1] );
		CNOT( q[7], anc[40] );
		Toffoli( anc[0], anc[30], q[2] );
		CNOT( anc[35], q[11] );
		Toffoli( anc[4], anc[17], anc[21] );
		CNOT( q[4], anc[38] );
		Toffoli( q[7], anc[17], anc[38] );
		CNOT( anc[5], anc[18] );
		Toffoli( anc[17], anc[19], anc[34] );
		Toffoli( anc[2], q[11], anc[41] );
		CNOT( anc[0], anc[32] );
		Toffoli( anc[12], q[12], anc[24] );
		CNOT( anc[13], anc[37] );
		Toffoli( q[3], anc[34], anc[2] );
		CNOT( anc[18], anc[4] );
		Toffoli( anc[22], anc[40], anc[39] );
		CNOT( anc[38], anc[2] );
		Toffoli( anc[37], anc[40], anc[30] );
		Toffoli( anc[28], anc[33], anc[22] );
		Toffoli( q[12], anc[44], q[3] );
		Toffoli( anc[36], anc[11], anc[0] );
		CNOT( anc[32], anc[8] );
		Toffoli( anc[2], anc[10], anc[24] );
		Toffoli( anc[4], anc[23], q[6] );
		Toffoli( q[12], q[8], anc[37] );
		CNOT( anc[14], anc[4] );
		Toffoli( anc[44], anc[43], anc[41] );
		CNOT( anc[17], anc[21] );
		CNOT( q[10], anc[35] );
		Toffoli( anc[5], anc[38], anc[39] );
		CNOT( anc[39], anc[18] );
		Toffoli( anc[8], anc[37], anc[12] );
		Toffoli( anc[0], q[5], anc[28] );
		Toffoli( anc[5], anc[28], anc[41] );
		CNOT( anc[16], anc[26] );
		CNOT( anc[2], q[1] );
		CNOT( anc[42], anc[10] );
		CNOT( anc[24], anc[21] );
		CNOT( anc[24], anc[42] );
		CNOT( anc[47], anc[10] );
		CNOT( anc[21], anc[40] );
		Toffoli( q[12], anc[33], anc[27] );
		Toffoli( q[9], q[1], q[0] );
		CNOT( anc[8], anc[20] );
		Toffoli( anc[37], anc[34], anc[5] );
		Toffoli( q[6], anc[27], anc[19] );
		Toffoli( anc[7], anc[32], anc[45] );
		Toffoli( anc[19], anc[32], anc[22] );
		CNOT( anc[18], q[9] );
		Toffoli( q[11], anc[24], q[4] );
		Toffoli( anc[37], anc[14], q[6] );
		CNOT( anc[21], anc[27] );
		CNOT( anc[34], anc[31] );
		Toffoli( anc[34], anc[42], q[4] );
		Toffoli( anc[6], anc[16], anc[34] );
		CNOT( anc[22], anc[35] );
		Toffoli( anc[19], q[10], anc[13] );
		CNOT( anc[47], q[8] );
		Toffoli( anc[7], anc[29], anc[15] );
		CNOT( anc[4], anc[10] );
		CNOT( anc[6], anc[26] );
		Toffoli( anc[15], anc[22], anc[5] );
		CNOT( anc[10], anc[35] );
		CNOT( q[1], anc[8] );
		CNOT( q[7], anc[26] );
		Toffoli( anc[23], anc[44], anc[35] );
		CNOT( anc[8], q[10] );
		Toffoli( anc[10], anc[33], anc[47] );
		CNOT( anc[27], anc[16] );
		CNOT( q[10], anc[9] );
		Toffoli( anc[37], anc[44], anc[16] );
		Toffoli( anc[41], anc[1], anc[5] );
		CNOT( anc[4], q[8] );
		CNOT( q[0], anc[11] );
		Toffoli( q[2], anc[37], anc[33] );
		CNOT( anc[19], anc[4] );
		CNOT( anc[20], q[3] );
		CNOT( anc[5], anc[4] );
		Toffoli( anc[15], anc[12], anc[43] );
		CNOT( anc[35], q[4] );
		CNOT( anc[14], anc[1] );
		Toffoli( anc[21], anc[17], anc[39] );
		CNOT( q[9], anc[36] );
		Toffoli( anc[2], anc[23], anc[29] );
		Toffoli( anc[41], anc[27], anc[22] );
		Toffoli( anc[19], anc[35], anc[1] );
	} Free(anc, 48) {}
}
// Function 9 with degree 0
// nq: 13, na: 48, ng: 99
void func9R(qbit **q, int n) {
printf("func9R\n");
fflush(stderr);
	qbit *anc[48]; // ancilla
	qbit *nb[43]; // interacting bits
	qbit *res[5];
	nb[0] = q[9];
	nb[1] = q[4];
	nb[2] = q[3];
	nb[3] = q[2];
	nb[4] = q[0];
	nb[5] = q[8];
	nb[6] = q[10];
	nb[7] = q[10];
	nb[8] = q[7];
	nb[9] = q[1];
	nb[10] = q[8];
	nb[11] = q[10];
	nb[12] = q[4];
	nb[13] = q[6];
	nb[14] = q[11];
	nb[15] = q[4];
	nb[16] = q[9];
	nb[17] = q[6];
	nb[18] = q[9];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[12];
	nb[22] = q[1];
	nb[23] = q[5];
	nb[24] = q[10];
	nb[25] = q[12];
	nb[26] = q[8];
	nb[27] = q[6];
	nb[28] = q[12];
	nb[29] = q[3];
	nb[30] = q[3];
	nb[31] = q[12];
	nb[32] = q[11];
	nb[33] = q[7];
	nb[34] = q[4];
	nb[35] = q[11];
	nb[36] = q[2];
	nb[37] = q[7];
	nb[38] = q[6];
	nb[39] = q[4];
	nb[40] = q[7];
	nb[41] = q[0];
	nb[42] = q[7];
	res[0] = q[11];
	res[1] = q[10];
	res[2] = q[3];
	res[3] = q[5];
	res[4] = q[0];
	// Leaf function
	_computeModule(0, 48, 203, 104, 0, 4, 0);
	acquire(48, anc, 43, nb);
	Recompute (res, 0, anc, 48, 203, 104){
		Toffoli( anc[25], anc[20], q[7] );
		Toffoli( anc[46], anc[29], anc[42] );
		Toffoli( anc[36], anc[31], anc[33] );
		Toffoli( anc[39], anc[2], anc[4] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[40], anc[15], anc[0] );
		Toffoli( q[7], anc[47], anc[35] );
		Toffoli( anc[3], anc[6], anc[16] );
		CNOT( q[4], anc[40] );
		Toffoli( anc[15], anc[5], anc[38] );
		CNOT( anc[22], anc[45] );
		Toffoli( anc[19], anc[24], anc[36] );
		Toffoli( anc[7], anc[26], anc[33] );
		Toffoli( q[6], anc[42], anc[1] );
		CNOT( q[7], anc[40] );
		Toffoli( anc[0], anc[30], q[2] );
		CNOT( anc[35], q[11] );
		Toffoli( anc[4], anc[17], anc[21] );
		CNOT( q[4], anc[38] );
		Toffoli( q[7], anc[17], anc[38] );
		CNOT( anc[5], anc[18] );
		Toffoli( anc[17], anc[19], anc[34] );
		Toffoli( anc[2], q[11], anc[41] );
		CNOT( anc[0], anc[32] );
		Toffoli( anc[12], q[12], anc[24] );
		CNOT( anc[13], anc[37] );
		Toffoli( q[3], anc[34], anc[2] );
		CNOT( anc[18], anc[4] );
		Toffoli( anc[22], anc[40], anc[39] );
		CNOT( anc[38], anc[2] );
		Toffoli( anc[37], anc[40], anc[30] );
		Toffoli( anc[28], anc[33], anc[22] );
		Toffoli( q[12], anc[44], q[3] );
		Toffoli( anc[36], anc[11], anc[0] );
		CNOT( anc[32], anc[8] );
		Toffoli( anc[2], anc[10], anc[24] );
		Toffoli( anc[4], anc[23], q[6] );
		Toffoli( q[12], q[8], anc[37] );
		CNOT( anc[14], anc[4] );
		Toffoli( anc[44], anc[43], anc[41] );
		CNOT( anc[17], anc[21] );
		CNOT( q[10], anc[35] );
		Toffoli( anc[5], anc[38], anc[39] );
		CNOT( anc[39], anc[18] );
		Toffoli( anc[8], anc[37], anc[12] );
		Toffoli( anc[0], q[5], anc[28] );
		Toffoli( anc[5], anc[28], anc[41] );
		CNOT( anc[16], anc[26] );
		CNOT( anc[2], q[1] );
		CNOT( anc[42], anc[10] );
		CNOT( anc[24], anc[21] );
		CNOT( anc[24], anc[42] );
		CNOT( anc[47], anc[10] );
		CNOT( anc[21], anc[40] );
		Toffoli( q[12], anc[33], anc[27] );
		Toffoli( q[9], q[1], q[0] );
		CNOT( anc[8], anc[20] );
		Toffoli( anc[37], anc[34], anc[5] );
		Toffoli( q[6], anc[27], anc[19] );
		Toffoli( anc[7], anc[32], anc[45] );
		Toffoli( anc[19], anc[32], anc[22] );
		CNOT( anc[18], q[9] );
		Toffoli( q[11], anc[24], q[4] );
		Toffoli( anc[37], anc[14], q[6] );
		CNOT( anc[21], anc[27] );
		CNOT( anc[34], anc[31] );
		Toffoli( anc[34], anc[42], q[4] );
		Toffoli( anc[6], anc[16], anc[34] );
		CNOT( anc[22], anc[35] );
		Toffoli( anc[19], q[10], anc[13] );
		CNOT( anc[47], q[8] );
		Toffoli( anc[7], anc[29], anc[15] );
		CNOT( anc[4], anc[10] );
		CNOT( anc[6], anc[26] );
		Toffoli( anc[15], anc[22], anc[5] );
		CNOT( anc[10], anc[35] );
		CNOT( q[1], anc[8] );
		CNOT( q[7], anc[26] );
		Toffoli( anc[23], anc[44], anc[35] );
		CNOT( anc[8], q[10] );
		Toffoli( anc[10], anc[33], anc[47] );
		CNOT( anc[27], anc[16] );
		CNOT( q[10], anc[9] );
		Toffoli( anc[37], anc[44], anc[16] );
		Toffoli( anc[41], anc[1], anc[5] );
		CNOT( anc[4], q[8] );
		CNOT( q[0], anc[11] );
		Toffoli( q[2], anc[37], anc[33] );
		CNOT( anc[19], anc[4] );
		CNOT( anc[20], q[3] );
		CNOT( anc[5], anc[4] );
		Toffoli( anc[15], anc[12], anc[43] );
		CNOT( anc[35], q[4] );
		CNOT( anc[14], anc[1] );
		Toffoli( anc[21], anc[17], anc[39] );
		CNOT( q[9], anc[36] );
		Toffoli( anc[2], anc[23], anc[29] );
		Toffoli( anc[41], anc[27], anc[22] );
		Toffoli( anc[19], anc[35], anc[1] );
	}
	Restore {
		CNOT( anc[39], res[0] );
		CNOT( anc[2], res[1] );
		CNOT( anc[41], res[2] );
		CNOT( anc[34], res[3] );
		CNOT( anc[30], res[4] );
	}
	Unrecompute {
		Toffoli( anc[19], anc[35], anc[1] );
		Toffoli( anc[41], anc[27], anc[22] );
		Toffoli( anc[2], anc[23], anc[29] );
		CNOT( q[9], anc[36] );
		Toffoli( anc[21], anc[17], anc[39] );
		CNOT( anc[14], anc[1] );
		CNOT( anc[35], q[4] );
		Toffoli( anc[15], anc[12], anc[43] );
		CNOT( anc[5], anc[4] );
		CNOT( anc[20], q[3] );
		CNOT( anc[19], anc[4] );
		Toffoli( q[2], anc[37], anc[33] );
		CNOT( q[0], anc[11] );
		CNOT( anc[4], q[8] );
		Toffoli( anc[41], anc[1], anc[5] );
		Toffoli( anc[37], anc[44], anc[16] );
		CNOT( q[10], anc[9] );
		CNOT( anc[27], anc[16] );
		Toffoli( anc[10], anc[33], anc[47] );
		CNOT( anc[8], q[10] );
		Toffoli( anc[23], anc[44], anc[35] );
		CNOT( q[7], anc[26] );
		CNOT( q[1], anc[8] );
		CNOT( anc[10], anc[35] );
		Toffoli( anc[15], anc[22], anc[5] );
		CNOT( anc[6], anc[26] );
		CNOT( anc[4], anc[10] );
		Toffoli( anc[7], anc[29], anc[15] );
		CNOT( anc[47], q[8] );
		Toffoli( anc[19], q[10], anc[13] );
		CNOT( anc[22], anc[35] );
		Toffoli( anc[6], anc[16], anc[34] );
		Toffoli( anc[34], anc[42], q[4] );
		CNOT( anc[34], anc[31] );
		CNOT( anc[21], anc[27] );
		Toffoli( anc[37], anc[14], q[6] );
		Toffoli( q[11], anc[24], q[4] );
		CNOT( anc[18], q[9] );
		Toffoli( anc[19], anc[32], anc[22] );
		Toffoli( anc[7], anc[32], anc[45] );
		Toffoli( q[6], anc[27], anc[19] );
		Toffoli( anc[37], anc[34], anc[5] );
		CNOT( anc[8], anc[20] );
		Toffoli( q[9], q[1], q[0] );
		Toffoli( q[12], anc[33], anc[27] );
		CNOT( anc[21], anc[40] );
		CNOT( anc[47], anc[10] );
		CNOT( anc[24], anc[42] );
		CNOT( anc[24], anc[21] );
		CNOT( anc[42], anc[10] );
		CNOT( anc[2], q[1] );
		CNOT( anc[16], anc[26] );
		Toffoli( anc[5], anc[28], anc[41] );
		Toffoli( anc[0], q[5], anc[28] );
		Toffoli( anc[8], anc[37], anc[12] );
		CNOT( anc[39], anc[18] );
		Toffoli( anc[5], anc[38], anc[39] );
		CNOT( q[10], anc[35] );
		CNOT( anc[17], anc[21] );
		Toffoli( anc[44], anc[43], anc[41] );
		CNOT( anc[14], anc[4] );
		Toffoli( q[12], q[8], anc[37] );
		Toffoli( anc[4], anc[23], q[6] );
		Toffoli( anc[2], anc[10], anc[24] );
		CNOT( anc[32], anc[8] );
		Toffoli( anc[36], anc[11], anc[0] );
		Toffoli( q[12], anc[44], q[3] );
		Toffoli( anc[28], anc[33], anc[22] );
		Toffoli( anc[37], anc[40], anc[30] );
		CNOT( anc[38], anc[2] );
		Toffoli( anc[22], anc[40], anc[39] );
		CNOT( anc[18], anc[4] );
		Toffoli( q[3], anc[34], anc[2] );
		CNOT( anc[13], anc[37] );
		Toffoli( anc[12], q[12], anc[24] );
		CNOT( anc[0], anc[32] );
		Toffoli( anc[2], q[11], anc[41] );
		Toffoli( anc[17], anc[19], anc[34] );
		CNOT( anc[5], anc[18] );
		Toffoli( q[7], anc[17], anc[38] );
		CNOT( q[4], anc[38] );
		Toffoli( anc[4], anc[17], anc[21] );
		CNOT( anc[35], q[11] );
		Toffoli( anc[0], anc[30], q[2] );
		CNOT( q[7], anc[40] );
		Toffoli( q[6], anc[42], anc[1] );
		Toffoli( anc[7], anc[26], anc[33] );
		Toffoli( anc[19], anc[24], anc[36] );
		CNOT( anc[22], anc[45] );
		Toffoli( anc[15], anc[5], anc[38] );
		CNOT( q[4], anc[40] );
		Toffoli( anc[3], anc[6], anc[16] );
		Toffoli( q[7], anc[47], anc[35] );
		Toffoli( anc[40], anc[15], anc[0] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[39], anc[2], anc[4] );
		Toffoli( anc[36], anc[31], anc[33] );
		Toffoli( anc[46], anc[29], anc[42] );
		Toffoli( anc[25], anc[20], q[7] );
	} Refree(anc, 48) {}
}
// Function 8 with degree 0
// nq: 8, na: 53, ng: 37
void func8(qbit **q, int n) {
printf("func8\n");
fflush(stderr);
	qbit *anc[53]; // ancilla
	qbit *nb[13]; // interacting bits
	qbit *res[4];
	nb[0] = q[3];
	nb[1] = q[0];
	nb[2] = q[6];
	nb[3] = q[3];
	nb[4] = q[4];
	nb[5] = q[2];
	nb[6] = q[6];
	nb[7] = q[6];
	nb[8] = q[6];
	nb[9] = q[0];
	nb[10] = q[7];
	nb[11] = q[1];
	nb[12] = q[4];
	res[0] = q[6];
	res[1] = q[5];
	res[2] = q[3];
	res[3] = q[1];
	// Leaf function
	Compute (0, 53, 78, 41, 0, 4, 0) {
		acquire(53, anc, 13, nb);
		CNOT( anc[11], q[3] );
		CNOT( anc[15], anc[27] );
		Toffoli( anc[2], anc[49], anc[42] );
		Toffoli( anc[33], anc[46], anc[23] );
		Toffoli( q[0], anc[12], anc[6] );
		Toffoli( anc[31], anc[42], anc[12] );
		CNOT( anc[51], anc[23] );
		Toffoli( anc[29], anc[37], q[6] );
		Toffoli( anc[45], anc[39], q[3] );
		CNOT( anc[24], anc[51] );
		CNOT( anc[40], anc[46] );
		Toffoli( anc[19], anc[1], anc[36] );
		CNOT( anc[51], anc[22] );
		Toffoli( q[4], anc[2], anc[5] );
		Toffoli( anc[46], q[2], anc[11] );
		CNOT( anc[22], anc[9] );
		Toffoli( anc[4], anc[41], anc[31] );
		Toffoli( anc[25], anc[0], q[6] );
		Toffoli( anc[9], anc[16], q[6] );
		CNOT( anc[7], anc[9] );
		CNOT( anc[24], anc[14] );
		Toffoli( anc[14], anc[30], anc[18] );
		Toffoli( q[6], anc[12], anc[18] );
		Toffoli( anc[34], anc[20], anc[19] );
		CNOT( anc[46], q[0] );
		CNOT( anc[7], anc[4] );
		CNOT( anc[8], q[7] );
		CNOT( anc[48], anc[42] );
		Toffoli( anc[48], anc[5], q[1] );
		Toffoli( q[4], anc[17], anc[36] );
		CNOT( anc[3], anc[46] );
		CNOT( anc[38], anc[35] );
		CNOT( anc[35], anc[22] );
		Toffoli( anc[6], anc[45], anc[15] );
		CNOT( anc[51], anc[20] );
		CNOT( anc[28], anc[26] );
		Toffoli( anc[43], anc[30], anc[47] );
	}
	Store {
		CNOT( anc[12], res[0] );
		CNOT( anc[16], res[1] );
		CNOT( anc[11], res[2] );
		CNOT( anc[44], res[3] );
	}
	Uncompute(res, 0, anc, 53, 78, 41){
		Toffoli( anc[43], anc[30], anc[47] );
		CNOT( anc[28], anc[26] );
		CNOT( anc[51], anc[20] );
		Toffoli( anc[6], anc[45], anc[15] );
		CNOT( anc[35], anc[22] );
		CNOT( anc[38], anc[35] );
		CNOT( anc[3], anc[46] );
		Toffoli( q[4], anc[17], anc[36] );
		Toffoli( anc[48], anc[5], q[1] );
		CNOT( anc[48], anc[42] );
		CNOT( anc[8], q[7] );
		CNOT( anc[7], anc[4] );
		CNOT( anc[46], q[0] );
		Toffoli( anc[34], anc[20], anc[19] );
		Toffoli( q[6], anc[12], anc[18] );
		Toffoli( anc[14], anc[30], anc[18] );
		CNOT( anc[24], anc[14] );
		CNOT( anc[7], anc[9] );
		Toffoli( anc[9], anc[16], q[6] );
		Toffoli( anc[25], anc[0], q[6] );
		Toffoli( anc[4], anc[41], anc[31] );
		CNOT( anc[22], anc[9] );
		Toffoli( anc[46], q[2], anc[11] );
		Toffoli( q[4], anc[2], anc[5] );
		CNOT( anc[51], anc[22] );
		Toffoli( anc[19], anc[1], anc[36] );
		CNOT( anc[40], anc[46] );
		CNOT( anc[24], anc[51] );
		Toffoli( anc[45], anc[39], q[3] );
		Toffoli( anc[29], anc[37], q[6] );
		CNOT( anc[51], anc[23] );
		Toffoli( anc[31], anc[42], anc[12] );
		Toffoli( q[0], anc[12], anc[6] );
		Toffoli( anc[33], anc[46], anc[23] );
		Toffoli( anc[2], anc[49], anc[42] );
		CNOT( anc[15], anc[27] );
		CNOT( anc[11], q[3] );
	} Free(anc, 53) {}
}
// Function 8 with degree 0
// nq: 8, na: 53, ng: 37
void func8R(qbit **q, int n) {
printf("func8R\n");
fflush(stderr);
	qbit *anc[53]; // ancilla
	qbit *nb[13]; // interacting bits
	qbit *res[4];
	nb[0] = q[3];
	nb[1] = q[0];
	nb[2] = q[6];
	nb[3] = q[3];
	nb[4] = q[4];
	nb[5] = q[2];
	nb[6] = q[6];
	nb[7] = q[6];
	nb[8] = q[6];
	nb[9] = q[0];
	nb[10] = q[7];
	nb[11] = q[1];
	nb[12] = q[4];
	res[0] = q[6];
	res[1] = q[5];
	res[2] = q[3];
	res[3] = q[1];
	// Leaf function
	_computeModule(0, 53, 78, 41, 0, 4, 0);
	acquire(53, anc, 13, nb);
	Recompute (res, 0, anc, 53, 78, 41){
		Toffoli( anc[43], anc[30], anc[47] );
		CNOT( anc[28], anc[26] );
		CNOT( anc[51], anc[20] );
		Toffoli( anc[6], anc[45], anc[15] );
		CNOT( anc[35], anc[22] );
		CNOT( anc[38], anc[35] );
		CNOT( anc[3], anc[46] );
		Toffoli( q[4], anc[17], anc[36] );
		Toffoli( anc[48], anc[5], q[1] );
		CNOT( anc[48], anc[42] );
		CNOT( anc[8], q[7] );
		CNOT( anc[7], anc[4] );
		CNOT( anc[46], q[0] );
		Toffoli( anc[34], anc[20], anc[19] );
		Toffoli( q[6], anc[12], anc[18] );
		Toffoli( anc[14], anc[30], anc[18] );
		CNOT( anc[24], anc[14] );
		CNOT( anc[7], anc[9] );
		Toffoli( anc[9], anc[16], q[6] );
		Toffoli( anc[25], anc[0], q[6] );
		Toffoli( anc[4], anc[41], anc[31] );
		CNOT( anc[22], anc[9] );
		Toffoli( anc[46], q[2], anc[11] );
		Toffoli( q[4], anc[2], anc[5] );
		CNOT( anc[51], anc[22] );
		Toffoli( anc[19], anc[1], anc[36] );
		CNOT( anc[40], anc[46] );
		CNOT( anc[24], anc[51] );
		Toffoli( anc[45], anc[39], q[3] );
		Toffoli( anc[29], anc[37], q[6] );
		CNOT( anc[51], anc[23] );
		Toffoli( anc[31], anc[42], anc[12] );
		Toffoli( q[0], anc[12], anc[6] );
		Toffoli( anc[33], anc[46], anc[23] );
		Toffoli( anc[2], anc[49], anc[42] );
		CNOT( anc[15], anc[27] );
		CNOT( anc[11], q[3] );
	}
	Restore {
		CNOT( anc[12], res[0] );
		CNOT( anc[16], res[1] );
		CNOT( anc[11], res[2] );
		CNOT( anc[44], res[3] );
	}
	Unrecompute {
		CNOT( anc[11], q[3] );
		CNOT( anc[15], anc[27] );
		Toffoli( anc[2], anc[49], anc[42] );
		Toffoli( anc[33], anc[46], anc[23] );
		Toffoli( q[0], anc[12], anc[6] );
		Toffoli( anc[31], anc[42], anc[12] );
		CNOT( anc[51], anc[23] );
		Toffoli( anc[29], anc[37], q[6] );
		Toffoli( anc[45], anc[39], q[3] );
		CNOT( anc[24], anc[51] );
		CNOT( anc[40], anc[46] );
		Toffoli( anc[19], anc[1], anc[36] );
		CNOT( anc[51], anc[22] );
		Toffoli( q[4], anc[2], anc[5] );
		Toffoli( anc[46], q[2], anc[11] );
		CNOT( anc[22], anc[9] );
		Toffoli( anc[4], anc[41], anc[31] );
		Toffoli( anc[25], anc[0], q[6] );
		Toffoli( anc[9], anc[16], q[6] );
		CNOT( anc[7], anc[9] );
		CNOT( anc[24], anc[14] );
		Toffoli( anc[14], anc[30], anc[18] );
		Toffoli( q[6], anc[12], anc[18] );
		Toffoli( anc[34], anc[20], anc[19] );
		CNOT( anc[46], q[0] );
		CNOT( anc[7], anc[4] );
		CNOT( anc[8], q[7] );
		CNOT( anc[48], anc[42] );
		Toffoli( anc[48], anc[5], q[1] );
		Toffoli( q[4], anc[17], anc[36] );
		CNOT( anc[3], anc[46] );
		CNOT( anc[38], anc[35] );
		CNOT( anc[35], anc[22] );
		Toffoli( anc[6], anc[45], anc[15] );
		CNOT( anc[51], anc[20] );
		CNOT( anc[28], anc[26] );
		Toffoli( anc[43], anc[30], anc[47] );
	} Refree(anc, 53) {}
}
// Function 7 with degree 0
// nq: 12, na: 39, ng: 38
void func7(qbit **q, int n) {
printf("func7\n");
fflush(stderr);
	qbit *anc[39]; // ancilla
	qbit *nb[29]; // interacting bits
	qbit *res[1];
	nb[0] = q[5];
	nb[1] = q[11];
	nb[2] = q[4];
	nb[3] = q[9];
	nb[4] = q[11];
	nb[5] = q[9];
	nb[6] = q[1];
	nb[7] = q[9];
	nb[8] = q[2];
	nb[9] = q[5];
	nb[10] = q[0];
	nb[11] = q[1];
	nb[12] = q[10];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[5];
	nb[16] = q[11];
	nb[17] = q[2];
	nb[18] = q[3];
	nb[19] = q[10];
	nb[20] = q[4];
	nb[21] = q[6];
	nb[22] = q[6];
	nb[23] = q[3];
	nb[24] = q[5];
	nb[25] = q[1];
	nb[26] = q[6];
	nb[27] = q[3];
	nb[28] = q[3];
	res[0] = q[9];
	// Leaf function
	Compute (0, 39, 77, 39, 0, 3, 0) {
		acquire(39, anc, 29, nb);
		CNOT( q[5], anc[4] );
		CNOT( q[11], anc[0] );
		CNOT( anc[25], q[4] );
		Toffoli( anc[26], anc[28], anc[23] );
		CNOT( q[9], anc[0] );
		CNOT( anc[15], anc[23] );
		CNOT( anc[36], anc[29] );
		CNOT( q[11], q[9] );
		Toffoli( anc[21], anc[5], q[1] );
		Toffoli( q[9], anc[14], anc[36] );
		Toffoli( anc[14], anc[0], anc[22] );
		CNOT( q[2], q[5] );
		Toffoli( q[0], anc[2], anc[38] );
		Toffoli( q[1], anc[12], anc[2] );
		Toffoli( anc[29], q[10], anc[10] );
		Toffoli( anc[16], q[0], anc[29] );
		CNOT( anc[11], q[0] );
		CNOT( anc[29], anc[37] );
		Toffoli( anc[3], q[5], anc[38] );
		CNOT( anc[15], anc[18] );
		CNOT( anc[17], q[11] );
		CNOT( anc[0], anc[18] );
		CNOT( q[2], anc[33] );
		CNOT( anc[14], anc[34] );
		Toffoli( q[3], anc[15], anc[25] );
		Toffoli( q[10], anc[29], anc[23] );
		CNOT( anc[26], q[4] );
		CNOT( anc[37], q[6] );
		Toffoli( q[6], anc[24], anc[29] );
		CNOT( q[3], q[5] );
		Toffoli( anc[35], anc[14], q[1] );
		CNOT( anc[28], anc[8] );
		CNOT( q[6], anc[34] );
		Toffoli( anc[22], q[3], anc[12] );
		Toffoli( anc[1], anc[7], anc[15] );
		Toffoli( q[3], anc[3], anc[24] );
		CNOT( anc[14], anc[17] );
		Toffoli( anc[12], anc[25], anc[7] );
	}
	Store {
		CNOT( anc[34], res[0] );
	}
	Uncompute(res, 0, anc, 39, 77, 39){
		Toffoli( anc[12], anc[25], anc[7] );
		CNOT( anc[14], anc[17] );
		Toffoli( q[3], anc[3], anc[24] );
		Toffoli( anc[1], anc[7], anc[15] );
		Toffoli( anc[22], q[3], anc[12] );
		CNOT( q[6], anc[34] );
		CNOT( anc[28], anc[8] );
		Toffoli( anc[35], anc[14], q[1] );
		CNOT( q[3], q[5] );
		Toffoli( q[6], anc[24], anc[29] );
		CNOT( anc[37], q[6] );
		CNOT( anc[26], q[4] );
		Toffoli( q[10], anc[29], anc[23] );
		Toffoli( q[3], anc[15], anc[25] );
		CNOT( anc[14], anc[34] );
		CNOT( q[2], anc[33] );
		CNOT( anc[0], anc[18] );
		CNOT( anc[17], q[11] );
		CNOT( anc[15], anc[18] );
		Toffoli( anc[3], q[5], anc[38] );
		CNOT( anc[29], anc[37] );
		CNOT( anc[11], q[0] );
		Toffoli( anc[16], q[0], anc[29] );
		Toffoli( anc[29], q[10], anc[10] );
		Toffoli( q[1], anc[12], anc[2] );
		Toffoli( q[0], anc[2], anc[38] );
		CNOT( q[2], q[5] );
		Toffoli( anc[14], anc[0], anc[22] );
		Toffoli( q[9], anc[14], anc[36] );
		Toffoli( anc[21], anc[5], q[1] );
		CNOT( q[11], q[9] );
		CNOT( anc[36], anc[29] );
		CNOT( anc[15], anc[23] );
		CNOT( q[9], anc[0] );
		Toffoli( anc[26], anc[28], anc[23] );
		CNOT( anc[25], q[4] );
		CNOT( q[11], anc[0] );
		CNOT( q[5], anc[4] );
	} Free(anc, 39) {}
}
// Function 7 with degree 0
// nq: 12, na: 39, ng: 38
void func7R(qbit **q, int n) {
printf("func7R\n");
fflush(stderr);
	qbit *anc[39]; // ancilla
	qbit *nb[29]; // interacting bits
	qbit *res[1];
	nb[0] = q[5];
	nb[1] = q[11];
	nb[2] = q[4];
	nb[3] = q[9];
	nb[4] = q[11];
	nb[5] = q[9];
	nb[6] = q[1];
	nb[7] = q[9];
	nb[8] = q[2];
	nb[9] = q[5];
	nb[10] = q[0];
	nb[11] = q[1];
	nb[12] = q[10];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[5];
	nb[16] = q[11];
	nb[17] = q[2];
	nb[18] = q[3];
	nb[19] = q[10];
	nb[20] = q[4];
	nb[21] = q[6];
	nb[22] = q[6];
	nb[23] = q[3];
	nb[24] = q[5];
	nb[25] = q[1];
	nb[26] = q[6];
	nb[27] = q[3];
	nb[28] = q[3];
	res[0] = q[9];
	// Leaf function
	_computeModule(0, 39, 77, 39, 0, 3, 0);
	acquire(39, anc, 29, nb);
	Recompute (res, 0, anc, 39, 77, 39){
		Toffoli( anc[12], anc[25], anc[7] );
		CNOT( anc[14], anc[17] );
		Toffoli( q[3], anc[3], anc[24] );
		Toffoli( anc[1], anc[7], anc[15] );
		Toffoli( anc[22], q[3], anc[12] );
		CNOT( q[6], anc[34] );
		CNOT( anc[28], anc[8] );
		Toffoli( anc[35], anc[14], q[1] );
		CNOT( q[3], q[5] );
		Toffoli( q[6], anc[24], anc[29] );
		CNOT( anc[37], q[6] );
		CNOT( anc[26], q[4] );
		Toffoli( q[10], anc[29], anc[23] );
		Toffoli( q[3], anc[15], anc[25] );
		CNOT( anc[14], anc[34] );
		CNOT( q[2], anc[33] );
		CNOT( anc[0], anc[18] );
		CNOT( anc[17], q[11] );
		CNOT( anc[15], anc[18] );
		Toffoli( anc[3], q[5], anc[38] );
		CNOT( anc[29], anc[37] );
		CNOT( anc[11], q[0] );
		Toffoli( anc[16], q[0], anc[29] );
		Toffoli( anc[29], q[10], anc[10] );
		Toffoli( q[1], anc[12], anc[2] );
		Toffoli( q[0], anc[2], anc[38] );
		CNOT( q[2], q[5] );
		Toffoli( anc[14], anc[0], anc[22] );
		Toffoli( q[9], anc[14], anc[36] );
		Toffoli( anc[21], anc[5], q[1] );
		CNOT( q[11], q[9] );
		CNOT( anc[36], anc[29] );
		CNOT( anc[15], anc[23] );
		CNOT( q[9], anc[0] );
		Toffoli( anc[26], anc[28], anc[23] );
		CNOT( anc[25], q[4] );
		CNOT( q[11], anc[0] );
		CNOT( q[5], anc[4] );
	}
	Restore {
		CNOT( anc[34], res[0] );
	}
	Unrecompute {
		CNOT( q[5], anc[4] );
		CNOT( q[11], anc[0] );
		CNOT( anc[25], q[4] );
		Toffoli( anc[26], anc[28], anc[23] );
		CNOT( q[9], anc[0] );
		CNOT( anc[15], anc[23] );
		CNOT( anc[36], anc[29] );
		CNOT( q[11], q[9] );
		Toffoli( anc[21], anc[5], q[1] );
		Toffoli( q[9], anc[14], anc[36] );
		Toffoli( anc[14], anc[0], anc[22] );
		CNOT( q[2], q[5] );
		Toffoli( q[0], anc[2], anc[38] );
		Toffoli( q[1], anc[12], anc[2] );
		Toffoli( anc[29], q[10], anc[10] );
		Toffoli( anc[16], q[0], anc[29] );
		CNOT( anc[11], q[0] );
		CNOT( anc[29], anc[37] );
		Toffoli( anc[3], q[5], anc[38] );
		CNOT( anc[15], anc[18] );
		CNOT( anc[17], q[11] );
		CNOT( anc[0], anc[18] );
		CNOT( q[2], anc[33] );
		CNOT( anc[14], anc[34] );
		Toffoli( q[3], anc[15], anc[25] );
		Toffoli( q[10], anc[29], anc[23] );
		CNOT( anc[26], q[4] );
		CNOT( anc[37], q[6] );
		Toffoli( q[6], anc[24], anc[29] );
		CNOT( q[3], q[5] );
		Toffoli( anc[35], anc[14], q[1] );
		CNOT( anc[28], anc[8] );
		CNOT( q[6], anc[34] );
		Toffoli( anc[22], q[3], anc[12] );
		Toffoli( anc[1], anc[7], anc[15] );
		Toffoli( q[3], anc[3], anc[24] );
		CNOT( anc[14], anc[17] );
		Toffoli( anc[12], anc[25], anc[7] );
	} Refree(anc, 39) {}
}
// Function 6 with degree 0
// nq: 3, na: 59, ng: 42
void func6(qbit **q, int n) {
printf("func6\n");
fflush(stderr);
	qbit *anc[59]; // ancilla
	qbit *nb[2]; // interacting bits
	qbit *res[3];
	nb[0] = q[0];
	nb[1] = q[0];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[1];
	// Leaf function
	Compute (0, 59, 87, 45, 0, 3, 0) {
		acquire(59, anc, 2, nb);
		Toffoli( anc[6], anc[13], anc[8] );
		Toffoli( anc[52], anc[35], anc[27] );
		CNOT( anc[41], anc[17] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[28], anc[23], anc[29] );
		CNOT( anc[34], anc[47] );
		Toffoli( anc[4], anc[34], anc[31] );
		Toffoli( anc[48], anc[37], anc[56] );
		CNOT( anc[4], anc[32] );
		Toffoli( anc[57], anc[29], anc[40] );
		CNOT( anc[34], anc[50] );
		CNOT( q[0], anc[33] );
		Toffoli( anc[19], anc[37], anc[42] );
		Toffoli( anc[20], anc[8], anc[16] );
		Toffoli( anc[13], anc[1], anc[4] );
		CNOT( anc[10], anc[25] );
		CNOT( anc[1], anc[38] );
		CNOT( anc[5], anc[58] );
		Toffoli( anc[51], anc[56], anc[36] );
		CNOT( anc[11], anc[21] );
		CNOT( anc[7], anc[21] );
		CNOT( anc[25], anc[28] );
		CNOT( anc[27], anc[57] );
		Toffoli( anc[42], anc[24], anc[32] );
		CNOT( anc[14], anc[15] );
		CNOT( anc[27], anc[15] );
		Toffoli( anc[23], anc[54], anc[37] );
		Toffoli( anc[0], anc[28], anc[57] );
		Toffoli( anc[22], anc[26], anc[41] );
		CNOT( anc[24], anc[35] );
		CNOT( anc[54], anc[23] );
		Toffoli( anc[42], anc[28], anc[47] );
		CNOT( anc[2], anc[10] );
		Toffoli( anc[20], anc[43], anc[11] );
		Toffoli( anc[35], anc[42], anc[47] );
		CNOT( anc[29], anc[43] );
		Toffoli( anc[34], anc[49], anc[23] );
		CNOT( anc[12], anc[44] );
		CNOT( anc[29], anc[50] );
		CNOT( anc[17], anc[37] );
		Toffoli( anc[42], anc[50], anc[22] );
		Toffoli( anc[55], anc[51], anc[56] );
	}
	Store {
		CNOT( anc[50], res[0] );
		CNOT( anc[36], res[1] );
		CNOT( anc[35], res[2] );
	}
	Uncompute(res, 0, anc, 59, 87, 45){
		Toffoli( anc[55], anc[51], anc[56] );
		Toffoli( anc[42], anc[50], anc[22] );
		CNOT( anc[17], anc[37] );
		CNOT( anc[29], anc[50] );
		CNOT( anc[12], anc[44] );
		Toffoli( anc[34], anc[49], anc[23] );
		CNOT( anc[29], anc[43] );
		Toffoli( anc[35], anc[42], anc[47] );
		Toffoli( anc[20], anc[43], anc[11] );
		CNOT( anc[2], anc[10] );
		Toffoli( anc[42], anc[28], anc[47] );
		CNOT( anc[54], anc[23] );
		CNOT( anc[24], anc[35] );
		Toffoli( anc[22], anc[26], anc[41] );
		Toffoli( anc[0], anc[28], anc[57] );
		Toffoli( anc[23], anc[54], anc[37] );
		CNOT( anc[27], anc[15] );
		CNOT( anc[14], anc[15] );
		Toffoli( anc[42], anc[24], anc[32] );
		CNOT( anc[27], anc[57] );
		CNOT( anc[25], anc[28] );
		CNOT( anc[7], anc[21] );
		CNOT( anc[11], anc[21] );
		Toffoli( anc[51], anc[56], anc[36] );
		CNOT( anc[5], anc[58] );
		CNOT( anc[1], anc[38] );
		CNOT( anc[10], anc[25] );
		Toffoli( anc[13], anc[1], anc[4] );
		Toffoli( anc[20], anc[8], anc[16] );
		Toffoli( anc[19], anc[37], anc[42] );
		CNOT( q[0], anc[33] );
		CNOT( anc[34], anc[50] );
		Toffoli( anc[57], anc[29], anc[40] );
		CNOT( anc[4], anc[32] );
		Toffoli( anc[48], anc[37], anc[56] );
		Toffoli( anc[4], anc[34], anc[31] );
		CNOT( anc[34], anc[47] );
		Toffoli( anc[28], anc[23], anc[29] );
		CNOT( anc[6], q[0] );
		CNOT( anc[41], anc[17] );
		Toffoli( anc[52], anc[35], anc[27] );
		Toffoli( anc[6], anc[13], anc[8] );
	} Free(anc, 59) {}
}
// Function 6 with degree 0
// nq: 3, na: 59, ng: 42
void func6R(qbit **q, int n) {
printf("func6R\n");
fflush(stderr);
	qbit *anc[59]; // ancilla
	qbit *nb[2]; // interacting bits
	qbit *res[3];
	nb[0] = q[0];
	nb[1] = q[0];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[1];
	// Leaf function
	_computeModule(0, 59, 87, 45, 0, 3, 0);
	acquire(59, anc, 2, nb);
	Recompute (res, 0, anc, 59, 87, 45){
		Toffoli( anc[55], anc[51], anc[56] );
		Toffoli( anc[42], anc[50], anc[22] );
		CNOT( anc[17], anc[37] );
		CNOT( anc[29], anc[50] );
		CNOT( anc[12], anc[44] );
		Toffoli( anc[34], anc[49], anc[23] );
		CNOT( anc[29], anc[43] );
		Toffoli( anc[35], anc[42], anc[47] );
		Toffoli( anc[20], anc[43], anc[11] );
		CNOT( anc[2], anc[10] );
		Toffoli( anc[42], anc[28], anc[47] );
		CNOT( anc[54], anc[23] );
		CNOT( anc[24], anc[35] );
		Toffoli( anc[22], anc[26], anc[41] );
		Toffoli( anc[0], anc[28], anc[57] );
		Toffoli( anc[23], anc[54], anc[37] );
		CNOT( anc[27], anc[15] );
		CNOT( anc[14], anc[15] );
		Toffoli( anc[42], anc[24], anc[32] );
		CNOT( anc[27], anc[57] );
		CNOT( anc[25], anc[28] );
		CNOT( anc[7], anc[21] );
		CNOT( anc[11], anc[21] );
		Toffoli( anc[51], anc[56], anc[36] );
		CNOT( anc[5], anc[58] );
		CNOT( anc[1], anc[38] );
		CNOT( anc[10], anc[25] );
		Toffoli( anc[13], anc[1], anc[4] );
		Toffoli( anc[20], anc[8], anc[16] );
		Toffoli( anc[19], anc[37], anc[42] );
		CNOT( q[0], anc[33] );
		CNOT( anc[34], anc[50] );
		Toffoli( anc[57], anc[29], anc[40] );
		CNOT( anc[4], anc[32] );
		Toffoli( anc[48], anc[37], anc[56] );
		Toffoli( anc[4], anc[34], anc[31] );
		CNOT( anc[34], anc[47] );
		Toffoli( anc[28], anc[23], anc[29] );
		CNOT( anc[6], q[0] );
		CNOT( anc[41], anc[17] );
		Toffoli( anc[52], anc[35], anc[27] );
		Toffoli( anc[6], anc[13], anc[8] );
	}
	Restore {
		CNOT( anc[50], res[0] );
		CNOT( anc[36], res[1] );
		CNOT( anc[35], res[2] );
	}
	Unrecompute {
		Toffoli( anc[6], anc[13], anc[8] );
		Toffoli( anc[52], anc[35], anc[27] );
		CNOT( anc[41], anc[17] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[28], anc[23], anc[29] );
		CNOT( anc[34], anc[47] );
		Toffoli( anc[4], anc[34], anc[31] );
		Toffoli( anc[48], anc[37], anc[56] );
		CNOT( anc[4], anc[32] );
		Toffoli( anc[57], anc[29], anc[40] );
		CNOT( anc[34], anc[50] );
		CNOT( q[0], anc[33] );
		Toffoli( anc[19], anc[37], anc[42] );
		Toffoli( anc[20], anc[8], anc[16] );
		Toffoli( anc[13], anc[1], anc[4] );
		CNOT( anc[10], anc[25] );
		CNOT( anc[1], anc[38] );
		CNOT( anc[5], anc[58] );
		Toffoli( anc[51], anc[56], anc[36] );
		CNOT( anc[11], anc[21] );
		CNOT( anc[7], anc[21] );
		CNOT( anc[25], anc[28] );
		CNOT( anc[27], anc[57] );
		Toffoli( anc[42], anc[24], anc[32] );
		CNOT( anc[14], anc[15] );
		CNOT( anc[27], anc[15] );
		Toffoli( anc[23], anc[54], anc[37] );
		Toffoli( anc[0], anc[28], anc[57] );
		Toffoli( anc[22], anc[26], anc[41] );
		CNOT( anc[24], anc[35] );
		CNOT( anc[54], anc[23] );
		Toffoli( anc[42], anc[28], anc[47] );
		CNOT( anc[2], anc[10] );
		Toffoli( anc[20], anc[43], anc[11] );
		Toffoli( anc[35], anc[42], anc[47] );
		CNOT( anc[29], anc[43] );
		Toffoli( anc[34], anc[49], anc[23] );
		CNOT( anc[12], anc[44] );
		CNOT( anc[29], anc[50] );
		CNOT( anc[17], anc[37] );
		Toffoli( anc[42], anc[50], anc[22] );
		Toffoli( anc[55], anc[51], anc[56] );
	} Refree(anc, 59) {}
}
// Function 5 with degree 4
// nq: 5, na: 8, ng: 106
void func5(qbit **q, int n) {
printf("func5\n");
fflush(stderr);
	qbit *anc[8]; // ancilla
	qbit *nb[99]; // interacting bits
	qbit *res[4];
	qbit *nq0[9];
	qbit *nq1[6];
	qbit *nq2[10];
	qbit *nq3[6];
	nb[0] = q[2];
	nb[1] = q[2];
	nb[2] = q[2];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[2];
	nb[6] = q[3];
	nb[7] = q[0];
	nb[8] = q[3];
	nb[9] = q[4];
	nb[10] = q[3];
	nb[11] = q[4];
	nb[12] = q[3];
	nb[13] = q[3];
	nb[14] = q[4];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[1];
	nb[18] = q[4];
	nb[19] = q[2];
	nb[20] = q[0];
	nb[21] = q[1];
	nb[22] = q[1];
	nb[23] = q[4];
	nb[24] = q[3];
	nb[25] = q[2];
	nb[26] = q[1];
	nb[27] = q[1];
	nb[28] = q[1];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[2];
	nb[33] = q[2];
	nb[34] = q[0];
	nb[35] = q[1];
	nb[36] = q[4];
	nb[37] = q[3];
	nb[38] = q[1];
	nb[39] = q[3];
	nb[40] = q[1];
	nb[41] = q[0];
	nb[42] = q[1];
	nb[43] = q[4];
	nb[44] = q[3];
	nb[45] = q[4];
	nb[46] = q[4];
	nb[47] = q[0];
	nb[48] = q[0];
	nb[49] = q[2];
	nb[50] = q[3];
	nb[51] = q[0];
	nb[52] = q[1];
	nb[53] = q[2];
	nb[54] = q[4];
	nb[55] = q[2];
	nb[56] = q[3];
	nb[57] = q[1];
	nb[58] = q[4];
	nb[59] = q[1];
	nb[60] = q[0];
	nb[61] = q[1];
	nb[62] = q[4];
	nb[63] = q[2];
	nb[64] = q[3];
	nb[65] = q[2];
	nb[66] = q[4];
	nb[67] = q[2];
	nb[68] = q[2];
	nb[69] = q[4];
	nb[70] = q[2];
	nb[71] = q[1];
	nb[72] = q[2];
	nb[73] = q[3];
	nb[74] = q[0];
	nb[75] = q[0];
	nb[76] = q[2];
	nb[77] = q[4];
	nb[78] = q[2];
	nb[79] = q[2];
	nb[80] = q[0];
	nb[81] = q[4];
	nb[82] = q[3];
	nb[83] = q[1];
	nb[84] = q[4];
	nb[85] = q[0];
	nb[86] = q[0];
	nb[87] = q[3];
	nb[88] = q[4];
	nb[89] = q[4];
	nb[90] = q[4];
	nb[91] = q[3];
	nb[92] = q[0];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[3];
	nb[96] = q[0];
	nb[97] = q[3];
	nb[98] = q[1];
	res[0] = q[3];
	res[1] = q[2];
	res[2] = q[0];
	res[3] = q[1];
	// Non-leaf function
	nq0[0] = q[1];
	nq0[1] = anc[1];
	nq0[2] = anc[0];
	nq0[3] = q[2];
	nq0[4] = anc[6];
	nq0[5] = anc[2];
	nq0[6] = anc[4];
	nq0[7] = anc[5];
	nq0[8] = anc[3];
	nq1[0] = anc[5];
	nq1[1] = q[4];
	nq1[2] = anc[4];
	nq1[3] = q[1];
	nq1[4] = anc[3];
	nq1[5] = anc[2];
	nq2[0] = q[4];
	nq2[1] = anc[4];
	nq2[2] = anc[6];
	nq2[3] = anc[0];
	nq2[4] = anc[2];
	nq2[5] = anc[1];
	nq2[6] = q[3];
	nq2[7] = q[2];
	nq2[8] = anc[3];
	nq2[9] = anc[5];
	nq3[0] = anc[2];
	nq3[1] = q[2];
	nq3[2] = q[1];
	nq3[3] = anc[7];
	nq3[4] = anc[3];
	nq3[5] = anc[4];
	Compute (0, 8, 216, 110, 4, 3, 0){
		acquire(8, anc, 99, nb);
		CNOT( anc[2], anc[0] );
		CNOT( anc[2], q[2] );
		Toffoli( q[3], anc[3], q[0] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[2], anc[0], anc[3] );
		CNOT( anc[5], q[3] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( q[4], anc[6] );
		CNOT( anc[3], q[0] );
		CNOT( anc[6], anc[1] );
		Toffoli( q[1], anc[2], anc[5] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[5], q[4], q[0] );
		CNOT( q[0], anc[4] );
		CNOT( anc[7], q[2] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[4], anc[6] );
		Toffoli( anc[1], anc[6], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( q[1], anc[6] );
		CNOT( anc[1], anc[5] );
		Toffoli( q[4], anc[3], q[2] );
		Toffoli( q[1], anc[0], anc[7] );
		Toffoli( q[1], anc[1], anc[7] );
		CNOT( q[4], anc[6] );
		Toffoli( q[2], anc[3], anc[5] );
		CNOT( anc[7], anc[1] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[2], anc[1], q[1] );
		Toffoli( anc[6], anc[5], q[1] );
		CNOT( anc[4], q[1] );
		Toffoli( q[1], anc[6], anc[7] );
		CNOT( anc[3], q[2] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[4], anc[0], q[3] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[7], q[4] );
		Toffoli( q[1], anc[0], anc[4] );
		Toffoli( q[3], anc[5], anc[4] );
		CNOT( q[0], anc[6] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[6], anc[0], q[2] );
		CNOT( anc[6], q[3] );
		CNOT( q[3], q[4] );
		Toffoli( anc[0], anc[4], q[0] );
		Toffoli( anc[5], anc[2], q[1] );
		CNOT( q[1], anc[5] );
		Toffoli( q[1], anc[5], q[4] );
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( anc[5], anc[0] );
		CNOT( q[3], q[4] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[3], q[4], anc[1] );
		func15(nq0, 9);
		Toffoli( q[0], anc[7], anc[6] );
		Toffoli( anc[6], q[4], anc[0] );
		CNOT( anc[0], q[4] );
		Toffoli( anc[7], anc[5], anc[2] );
		Toffoli( anc[3], q[0], anc[2] );
		Toffoli( anc[6], anc[7], q[2] );
		Toffoli( anc[1], anc[5], q[0] );
		CNOT( q[3], anc[1] );
		func16(nq1, 6);
		Toffoli( q[0], q[2], anc[4] );
		CNOT( q[3], anc[7] );
		Toffoli( anc[5], anc[2], anc[4] );
		CNOT( anc[5], anc[3] );
		Toffoli( q[1], anc[3], anc[4] );
		CNOT( anc[7], anc[3] );
		CNOT( q[4], anc[3] );
		CNOT( anc[5], anc[0] );
		CNOT( q[3], anc[4] );
		Toffoli( anc[5], anc[3], anc[2] );
		Toffoli( anc[5], anc[2], q[3] );
		Toffoli( q[3], q[4], anc[7] );
		Toffoli( anc[7], anc[3], anc[6] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[1], q[3], anc[7] );
		Toffoli( anc[5], anc[7], q[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[1], anc[5], q[0] );
		Toffoli( q[2], q[4], anc[0] );
		CNOT( q[0], anc[6] );
		CNOT( anc[4], q[2] );
		Toffoli( anc[2], q[2], anc[6] );
		Toffoli( anc[1], anc[2], q[0] );
		CNOT( q[4], anc[6] );
		func18(nq3, 6);
		CNOT( q[4], q[2] );
		CNOT( anc[7], anc[4] );
		Toffoli( q[2], anc[5], q[3] );
		Toffoli( q[3], anc[0], anc[6] );
		Toffoli( q[1], anc[0], anc[6] );
		func17(nq2, 10);
		Toffoli( anc[1], q[1], q[4] );
		CNOT( anc[5], anc[0] );
		CNOT( q[3], anc[2] );
		CNOT( q[2], anc[4] );
		Toffoli( anc[0], anc[7], anc[3] );
		Toffoli( q[4], anc[4], anc[1] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[1], q[0] );
		CNOT( anc[4], anc[3] );
		Toffoli( anc[3], anc[2], anc[5] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[6], q[2], q[4] );
		CNOT( q[2], q[0] );
		CNOT( q[2], q[3] );
	}
	Store {
		CNOT( anc[1], res[0] );
		CNOT( q[4], res[1] );
		CNOT( q[2], res[2] );
		CNOT( anc[2], res[3] );
	}
	Uncompute(res, 0, anc, 8, 216, 110){
		CNOT( q[2], q[3] );
		CNOT( q[2], q[0] );
		Toffoli( anc[6], q[2], q[4] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[3], anc[2], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( anc[1], q[0] );
		CNOT( anc[4], anc[7] );
		Toffoli( q[4], anc[4], anc[1] );
		Toffoli( anc[0], anc[7], anc[3] );
		CNOT( q[2], anc[4] );
		CNOT( q[3], anc[2] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[1], q[1], q[4] );
		func17R(nq2, 10);
		Toffoli( q[1], anc[0], anc[6] );
		Toffoli( q[3], anc[0], anc[6] );
		Toffoli( q[2], anc[5], q[3] );
		CNOT( anc[7], anc[4] );
		CNOT( q[4], q[2] );
		func18R(nq3, 6);
		CNOT( q[4], anc[6] );
		Toffoli( anc[1], anc[2], q[0] );
		Toffoli( anc[2], q[2], anc[6] );
		CNOT( anc[4], q[2] );
		CNOT( q[0], anc[6] );
		Toffoli( q[2], q[4], anc[0] );
		Toffoli( q[1], anc[5], q[0] );
		CNOT( q[2], q[0] );
		Toffoli( anc[5], anc[7], q[0] );
		Toffoli( anc[1], q[3], anc[7] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[7], anc[3], anc[6] );
		Toffoli( q[3], q[4], anc[7] );
		Toffoli( anc[5], anc[2], q[3] );
		Toffoli( anc[5], anc[3], anc[2] );
		CNOT( q[3], anc[4] );
		CNOT( anc[5], anc[0] );
		CNOT( q[4], anc[3] );
		CNOT( anc[7], anc[3] );
		Toffoli( q[1], anc[3], anc[4] );
		CNOT( anc[5], anc[3] );
		Toffoli( anc[5], anc[2], anc[4] );
		CNOT( q[3], anc[7] );
		Toffoli( q[0], q[2], anc[4] );
		func16R(nq1, 6);
		CNOT( q[3], anc[1] );
		Toffoli( anc[1], anc[5], q[0] );
		Toffoli( anc[6], anc[7], q[2] );
		Toffoli( anc[3], q[0], anc[2] );
		Toffoli( anc[7], anc[5], anc[2] );
		CNOT( anc[0], q[4] );
		Toffoli( anc[6], q[4], anc[0] );
		Toffoli( q[0], anc[7], anc[6] );
		func15R(nq0, 9);
		Toffoli( anc[3], q[4], anc[1] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], anc[0] );
		CNOT( q[3], q[4] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		Toffoli( q[1], anc[5], q[4] );
		CNOT( q[1], anc[5] );
		Toffoli( anc[5], anc[2], q[1] );
		Toffoli( anc[0], anc[4], q[0] );
		CNOT( q[3], q[4] );
		CNOT( anc[6], q[3] );
		Toffoli( anc[6], anc[0], q[2] );
		Toffoli( anc[2], anc[3], anc[0] );
		CNOT( q[0], anc[6] );
		Toffoli( q[3], anc[5], anc[4] );
		Toffoli( q[1], anc[0], anc[4] );
		CNOT( anc[7], q[4] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[4], anc[0], q[3] );
		CNOT( anc[6], q[0] );
		CNOT( anc[3], q[2] );
		Toffoli( q[1], anc[6], anc[7] );
		CNOT( anc[4], q[1] );
		Toffoli( anc[6], anc[5], q[1] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( q[0], anc[2] );
		CNOT( anc[7], anc[1] );
		Toffoli( q[2], anc[3], anc[5] );
		CNOT( q[4], anc[6] );
		Toffoli( q[1], anc[1], anc[7] );
		Toffoli( q[1], anc[0], anc[7] );
		Toffoli( q[4], anc[3], q[2] );
		CNOT( anc[1], anc[5] );
		CNOT( q[1], anc[6] );
		CNOT( anc[4], anc[3] );
		Toffoli( anc[1], anc[6], anc[5] );
		Toffoli( q[1], q[4], anc[6] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[7], q[2] );
		CNOT( q[0], anc[4] );
		Toffoli( anc[5], q[4], q[0] );
		CNOT( anc[2], q[0] );
		Toffoli( q[1], anc[2], anc[5] );
		CNOT( anc[6], anc[1] );
		CNOT( anc[3], q[0] );
		CNOT( q[4], anc[6] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( anc[5], q[3] );
		Toffoli( q[2], anc[0], anc[3] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[3], anc[3], q[0] );
		CNOT( anc[2], q[2] );
		CNOT( anc[2], anc[0] );
	} Free(anc, 8) {}
}
// Function 5 with degree 4
// nq: 5, na: 8, ng: 106
void func5R(qbit **q, int n) {
printf("func5R\n");
fflush(stderr);
	qbit *anc[8]; // ancilla
	qbit *nb[99]; // interacting bits
	qbit *res[4];
	qbit *nq0[9];
	qbit *nq1[6];
	qbit *nq2[10];
	qbit *nq3[6];
	nb[0] = q[2];
	nb[1] = q[2];
	nb[2] = q[2];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[2];
	nb[6] = q[3];
	nb[7] = q[0];
	nb[8] = q[3];
	nb[9] = q[4];
	nb[10] = q[3];
	nb[11] = q[4];
	nb[12] = q[3];
	nb[13] = q[3];
	nb[14] = q[4];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[1];
	nb[18] = q[4];
	nb[19] = q[2];
	nb[20] = q[0];
	nb[21] = q[1];
	nb[22] = q[1];
	nb[23] = q[4];
	nb[24] = q[3];
	nb[25] = q[2];
	nb[26] = q[1];
	nb[27] = q[1];
	nb[28] = q[1];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[2];
	nb[33] = q[2];
	nb[34] = q[0];
	nb[35] = q[1];
	nb[36] = q[4];
	nb[37] = q[3];
	nb[38] = q[1];
	nb[39] = q[3];
	nb[40] = q[1];
	nb[41] = q[0];
	nb[42] = q[1];
	nb[43] = q[4];
	nb[44] = q[3];
	nb[45] = q[4];
	nb[46] = q[4];
	nb[47] = q[0];
	nb[48] = q[0];
	nb[49] = q[2];
	nb[50] = q[3];
	nb[51] = q[0];
	nb[52] = q[1];
	nb[53] = q[2];
	nb[54] = q[4];
	nb[55] = q[2];
	nb[56] = q[3];
	nb[57] = q[1];
	nb[58] = q[4];
	nb[59] = q[1];
	nb[60] = q[0];
	nb[61] = q[1];
	nb[62] = q[4];
	nb[63] = q[2];
	nb[64] = q[3];
	nb[65] = q[2];
	nb[66] = q[4];
	nb[67] = q[2];
	nb[68] = q[2];
	nb[69] = q[4];
	nb[70] = q[2];
	nb[71] = q[1];
	nb[72] = q[2];
	nb[73] = q[3];
	nb[74] = q[0];
	nb[75] = q[0];
	nb[76] = q[2];
	nb[77] = q[4];
	nb[78] = q[2];
	nb[79] = q[2];
	nb[80] = q[0];
	nb[81] = q[4];
	nb[82] = q[3];
	nb[83] = q[1];
	nb[84] = q[4];
	nb[85] = q[0];
	nb[86] = q[0];
	nb[87] = q[3];
	nb[88] = q[4];
	nb[89] = q[4];
	nb[90] = q[4];
	nb[91] = q[3];
	nb[92] = q[0];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[3];
	nb[96] = q[0];
	nb[97] = q[3];
	nb[98] = q[1];
	res[0] = q[3];
	res[1] = q[2];
	res[2] = q[0];
	res[3] = q[1];
	// Non-leaf function
	nq0[0] = q[1];
	nq0[1] = anc[1];
	nq0[2] = anc[0];
	nq0[3] = q[2];
	nq0[4] = anc[6];
	nq0[5] = anc[2];
	nq0[6] = anc[4];
	nq0[7] = anc[5];
	nq0[8] = anc[3];
	nq1[0] = anc[5];
	nq1[1] = q[4];
	nq1[2] = anc[4];
	nq1[3] = q[1];
	nq1[4] = anc[3];
	nq1[5] = anc[2];
	nq2[0] = q[4];
	nq2[1] = anc[4];
	nq2[2] = anc[6];
	nq2[3] = anc[0];
	nq2[4] = anc[2];
	nq2[5] = anc[1];
	nq2[6] = q[3];
	nq2[7] = q[2];
	nq2[8] = anc[3];
	nq2[9] = anc[5];
	nq3[0] = anc[2];
	nq3[1] = q[2];
	nq3[2] = q[1];
	nq3[3] = anc[7];
	nq3[4] = anc[3];
	nq3[5] = anc[4];
	_computeModule(0, 8, 216, 110, 4, 3, 0);
	acquire(8, anc, 99, nb);
	Recompute(res, 0, anc, 8, 216, 110){
		CNOT( anc[2], anc[0] );
		CNOT( anc[2], q[2] );
		Toffoli( q[3], anc[3], q[0] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[2], anc[0], anc[3] );
		CNOT( anc[5], q[3] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( q[4], anc[6] );
		CNOT( anc[3], q[0] );
		CNOT( anc[6], anc[1] );
		Toffoli( q[1], anc[2], anc[5] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[5], q[4], q[0] );
		CNOT( q[0], anc[4] );
		CNOT( anc[7], q[2] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[4], anc[6] );
		Toffoli( anc[1], anc[6], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( q[1], anc[6] );
		CNOT( anc[1], anc[5] );
		Toffoli( q[4], anc[3], q[2] );
		Toffoli( q[1], anc[0], anc[7] );
		Toffoli( q[1], anc[1], anc[7] );
		CNOT( q[4], anc[6] );
		Toffoli( q[2], anc[3], anc[5] );
		CNOT( anc[7], anc[1] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[2], anc[1], q[1] );
		Toffoli( anc[6], anc[5], q[1] );
		CNOT( anc[4], q[1] );
		Toffoli( q[1], anc[6], anc[7] );
		CNOT( anc[3], q[2] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[4], anc[0], q[3] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[7], q[4] );
		Toffoli( q[1], anc[0], anc[4] );
		Toffoli( q[3], anc[5], anc[4] );
		CNOT( q[0], anc[6] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[6], anc[0], q[2] );
		CNOT( anc[6], q[3] );
		CNOT( q[3], q[4] );
		Toffoli( anc[0], anc[4], q[0] );
		Toffoli( anc[5], anc[2], q[1] );
		CNOT( q[1], anc[5] );
		Toffoli( q[1], anc[5], q[4] );
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( anc[5], anc[0] );
		CNOT( q[3], q[4] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[3], q[4], anc[1] );
		func15(nq0, 9);
		Toffoli( q[0], anc[7], anc[6] );
		Toffoli( anc[6], q[4], anc[0] );
		CNOT( anc[0], q[4] );
		Toffoli( anc[7], anc[5], anc[2] );
		Toffoli( anc[3], q[0], anc[2] );
		Toffoli( anc[6], anc[7], q[2] );
		Toffoli( anc[1], anc[5], q[0] );
		CNOT( q[3], anc[1] );
		func16(nq1, 6);
		Toffoli( q[0], q[2], anc[4] );
		CNOT( q[3], anc[7] );
		Toffoli( anc[5], anc[2], anc[4] );
		CNOT( anc[5], anc[3] );
		Toffoli( q[1], anc[3], anc[4] );
		CNOT( anc[7], anc[3] );
		CNOT( q[4], anc[3] );
		CNOT( anc[5], anc[0] );
		CNOT( q[3], anc[4] );
		Toffoli( anc[5], anc[3], anc[2] );
		Toffoli( anc[5], anc[2], q[3] );
		Toffoli( q[3], q[4], anc[7] );
		Toffoli( anc[7], anc[3], anc[6] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[1], q[3], anc[7] );
		Toffoli( anc[5], anc[7], q[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[1], anc[5], q[0] );
		Toffoli( q[2], q[4], anc[0] );
		CNOT( q[0], anc[6] );
		CNOT( anc[4], q[2] );
		Toffoli( anc[2], q[2], anc[6] );
		Toffoli( anc[1], anc[2], q[0] );
		CNOT( q[4], anc[6] );
		func18(nq3, 6);
		CNOT( q[4], q[2] );
		CNOT( anc[7], anc[4] );
		Toffoli( q[2], anc[5], q[3] );
		Toffoli( q[3], anc[0], anc[6] );
		Toffoli( q[1], anc[0], anc[6] );
		func17(nq2, 10);
		Toffoli( anc[1], q[1], q[4] );
		CNOT( anc[5], anc[0] );
		CNOT( q[3], anc[2] );
		CNOT( q[2], anc[4] );
		Toffoli( anc[0], anc[7], anc[3] );
		Toffoli( q[4], anc[4], anc[1] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[1], q[0] );
		CNOT( anc[4], anc[3] );
		Toffoli( anc[3], anc[2], anc[5] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[6], q[2], q[4] );
		CNOT( q[2], q[0] );
		CNOT( q[2], q[3] );
	}
	Restore {
		CNOT( anc[1], res[0] );
		CNOT( q[4], res[1] );
		CNOT( q[2], res[2] );
		CNOT( anc[2], res[3] );
	}
	Unrecompute {
		CNOT( q[2], q[3] );
		CNOT( q[2], q[0] );
		Toffoli( anc[6], q[2], q[4] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[3], anc[2], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( anc[1], q[0] );
		CNOT( anc[4], anc[7] );
		Toffoli( q[4], anc[4], anc[1] );
		Toffoli( anc[0], anc[7], anc[3] );
		CNOT( q[2], anc[4] );
		CNOT( q[3], anc[2] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[1], q[1], q[4] );
		func17R(nq2, 10);
		Toffoli( q[1], anc[0], anc[6] );
		Toffoli( q[3], anc[0], anc[6] );
		Toffoli( q[2], anc[5], q[3] );
		CNOT( anc[7], anc[4] );
		CNOT( q[4], q[2] );
		func18R(nq3, 6);
		CNOT( q[4], anc[6] );
		Toffoli( anc[1], anc[2], q[0] );
		Toffoli( anc[2], q[2], anc[6] );
		CNOT( anc[4], q[2] );
		CNOT( q[0], anc[6] );
		Toffoli( q[2], q[4], anc[0] );
		Toffoli( q[1], anc[5], q[0] );
		CNOT( q[2], q[0] );
		Toffoli( anc[5], anc[7], q[0] );
		Toffoli( anc[1], q[3], anc[7] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[7], anc[3], anc[6] );
		Toffoli( q[3], q[4], anc[7] );
		Toffoli( anc[5], anc[2], q[3] );
		Toffoli( anc[5], anc[3], anc[2] );
		CNOT( q[3], anc[4] );
		CNOT( anc[5], anc[0] );
		CNOT( q[4], anc[3] );
		CNOT( anc[7], anc[3] );
		Toffoli( q[1], anc[3], anc[4] );
		CNOT( anc[5], anc[3] );
		Toffoli( anc[5], anc[2], anc[4] );
		CNOT( q[3], anc[7] );
		Toffoli( q[0], q[2], anc[4] );
		func16R(nq1, 6);
		CNOT( q[3], anc[1] );
		Toffoli( anc[1], anc[5], q[0] );
		Toffoli( anc[6], anc[7], q[2] );
		Toffoli( anc[3], q[0], anc[2] );
		Toffoli( anc[7], anc[5], anc[2] );
		CNOT( anc[0], q[4] );
		Toffoli( anc[6], q[4], anc[0] );
		Toffoli( q[0], anc[7], anc[6] );
		func15R(nq0, 9);
		Toffoli( anc[3], q[4], anc[1] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], anc[0] );
		CNOT( q[3], q[4] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		Toffoli( q[1], anc[5], q[4] );
		CNOT( q[1], anc[5] );
		Toffoli( anc[5], anc[2], q[1] );
		Toffoli( anc[0], anc[4], q[0] );
		CNOT( q[3], q[4] );
		CNOT( anc[6], q[3] );
		Toffoli( anc[6], anc[0], q[2] );
		Toffoli( anc[2], anc[3], anc[0] );
		CNOT( q[0], anc[6] );
		Toffoli( q[3], anc[5], anc[4] );
		Toffoli( q[1], anc[0], anc[4] );
		CNOT( anc[7], q[4] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[4], anc[0], q[3] );
		CNOT( anc[6], q[0] );
		CNOT( anc[3], q[2] );
		Toffoli( q[1], anc[6], anc[7] );
		CNOT( anc[4], q[1] );
		Toffoli( anc[6], anc[5], q[1] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( q[0], anc[2] );
		CNOT( anc[7], anc[1] );
		Toffoli( q[2], anc[3], anc[5] );
		CNOT( q[4], anc[6] );
		Toffoli( q[1], anc[1], anc[7] );
		Toffoli( q[1], anc[0], anc[7] );
		Toffoli( q[4], anc[3], q[2] );
		CNOT( anc[1], anc[5] );
		CNOT( q[1], anc[6] );
		CNOT( anc[4], anc[3] );
		Toffoli( anc[1], anc[6], anc[5] );
		Toffoli( q[1], q[4], anc[6] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[7], q[2] );
		CNOT( q[0], anc[4] );
		Toffoli( anc[5], q[4], q[0] );
		CNOT( anc[2], q[0] );
		Toffoli( q[1], anc[2], anc[5] );
		CNOT( anc[6], anc[1] );
		CNOT( anc[3], q[0] );
		CNOT( q[4], anc[6] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( anc[5], q[3] );
		Toffoli( q[2], anc[0], anc[3] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[3], anc[3], q[0] );
		CNOT( anc[2], q[2] );
		CNOT( anc[2], anc[0] );
	} Refree(anc, 8) {}
}
// Function 4 with degree 3
// nq: 5, na: 29, ng: 7
void func4(qbit **q, int n) {
printf("func4\n");
fflush(stderr);
	qbit *anc[29]; // ancilla
	qbit *nb[2]; // interacting bits
	qbit *res[5];
	qbit *nq0[16];
	qbit *nq1[4];
	qbit *nq2[12];
	nb[0] = q[1];
	nb[1] = q[3];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[1];
	res[3] = q[3];
	res[4] = q[4];
	// Non-leaf function
	nq0[0] = anc[23];
	nq0[1] = anc[26];
	nq0[2] = anc[2];
	nq0[3] = q[3];
	nq0[4] = anc[15];
	nq0[5] = q[4];
	nq0[6] = anc[1];
	nq0[7] = anc[13];
	nq0[8] = anc[25];
	nq0[9] = anc[22];
	nq0[10] = anc[11];
	nq0[11] = anc[16];
	nq0[12] = anc[8];
	nq0[13] = anc[9];
	nq0[14] = anc[14];
	nq0[15] = anc[10];
	nq1[0] = anc[27];
	nq1[1] = anc[5];
	nq1[2] = q[1];
	nq1[3] = q[3];
	nq2[0] = anc[0];
	nq2[1] = anc[27];
	nq2[2] = anc[11];
	nq2[3] = q[4];
	nq2[4] = anc[18];
	nq2[5] = anc[7];
	nq2[6] = anc[19];
	nq2[7] = anc[14];
	nq2[8] = anc[23];
	nq2[9] = anc[2];
	nq2[10] = anc[24];
	nq2[11] = anc[22];
	Compute (0, 29, 19, 12, 3, 4*LOOP, 0){
		acquire(29, anc, 2, nb);
		CNOT( anc[10], q[3] );
		func14(nq2, 12);
		Toffoli( anc[15], q[1], anc[21] );
		Toffoli( anc[17], anc[24], anc[25] );
		func13(nq1, 4);
		Toffoli( anc[4], anc[19], anc[23] );
		Toffoli( anc[20], anc[7], anc[4] );
		CNOT( anc[2], anc[3] );
		func12(nq0, 16);
		Toffoli( anc[20], anc[25], anc[15] );
	}
	Store {
		CNOT( anc[28], res[0] );
		CNOT( q[1], res[1] );
		CNOT( anc[18], res[2] );
		CNOT( anc[19], res[3] );
		CNOT( anc[2], res[4] );
	}
	Uncompute(res, 0, anc, 29, 19, 12){
		Toffoli( anc[20], anc[25], anc[15] );
		func12R(nq0, 16);
		CNOT( anc[2], anc[3] );
		Toffoli( anc[20], anc[7], anc[4] );
		Toffoli( anc[4], anc[19], anc[23] );
		func13R(nq1, 4);
		Toffoli( anc[17], anc[24], anc[25] );
		Toffoli( anc[15], q[1], anc[21] );
		func14R(nq2, 12);
		CNOT( anc[10], q[3] );
	} Free(anc, 29) {}
}
// Function 4 with degree 3
// nq: 5, na: 29, ng: 7
void func4R(qbit **q, int n) {
printf("func4R\n");
fflush(stderr);
	qbit *anc[29]; // ancilla
	qbit *nb[2]; // interacting bits
	qbit *res[5];
	qbit *nq0[16];
	qbit *nq1[4];
	qbit *nq2[12];
	nb[0] = q[1];
	nb[1] = q[3];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[1];
	res[3] = q[3];
	res[4] = q[4];
	// Non-leaf function
	nq0[0] = anc[23];
	nq0[1] = anc[26];
	nq0[2] = anc[2];
	nq0[3] = q[3];
	nq0[4] = anc[15];
	nq0[5] = q[4];
	nq0[6] = anc[1];
	nq0[7] = anc[13];
	nq0[8] = anc[25];
	nq0[9] = anc[22];
	nq0[10] = anc[11];
	nq0[11] = anc[16];
	nq0[12] = anc[8];
	nq0[13] = anc[9];
	nq0[14] = anc[14];
	nq0[15] = anc[10];
	nq1[0] = anc[27];
	nq1[1] = anc[5];
	nq1[2] = q[1];
	nq1[3] = q[3];
	nq2[0] = anc[0];
	nq2[1] = anc[27];
	nq2[2] = anc[11];
	nq2[3] = q[4];
	nq2[4] = anc[18];
	nq2[5] = anc[7];
	nq2[6] = anc[19];
	nq2[7] = anc[14];
	nq2[8] = anc[23];
	nq2[9] = anc[2];
	nq2[10] = anc[24];
	nq2[11] = anc[22];
	_computeModule(0, 29, 19, 12, 3, 4*LOOP, 0);
	acquire(29, anc, 2, nb);
	Recompute(res, 0, anc, 29, 19, 12){
		CNOT( anc[10], q[3] );
		func14(nq2, 12);
		Toffoli( anc[15], q[1], anc[21] );
		Toffoli( anc[17], anc[24], anc[25] );
		func13(nq1, 4);
		Toffoli( anc[4], anc[19], anc[23] );
		Toffoli( anc[20], anc[7], anc[4] );
		CNOT( anc[2], anc[3] );
		func12(nq0, 16);
		Toffoli( anc[20], anc[25], anc[15] );
	}
	Restore {
		CNOT( anc[28], res[0] );
		CNOT( q[1], res[1] );
		CNOT( anc[18], res[2] );
		CNOT( anc[19], res[3] );
		CNOT( anc[2], res[4] );
	}
	Unrecompute {
		Toffoli( anc[20], anc[25], anc[15] );
		func12R(nq0, 16);
		CNOT( anc[2], anc[3] );
		Toffoli( anc[20], anc[7], anc[4] );
		Toffoli( anc[4], anc[19], anc[23] );
		func13R(nq1, 4);
		Toffoli( anc[17], anc[24], anc[25] );
		Toffoli( anc[15], q[1], anc[21] );
		func14R(nq2, 12);
		CNOT( anc[10], q[3] );
	} Refree(anc, 29) {}
}
// Function 3 with degree 0
// nq: 12, na: 37, ng: 14
void func3(qbit **q, int n) {
printf("func3\n");
fflush(stderr);
	qbit *anc[37]; // ancilla
	qbit *nb[8]; // interacting bits
	qbit *res[5];
	nb[0] = q[3];
	nb[1] = q[9];
	nb[2] = q[4];
	nb[3] = q[9];
	nb[4] = q[2];
	nb[5] = q[2];
	nb[6] = q[5];
	nb[7] = q[3];
	res[0] = q[6];
	res[1] = q[2];
	res[2] = q[9];
	res[3] = q[5];
	res[4] = q[8];
	// Leaf function
	Compute (0, 37, 33, 19, 0, 4*LOOP, 0) {
		acquire(37, anc, 8, nb);
		Toffoli( anc[17], q[3], anc[15] );
		Toffoli( anc[19], anc[9], anc[16] );
		CNOT( anc[33], q[9] );
		Toffoli( anc[28], q[4], anc[29] );
		CNOT( anc[13], q[9] );
		Toffoli( anc[12], anc[34], anc[18] );
		CNOT( q[2], anc[36] );
		CNOT( anc[23], anc[17] );
		Toffoli( anc[20], anc[0], anc[6] );
		Toffoli( anc[17], anc[2], anc[22] );
		CNOT( anc[1], anc[20] );
		Toffoli( q[2], q[5], anc[14] );
		CNOT( q[3], anc[5] );
		Toffoli( anc[15], anc[4], anc[17] );
	}
	Store {
		CNOT( anc[34], res[0] );
		CNOT( q[9], res[1] );
		CNOT( anc[20], res[2] );
		CNOT( q[4], res[3] );
		CNOT( q[7], res[4] );
	}
	Uncompute(res, 0, anc, 37, 33, 19){
		Toffoli( anc[15], anc[4], anc[17] );
		CNOT( q[3], anc[5] );
		Toffoli( q[2], q[5], anc[14] );
		CNOT( anc[1], anc[20] );
		Toffoli( anc[17], anc[2], anc[22] );
		Toffoli( anc[20], anc[0], anc[6] );
		CNOT( anc[23], anc[17] );
		CNOT( q[2], anc[36] );
		Toffoli( anc[12], anc[34], anc[18] );
		CNOT( anc[13], q[9] );
		Toffoli( anc[28], q[4], anc[29] );
		CNOT( anc[33], q[9] );
		Toffoli( anc[19], anc[9], anc[16] );
		Toffoli( anc[17], q[3], anc[15] );
	} Free(anc, 37) {}
}
// Function 3 with degree 0
// nq: 12, na: 37, ng: 14
void func3R(qbit **q, int n) {
printf("func3R\n");
fflush(stderr);
	qbit *anc[37]; // ancilla
	qbit *nb[8]; // interacting bits
	qbit *res[5];
	nb[0] = q[3];
	nb[1] = q[9];
	nb[2] = q[4];
	nb[3] = q[9];
	nb[4] = q[2];
	nb[5] = q[2];
	nb[6] = q[5];
	nb[7] = q[3];
	res[0] = q[6];
	res[1] = q[2];
	res[2] = q[9];
	res[3] = q[5];
	res[4] = q[8];
	// Leaf function
	_computeModule(0, 37, 33, 19, 0, 4*LOOP, 0);
	acquire(37, anc, 8, nb);
	Recompute (res, 0, anc, 37, 33, 19){
		Toffoli( anc[15], anc[4], anc[17] );
		CNOT( q[3], anc[5] );
		Toffoli( q[2], q[5], anc[14] );
		CNOT( anc[1], anc[20] );
		Toffoli( anc[17], anc[2], anc[22] );
		Toffoli( anc[20], anc[0], anc[6] );
		CNOT( anc[23], anc[17] );
		CNOT( q[2], anc[36] );
		Toffoli( anc[12], anc[34], anc[18] );
		CNOT( anc[13], q[9] );
		Toffoli( anc[28], q[4], anc[29] );
		CNOT( anc[33], q[9] );
		Toffoli( anc[19], anc[9], anc[16] );
		Toffoli( anc[17], q[3], anc[15] );
	}
	Restore {
		CNOT( anc[34], res[0] );
		CNOT( q[9], res[1] );
		CNOT( anc[20], res[2] );
		CNOT( q[4], res[3] );
		CNOT( q[7], res[4] );
	}
	Unrecompute {
		Toffoli( anc[17], q[3], anc[15] );
		Toffoli( anc[19], anc[9], anc[16] );
		CNOT( anc[33], q[9] );
		Toffoli( anc[28], q[4], anc[29] );
		CNOT( anc[13], q[9] );
		Toffoli( anc[12], anc[34], anc[18] );
		CNOT( q[2], anc[36] );
		CNOT( anc[23], anc[17] );
		Toffoli( anc[20], anc[0], anc[6] );
		Toffoli( anc[17], anc[2], anc[22] );
		CNOT( anc[1], anc[20] );
		Toffoli( q[2], q[5], anc[14] );
		CNOT( q[3], anc[5] );
		Toffoli( anc[15], anc[4], anc[17] );
	} Refree(anc, 37) {}
}
// Function 2 with degree 4
// nq: 8, na: 22, ng: 110
void func2(qbit **q, int n) {
printf("func2\n");
fflush(stderr);
	qbit *anc[22]; // ancilla
	qbit *nb[84]; // interacting bits
	qbit *res[3];
	qbit *nq0[8];
	qbit *nq1[13];
	qbit *nq2[4];
	qbit *nq3[3];
	nb[0] = q[0];
	nb[1] = q[4];
	nb[2] = q[4];
	nb[3] = q[1];
	nb[4] = q[4];
	nb[5] = q[5];
	nb[6] = q[7];
	nb[7] = q[6];
	nb[8] = q[5];
	nb[9] = q[4];
	nb[10] = q[5];
	nb[11] = q[1];
	nb[12] = q[0];
	nb[13] = q[7];
	nb[14] = q[0];
	nb[15] = q[2];
	nb[16] = q[7];
	nb[17] = q[7];
	nb[18] = q[7];
	nb[19] = q[6];
	nb[20] = q[4];
	nb[21] = q[1];
	nb[22] = q[4];
	nb[23] = q[1];
	nb[24] = q[7];
	nb[25] = q[4];
	nb[26] = q[6];
	nb[27] = q[5];
	nb[28] = q[6];
	nb[29] = q[3];
	nb[30] = q[7];
	nb[31] = q[2];
	nb[32] = q[4];
	nb[33] = q[4];
	nb[34] = q[2];
	nb[35] = q[4];
	nb[36] = q[4];
	nb[37] = q[5];
	nb[38] = q[3];
	nb[39] = q[3];
	nb[40] = q[0];
	nb[41] = q[5];
	nb[42] = q[6];
	nb[43] = q[7];
	nb[44] = q[6];
	nb[45] = q[4];
	nb[46] = q[3];
	nb[47] = q[0];
	nb[48] = q[6];
	nb[49] = q[6];
	nb[50] = q[7];
	nb[51] = q[2];
	nb[52] = q[7];
	nb[53] = q[0];
	nb[54] = q[4];
	nb[55] = q[6];
	nb[56] = q[1];
	nb[57] = q[6];
	nb[58] = q[2];
	nb[59] = q[6];
	nb[60] = q[0];
	nb[61] = q[0];
	nb[62] = q[0];
	nb[63] = q[5];
	nb[64] = q[6];
	nb[65] = q[6];
	nb[66] = q[4];
	nb[67] = q[7];
	nb[68] = q[3];
	nb[69] = q[6];
	nb[70] = q[5];
	nb[71] = q[5];
	nb[72] = q[2];
	nb[73] = q[7];
	nb[74] = q[5];
	nb[75] = q[7];
	nb[76] = q[4];
	nb[77] = q[2];
	nb[78] = q[2];
	nb[79] = q[2];
	nb[80] = q[1];
	nb[81] = q[3];
	nb[82] = q[4];
	nb[83] = q[7];
	res[0] = q[2];
	res[1] = q[1];
	res[2] = q[3];
	// Non-leaf function
	nq0[0] = q[5];
	nq0[1] = anc[18];
	nq0[2] = q[7];
	nq0[3] = q[1];
	nq0[4] = anc[1];
	nq0[5] = anc[5];
	nq0[6] = anc[9];
	nq0[7] = anc[15];
	nq1[0] = anc[2];
	nq1[1] = anc[6];
	nq1[2] = anc[18];
	nq1[3] = anc[5];
	nq1[4] = anc[11];
	nq1[5] = anc[19];
	nq1[6] = anc[0];
	nq1[7] = q[5];
	nq1[8] = anc[12];
	nq1[9] = q[6];
	nq1[10] = anc[4];
	nq1[11] = anc[17];
	nq1[12] = anc[20];
	nq2[0] = anc[2];
	nq2[1] = q[0];
	nq2[2] = anc[20];
	nq2[3] = anc[5];
	nq3[0] = anc[4];
	nq3[1] = anc[20];
	nq3[2] = anc[3];
	Compute (0, 22, 223, 113, 4, 4*LOOP, 0){
		acquire(22, anc, 84, nb);
		Toffoli( q[4], anc[11], anc[10] );
		CNOT( anc[15], anc[3] );
		Toffoli( q[6], anc[18], anc[9] );
		Toffoli( anc[17], anc[15], anc[5] );
		Toffoli( anc[3], q[0], q[5] );
		CNOT( q[7], anc[18] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[8], q[6], anc[10] );
		CNOT( anc[16], anc[10] );
		CNOT( anc[10], q[7] );
		Toffoli( q[6], anc[20], anc[0] );
		CNOT( anc[14], anc[3] );
		Toffoli( anc[9], q[4], anc[3] );
		CNOT( anc[18], anc[1] );
		CNOT( q[5], q[3] );
		CNOT( anc[11], anc[0] );
		Toffoli( q[4], q[2], anc[20] );
		Toffoli( anc[19], q[7], anc[7] );
		Toffoli( q[4], q[1], anc[8] );
		Toffoli( q[6], q[4], anc[15] );
		CNOT( anc[17], anc[8] );
		CNOT( q[0], anc[1] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[18], anc[13], q[5] );
		CNOT( anc[13], anc[10] );
		CNOT( anc[16], anc[14] );
		CNOT( anc[5], anc[12] );
		Toffoli( anc[7], anc[19], anc[3] );
		CNOT( anc[11], q[4] );
		CNOT( anc[6], anc[0] );
		Toffoli( q[0], anc[14], anc[16] );
		Toffoli( anc[19], anc[1], anc[3] );
		CNOT( q[2], q[7] );
		CNOT( anc[7], anc[18] );
		CNOT( anc[7], q[1] );
		Toffoli( anc[1], q[6], q[4] );
		Toffoli( anc[9], anc[0], anc[19] );
		CNOT( anc[17], anc[19] );
		Toffoli( anc[7], anc[1], anc[18] );
		Toffoli( anc[3], anc[20], anc[10] );
		Toffoli( anc[14], anc[6], anc[20] );
		Toffoli( anc[8], anc[9], anc[14] );
		Toffoli( anc[7], q[2], q[7] );
		Toffoli( q[2], anc[8], anc[7] );
		CNOT( anc[19], anc[8] );
		CNOT( anc[4], q[7] );
		CNOT( q[5], q[4] );
		CNOT( anc[1], q[7] );
		CNOT( q[7], q[3] );
		Toffoli( anc[2], anc[15], anc[9] );
		Toffoli( anc[9], anc[12], anc[13] );
		Toffoli( q[6], anc[15], q[2] );
		Toffoli( anc[7], anc[12], anc[19] );
		Toffoli( anc[19], q[7], anc[20] );
		func10(nq2, 4);
		CNOT( anc[7], anc[21] );
		Toffoli( q[2], anc[16], anc[9] );
		Toffoli( anc[8], anc[4], anc[6] );
		func8(nq0, 8);
		CNOT( q[0], anc[8] );
		Toffoli( q[6], anc[19], anc[13] );
		Toffoli( anc[14], anc[4], q[0] );
		CNOT( anc[8], q[6] );
		Toffoli( q[0], q[4], q[6] );
		Toffoli( anc[18], anc[2], q[1] );
		CNOT( q[4], anc[18] );
		CNOT( q[0], q[5] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[20], anc[2] );
		Toffoli( anc[14], anc[6], q[4] );
		Toffoli( anc[3], q[5], anc[8] );
		CNOT( anc[5], q[2] );
		CNOT( anc[6], anc[5] );
		Toffoli( q[1], anc[13], anc[11] );
		Toffoli( anc[12], q[0], anc[5] );
		CNOT( anc[17], q[6] );
		Toffoli( q[6], anc[3], anc[11] );
		Toffoli( q[5], anc[5], anc[10] );
		CNOT( anc[19], anc[16] );
		CNOT( q[6], q[3] );
		Toffoli( anc[5], q[4], q[1] );
		CNOT( anc[13], anc[12] );
		CNOT( anc[20], anc[19] );
		Toffoli( q[7], anc[0], anc[17] );
		Toffoli( q[7], anc[21], anc[0] );
		Toffoli( anc[11], anc[7], anc[18] );
		Toffoli( q[2], anc[9], anc[2] );
		CNOT( anc[13], anc[0] );
		CNOT( anc[16], anc[3] );
		Toffoli( q[4], anc[0], anc[7] );
		Toffoli( anc[16], q[5], anc[2] );
		Toffoli( q[4], anc[6], anc[16] );
		CNOT( anc[10], anc[18] );
		Toffoli( q[1], anc[21], q[3] );
		Toffoli( q[0], anc[11], q[6] );
		CNOT( anc[21], q[3] );
		Toffoli( anc[13], anc[15], q[5] );
		CNOT( anc[10], anc[16] );
		Toffoli( anc[16], anc[3], q[7] );
		CNOT( anc[14], anc[19] );
		CNOT( anc[2], anc[21] );
		CNOT( anc[13], anc[19] );
		func9(nq1, 13);
		Toffoli( q[4], anc[6], anc[17] );
		Toffoli( q[5], anc[3], q[7] );
		func11(nq3, 3);
		CNOT( q[6], anc[7] );
		CNOT( q[2], q[7] );
		CNOT( anc[17], anc[19] );
		CNOT( anc[17], anc[15] );
		Toffoli( anc[20], anc[11], anc[9] );
		Toffoli( anc[0], anc[7], anc[13] );
		CNOT( q[4], anc[8] );
		Toffoli( anc[21], anc[7], q[3] );
	}
	Store {
		CNOT( anc[19], res[0] );
		CNOT( anc[7], res[1] );
		CNOT( q[6], res[2] );
	}
	Uncompute(res, 0, anc, 22, 223, 113){
		Toffoli( anc[21], anc[7], q[3] );
		CNOT( q[4], anc[8] );
		Toffoli( anc[0], anc[7], anc[13] );
		Toffoli( anc[20], anc[11], anc[9] );
		CNOT( anc[17], anc[15] );
		CNOT( anc[17], anc[19] );
		CNOT( q[2], q[7] );
		CNOT( q[6], anc[7] );
		func11R(nq3, 3);
		Toffoli( q[5], anc[3], q[7] );
		Toffoli( q[4], anc[6], anc[17] );
		func9R(nq1, 13);
		CNOT( anc[13], anc[19] );
		CNOT( anc[2], anc[21] );
		CNOT( anc[14], anc[19] );
		Toffoli( anc[16], anc[3], q[7] );
		CNOT( anc[10], anc[16] );
		Toffoli( anc[13], anc[15], q[5] );
		CNOT( anc[21], q[3] );
		Toffoli( q[0], anc[11], q[6] );
		Toffoli( q[1], anc[21], q[3] );
		CNOT( anc[10], anc[18] );
		Toffoli( q[4], anc[6], anc[16] );
		Toffoli( anc[16], q[5], anc[2] );
		Toffoli( q[4], anc[0], anc[7] );
		CNOT( anc[16], anc[3] );
		CNOT( anc[13], anc[0] );
		Toffoli( q[2], anc[9], anc[2] );
		Toffoli( anc[11], anc[7], anc[18] );
		Toffoli( q[7], anc[21], anc[0] );
		Toffoli( q[7], anc[0], anc[17] );
		CNOT( anc[20], anc[19] );
		CNOT( anc[13], anc[12] );
		Toffoli( anc[5], q[4], q[1] );
		CNOT( q[6], q[3] );
		CNOT( anc[19], anc[16] );
		Toffoli( q[5], anc[5], anc[10] );
		Toffoli( q[6], anc[3], anc[11] );
		CNOT( anc[17], q[6] );
		Toffoli( anc[12], q[0], anc[5] );
		Toffoli( q[1], anc[13], anc[11] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[5], q[2] );
		Toffoli( anc[3], q[5], anc[8] );
		Toffoli( anc[14], anc[6], q[4] );
		CNOT( anc[20], anc[2] );
		CNOT( anc[3], anc[2] );
		CNOT( q[0], q[5] );
		CNOT( q[4], anc[18] );
		Toffoli( anc[18], anc[2], q[1] );
		Toffoli( q[0], q[4], q[6] );
		CNOT( anc[8], q[6] );
		Toffoli( anc[14], anc[4], q[0] );
		Toffoli( q[6], anc[19], anc[13] );
		CNOT( q[0], anc[8] );
		func8R(nq0, 8);
		Toffoli( anc[8], anc[4], anc[6] );
		Toffoli( q[2], anc[16], anc[9] );
		CNOT( anc[7], anc[21] );
		func10R(nq2, 4);
		Toffoli( anc[19], q[7], anc[20] );
		Toffoli( anc[7], anc[12], anc[19] );
		Toffoli( q[6], anc[15], q[2] );
		Toffoli( anc[9], anc[12], anc[13] );
		Toffoli( anc[2], anc[15], anc[9] );
		CNOT( q[7], q[3] );
		CNOT( anc[1], q[7] );
		CNOT( q[5], q[4] );
		CNOT( anc[4], q[7] );
		CNOT( anc[19], anc[8] );
		Toffoli( q[2], anc[8], anc[7] );
		Toffoli( anc[7], q[2], q[7] );
		Toffoli( anc[8], anc[9], anc[14] );
		Toffoli( anc[14], anc[6], anc[20] );
		Toffoli( anc[3], anc[20], anc[10] );
		Toffoli( anc[7], anc[1], anc[18] );
		CNOT( anc[17], anc[19] );
		Toffoli( anc[9], anc[0], anc[19] );
		Toffoli( anc[1], q[6], q[4] );
		CNOT( anc[7], q[1] );
		CNOT( anc[7], anc[18] );
		CNOT( q[2], q[7] );
		Toffoli( anc[19], anc[1], anc[3] );
		Toffoli( q[0], anc[14], anc[16] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[11], q[4] );
		Toffoli( anc[7], anc[19], anc[3] );
		CNOT( anc[5], anc[12] );
		CNOT( anc[16], anc[14] );
		CNOT( anc[13], anc[10] );
		Toffoli( anc[18], anc[13], q[5] );
		CNOT( anc[6], anc[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[17], anc[8] );
		Toffoli( q[6], q[4], anc[15] );
		Toffoli( q[4], q[1], anc[8] );
		Toffoli( anc[19], q[7], anc[7] );
		Toffoli( q[4], q[2], anc[20] );
		CNOT( anc[11], anc[0] );
		CNOT( q[5], q[3] );
		CNOT( anc[18], anc[1] );
		Toffoli( anc[9], q[4], anc[3] );
		CNOT( anc[14], anc[3] );
		Toffoli( q[6], anc[20], anc[0] );
		CNOT( anc[10], q[7] );
		CNOT( anc[16], anc[10] );
		Toffoli( anc[8], q[6], anc[10] );
		CNOT( anc[1], anc[2] );
		CNOT( q[7], anc[18] );
		Toffoli( anc[3], q[0], q[5] );
		Toffoli( anc[17], anc[15], anc[5] );
		Toffoli( q[6], anc[18], anc[9] );
		CNOT( anc[15], anc[3] );
		Toffoli( q[4], anc[11], anc[10] );
	} Free(anc, 22) {}
}
// Function 2 with degree 4
// nq: 8, na: 22, ng: 110
void func2R(qbit **q, int n) {
printf("func2R\n");
fflush(stderr);
	qbit *anc[22]; // ancilla
	qbit *nb[84]; // interacting bits
	qbit *res[3];
	qbit *nq0[8];
	qbit *nq1[13];
	qbit *nq2[4];
	qbit *nq3[3];
	nb[0] = q[0];
	nb[1] = q[4];
	nb[2] = q[4];
	nb[3] = q[1];
	nb[4] = q[4];
	nb[5] = q[5];
	nb[6] = q[7];
	nb[7] = q[6];
	nb[8] = q[5];
	nb[9] = q[4];
	nb[10] = q[5];
	nb[11] = q[1];
	nb[12] = q[0];
	nb[13] = q[7];
	nb[14] = q[0];
	nb[15] = q[2];
	nb[16] = q[7];
	nb[17] = q[7];
	nb[18] = q[7];
	nb[19] = q[6];
	nb[20] = q[4];
	nb[21] = q[1];
	nb[22] = q[4];
	nb[23] = q[1];
	nb[24] = q[7];
	nb[25] = q[4];
	nb[26] = q[6];
	nb[27] = q[5];
	nb[28] = q[6];
	nb[29] = q[3];
	nb[30] = q[7];
	nb[31] = q[2];
	nb[32] = q[4];
	nb[33] = q[4];
	nb[34] = q[2];
	nb[35] = q[4];
	nb[36] = q[4];
	nb[37] = q[5];
	nb[38] = q[3];
	nb[39] = q[3];
	nb[40] = q[0];
	nb[41] = q[5];
	nb[42] = q[6];
	nb[43] = q[7];
	nb[44] = q[6];
	nb[45] = q[4];
	nb[46] = q[3];
	nb[47] = q[0];
	nb[48] = q[6];
	nb[49] = q[6];
	nb[50] = q[7];
	nb[51] = q[2];
	nb[52] = q[7];
	nb[53] = q[0];
	nb[54] = q[4];
	nb[55] = q[6];
	nb[56] = q[1];
	nb[57] = q[6];
	nb[58] = q[2];
	nb[59] = q[6];
	nb[60] = q[0];
	nb[61] = q[0];
	nb[62] = q[0];
	nb[63] = q[5];
	nb[64] = q[6];
	nb[65] = q[6];
	nb[66] = q[4];
	nb[67] = q[7];
	nb[68] = q[3];
	nb[69] = q[6];
	nb[70] = q[5];
	nb[71] = q[5];
	nb[72] = q[2];
	nb[73] = q[7];
	nb[74] = q[5];
	nb[75] = q[7];
	nb[76] = q[4];
	nb[77] = q[2];
	nb[78] = q[2];
	nb[79] = q[2];
	nb[80] = q[1];
	nb[81] = q[3];
	nb[82] = q[4];
	nb[83] = q[7];
	res[0] = q[2];
	res[1] = q[1];
	res[2] = q[3];
	// Non-leaf function
	nq0[0] = q[5];
	nq0[1] = anc[18];
	nq0[2] = q[7];
	nq0[3] = q[1];
	nq0[4] = anc[1];
	nq0[5] = anc[5];
	nq0[6] = anc[9];
	nq0[7] = anc[15];
	nq1[0] = anc[2];
	nq1[1] = anc[6];
	nq1[2] = anc[18];
	nq1[3] = anc[5];
	nq1[4] = anc[11];
	nq1[5] = anc[19];
	nq1[6] = anc[0];
	nq1[7] = q[5];
	nq1[8] = anc[12];
	nq1[9] = q[6];
	nq1[10] = anc[4];
	nq1[11] = anc[17];
	nq1[12] = anc[20];
	nq2[0] = anc[2];
	nq2[1] = q[0];
	nq2[2] = anc[20];
	nq2[3] = anc[5];
	nq3[0] = anc[4];
	nq3[1] = anc[20];
	nq3[2] = anc[3];
	_computeModule(0, 22, 223, 113, 4, 4*LOOP, 0);
	acquire(22, anc, 84, nb);
	Recompute(res, 0, anc, 22, 223, 113){
		Toffoli( q[4], anc[11], anc[10] );
		CNOT( anc[15], anc[3] );
		Toffoli( q[6], anc[18], anc[9] );
		Toffoli( anc[17], anc[15], anc[5] );
		Toffoli( anc[3], q[0], q[5] );
		CNOT( q[7], anc[18] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[8], q[6], anc[10] );
		CNOT( anc[16], anc[10] );
		CNOT( anc[10], q[7] );
		Toffoli( q[6], anc[20], anc[0] );
		CNOT( anc[14], anc[3] );
		Toffoli( anc[9], q[4], anc[3] );
		CNOT( anc[18], anc[1] );
		CNOT( q[5], q[3] );
		CNOT( anc[11], anc[0] );
		Toffoli( q[4], q[2], anc[20] );
		Toffoli( anc[19], q[7], anc[7] );
		Toffoli( q[4], q[1], anc[8] );
		Toffoli( q[6], q[4], anc[15] );
		CNOT( anc[17], anc[8] );
		CNOT( q[0], anc[1] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[18], anc[13], q[5] );
		CNOT( anc[13], anc[10] );
		CNOT( anc[16], anc[14] );
		CNOT( anc[5], anc[12] );
		Toffoli( anc[7], anc[19], anc[3] );
		CNOT( anc[11], q[4] );
		CNOT( anc[6], anc[0] );
		Toffoli( q[0], anc[14], anc[16] );
		Toffoli( anc[19], anc[1], anc[3] );
		CNOT( q[2], q[7] );
		CNOT( anc[7], anc[18] );
		CNOT( anc[7], q[1] );
		Toffoli( anc[1], q[6], q[4] );
		Toffoli( anc[9], anc[0], anc[19] );
		CNOT( anc[17], anc[19] );
		Toffoli( anc[7], anc[1], anc[18] );
		Toffoli( anc[3], anc[20], anc[10] );
		Toffoli( anc[14], anc[6], anc[20] );
		Toffoli( anc[8], anc[9], anc[14] );
		Toffoli( anc[7], q[2], q[7] );
		Toffoli( q[2], anc[8], anc[7] );
		CNOT( anc[19], anc[8] );
		CNOT( anc[4], q[7] );
		CNOT( q[5], q[4] );
		CNOT( anc[1], q[7] );
		CNOT( q[7], q[3] );
		Toffoli( anc[2], anc[15], anc[9] );
		Toffoli( anc[9], anc[12], anc[13] );
		Toffoli( q[6], anc[15], q[2] );
		Toffoli( anc[7], anc[12], anc[19] );
		Toffoli( anc[19], q[7], anc[20] );
		func10(nq2, 4);
		CNOT( anc[7], anc[21] );
		Toffoli( q[2], anc[16], anc[9] );
		Toffoli( anc[8], anc[4], anc[6] );
		func8(nq0, 8);
		CNOT( q[0], anc[8] );
		Toffoli( q[6], anc[19], anc[13] );
		Toffoli( anc[14], anc[4], q[0] );
		CNOT( anc[8], q[6] );
		Toffoli( q[0], q[4], q[6] );
		Toffoli( anc[18], anc[2], q[1] );
		CNOT( q[4], anc[18] );
		CNOT( q[0], q[5] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[20], anc[2] );
		Toffoli( anc[14], anc[6], q[4] );
		Toffoli( anc[3], q[5], anc[8] );
		CNOT( anc[5], q[2] );
		CNOT( anc[6], anc[5] );
		Toffoli( q[1], anc[13], anc[11] );
		Toffoli( anc[12], q[0], anc[5] );
		CNOT( anc[17], q[6] );
		Toffoli( q[6], anc[3], anc[11] );
		Toffoli( q[5], anc[5], anc[10] );
		CNOT( anc[19], anc[16] );
		CNOT( q[6], q[3] );
		Toffoli( anc[5], q[4], q[1] );
		CNOT( anc[13], anc[12] );
		CNOT( anc[20], anc[19] );
		Toffoli( q[7], anc[0], anc[17] );
		Toffoli( q[7], anc[21], anc[0] );
		Toffoli( anc[11], anc[7], anc[18] );
		Toffoli( q[2], anc[9], anc[2] );
		CNOT( anc[13], anc[0] );
		CNOT( anc[16], anc[3] );
		Toffoli( q[4], anc[0], anc[7] );
		Toffoli( anc[16], q[5], anc[2] );
		Toffoli( q[4], anc[6], anc[16] );
		CNOT( anc[10], anc[18] );
		Toffoli( q[1], anc[21], q[3] );
		Toffoli( q[0], anc[11], q[6] );
		CNOT( anc[21], q[3] );
		Toffoli( anc[13], anc[15], q[5] );
		CNOT( anc[10], anc[16] );
		Toffoli( anc[16], anc[3], q[7] );
		CNOT( anc[14], anc[19] );
		CNOT( anc[2], anc[21] );
		CNOT( anc[13], anc[19] );
		func9(nq1, 13);
		Toffoli( q[4], anc[6], anc[17] );
		Toffoli( q[5], anc[3], q[7] );
		func11(nq3, 3);
		CNOT( q[6], anc[7] );
		CNOT( q[2], q[7] );
		CNOT( anc[17], anc[19] );
		CNOT( anc[17], anc[15] );
		Toffoli( anc[20], anc[11], anc[9] );
		Toffoli( anc[0], anc[7], anc[13] );
		CNOT( q[4], anc[8] );
		Toffoli( anc[21], anc[7], q[3] );
	}
	Restore {
		CNOT( anc[19], res[0] );
		CNOT( anc[7], res[1] );
		CNOT( q[6], res[2] );
	}
	Unrecompute {
		Toffoli( anc[21], anc[7], q[3] );
		CNOT( q[4], anc[8] );
		Toffoli( anc[0], anc[7], anc[13] );
		Toffoli( anc[20], anc[11], anc[9] );
		CNOT( anc[17], anc[15] );
		CNOT( anc[17], anc[19] );
		CNOT( q[2], q[7] );
		CNOT( q[6], anc[7] );
		func11R(nq3, 3);
		Toffoli( q[5], anc[3], q[7] );
		Toffoli( q[4], anc[6], anc[17] );
		func9R(nq1, 13);
		CNOT( anc[13], anc[19] );
		CNOT( anc[2], anc[21] );
		CNOT( anc[14], anc[19] );
		Toffoli( anc[16], anc[3], q[7] );
		CNOT( anc[10], anc[16] );
		Toffoli( anc[13], anc[15], q[5] );
		CNOT( anc[21], q[3] );
		Toffoli( q[0], anc[11], q[6] );
		Toffoli( q[1], anc[21], q[3] );
		CNOT( anc[10], anc[18] );
		Toffoli( q[4], anc[6], anc[16] );
		Toffoli( anc[16], q[5], anc[2] );
		Toffoli( q[4], anc[0], anc[7] );
		CNOT( anc[16], anc[3] );
		CNOT( anc[13], anc[0] );
		Toffoli( q[2], anc[9], anc[2] );
		Toffoli( anc[11], anc[7], anc[18] );
		Toffoli( q[7], anc[21], anc[0] );
		Toffoli( q[7], anc[0], anc[17] );
		CNOT( anc[20], anc[19] );
		CNOT( anc[13], anc[12] );
		Toffoli( anc[5], q[4], q[1] );
		CNOT( q[6], q[3] );
		CNOT( anc[19], anc[16] );
		Toffoli( q[5], anc[5], anc[10] );
		Toffoli( q[6], anc[3], anc[11] );
		CNOT( anc[17], q[6] );
		Toffoli( anc[12], q[0], anc[5] );
		Toffoli( q[1], anc[13], anc[11] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[5], q[2] );
		Toffoli( anc[3], q[5], anc[8] );
		Toffoli( anc[14], anc[6], q[4] );
		CNOT( anc[20], anc[2] );
		CNOT( anc[3], anc[2] );
		CNOT( q[0], q[5] );
		CNOT( q[4], anc[18] );
		Toffoli( anc[18], anc[2], q[1] );
		Toffoli( q[0], q[4], q[6] );
		CNOT( anc[8], q[6] );
		Toffoli( anc[14], anc[4], q[0] );
		Toffoli( q[6], anc[19], anc[13] );
		CNOT( q[0], anc[8] );
		func8R(nq0, 8);
		Toffoli( anc[8], anc[4], anc[6] );
		Toffoli( q[2], anc[16], anc[9] );
		CNOT( anc[7], anc[21] );
		func10R(nq2, 4);
		Toffoli( anc[19], q[7], anc[20] );
		Toffoli( anc[7], anc[12], anc[19] );
		Toffoli( q[6], anc[15], q[2] );
		Toffoli( anc[9], anc[12], anc[13] );
		Toffoli( anc[2], anc[15], anc[9] );
		CNOT( q[7], q[3] );
		CNOT( anc[1], q[7] );
		CNOT( q[5], q[4] );
		CNOT( anc[4], q[7] );
		CNOT( anc[19], anc[8] );
		Toffoli( q[2], anc[8], anc[7] );
		Toffoli( anc[7], q[2], q[7] );
		Toffoli( anc[8], anc[9], anc[14] );
		Toffoli( anc[14], anc[6], anc[20] );
		Toffoli( anc[3], anc[20], anc[10] );
		Toffoli( anc[7], anc[1], anc[18] );
		CNOT( anc[17], anc[19] );
		Toffoli( anc[9], anc[0], anc[19] );
		Toffoli( anc[1], q[6], q[4] );
		CNOT( anc[7], q[1] );
		CNOT( anc[7], anc[18] );
		CNOT( q[2], q[7] );
		Toffoli( anc[19], anc[1], anc[3] );
		Toffoli( q[0], anc[14], anc[16] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[11], q[4] );
		Toffoli( anc[7], anc[19], anc[3] );
		CNOT( anc[5], anc[12] );
		CNOT( anc[16], anc[14] );
		CNOT( anc[13], anc[10] );
		Toffoli( anc[18], anc[13], q[5] );
		CNOT( anc[6], anc[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[17], anc[8] );
		Toffoli( q[6], q[4], anc[15] );
		Toffoli( q[4], q[1], anc[8] );
		Toffoli( anc[19], q[7], anc[7] );
		Toffoli( q[4], q[2], anc[20] );
		CNOT( anc[11], anc[0] );
		CNOT( q[5], q[3] );
		CNOT( anc[18], anc[1] );
		Toffoli( anc[9], q[4], anc[3] );
		CNOT( anc[14], anc[3] );
		Toffoli( q[6], anc[20], anc[0] );
		CNOT( anc[10], q[7] );
		CNOT( anc[16], anc[10] );
		Toffoli( anc[8], q[6], anc[10] );
		CNOT( anc[1], anc[2] );
		CNOT( q[7], anc[18] );
		Toffoli( anc[3], q[0], q[5] );
		Toffoli( anc[17], anc[15], anc[5] );
		Toffoli( q[6], anc[18], anc[9] );
		CNOT( anc[15], anc[3] );
		Toffoli( q[4], anc[11], anc[10] );
	} Refree(anc, 22) {}
}
// Function 1 with degree 3
// nq: 4, na: 43, ng: 84
void func1(qbit **q, int n) {
printf("func1\n");
fflush(stderr);
	qbit *anc[43]; // ancilla
	qbit *nb[16]; // interacting bits
	qbit *res[1];
	qbit *nq0[5];
	qbit *nq1[3];
	qbit *nq2[12];
	nb[0] = q[3];
	nb[1] = q[0];
	nb[2] = q[3];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[1];
	nb[6] = q[3];
	nb[7] = q[0];
	nb[8] = q[3];
	nb[9] = q[3];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[3];
	res[0] = q[2];
	// Non-leaf function
	nq0[0] = anc[4];
	nq0[1] = anc[25];
	nq0[2] = anc[2];
	nq0[3] = anc[33];
	nq0[4] = anc[22];
	nq1[0] = anc[7];
	nq1[1] = anc[23];
	nq1[2] = anc[15];
	nq2[0] = anc[6];
	nq2[1] = anc[37];
	nq2[2] = anc[10];
	nq2[3] = anc[19];
	nq2[4] = anc[39];
	nq2[5] = anc[16];
	nq2[6] = anc[17];
	nq2[7] = anc[42];
	nq2[8] = anc[40];
	nq2[9] = q[0];
	nq2[10] = anc[13];
	nq2[11] = anc[0];
	Compute (0, 43, 169, 85, 3, 4*LOOP, 0){
		acquire(43, anc, 16, nb);
		Toffoli( anc[19], anc[3], anc[25] );
		CNOT( anc[33], anc[19] );
		Toffoli( anc[11], anc[22], anc[41] );
		Toffoli( q[3], anc[6], anc[31] );
		CNOT( anc[42], anc[9] );
		Toffoli( anc[2], anc[5], anc[14] );
		CNOT( anc[6], anc[2] );
		CNOT( anc[21], anc[37] );
		CNOT( anc[20], anc[9] );
		Toffoli( anc[36], anc[10], anc[38] );
		Toffoli( anc[9], anc[16], anc[19] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[27], q[3], anc[14] );
		CNOT( anc[2], anc[37] );
		Toffoli( anc[35], anc[11], anc[7] );
		CNOT( anc[13], anc[25] );
		CNOT( anc[33], anc[34] );
		CNOT( anc[24], anc[31] );
		Toffoli( anc[21], anc[27], anc[41] );
		CNOT( anc[38], anc[12] );
		CNOT( anc[24], anc[38] );
		CNOT( anc[19], anc[34] );
		CNOT( anc[40], anc[38] );
		CNOT( q[3], anc[2] );
		Toffoli( anc[35], q[0], anc[1] );
		Toffoli( anc[6], q[2], anc[1] );
		Toffoli( anc[6], anc[9], anc[30] );
		Toffoli( anc[3], anc[10], anc[27] );
		Toffoli( anc[13], anc[21], anc[11] );
		Toffoli( anc[21], anc[23], q[3] );
		Toffoli( anc[2], anc[34], anc[23] );
		CNOT( anc[26], anc[25] );
		Toffoli( q[0], anc[29], anc[38] );
		Toffoli( anc[36], anc[22], anc[15] );
		CNOT( anc[35], q[0] );
		CNOT( anc[30], anc[36] );
		CNOT( anc[33], anc[21] );
		func5(nq0, 5);
		CNOT( anc[7], anc[35] );
		Toffoli( anc[40], anc[3], anc[11] );
		CNOT( anc[0], anc[17] );
		Toffoli( anc[22], anc[39], anc[5] );
		CNOT( anc[18], anc[7] );
		Toffoli( anc[25], anc[16], anc[42] );
		Toffoli( anc[29], anc[27], anc[31] );
		Toffoli( anc[20], anc[1], anc[31] );
		CNOT( q[1], anc[34] );
		Toffoli( anc[0], anc[37], anc[33] );
		CNOT( anc[0], anc[27] );
		CNOT( anc[31], anc[4] );
		CNOT( anc[25], anc[38] );
		Toffoli( anc[40], anc[9], anc[0] );
		Toffoli( anc[6], anc[39], q[3] );
		Toffoli( anc[33], anc[20], anc[26] );
		CNOT( anc[22], anc[31] );
		CNOT( anc[13], anc[34] );
		Toffoli( anc[12], anc[39], anc[5] );
		CNOT( anc[24], anc[13] );
		CNOT( q[1], anc[17] );
		CNOT( anc[21], anc[17] );
		CNOT( anc[20], anc[17] );
		func6(nq1, 3);
		CNOT( q[3], anc[28] );
		CNOT( anc[17], anc[7] );
		CNOT( anc[29], q[0] );
		Toffoli( anc[16], anc[34], anc[2] );
		CNOT( q[0], anc[29] );
		Toffoli( anc[36], anc[11], anc[20] );
		Toffoli( anc[36], anc[11], anc[40] );
		func7(nq2, 12);
		CNOT( anc[35], anc[4] );
		CNOT( anc[11], anc[39] );
		Toffoli( anc[12], anc[37], q[1] );
		CNOT( anc[24], anc[26] );
		Toffoli( anc[40], anc[30], anc[37] );
		CNOT( anc[17], anc[12] );
		CNOT( anc[27], anc[25] );
		Toffoli( anc[36], anc[22], anc[5] );
		CNOT( anc[27], anc[32] );
		CNOT( anc[0], anc[35] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[35], anc[0] );
		Toffoli( anc[35], anc[38], anc[17] );
		Toffoli( anc[9], anc[13], anc[28] );
		Toffoli( q[3], anc[36], anc[40] );
		Toffoli( anc[27], anc[26], anc[20] );
		CNOT( anc[22], anc[1] );
	}
	Store {
		CNOT( anc[34], res[0] );
	}
	Uncompute(res, 0, anc, 43, 169, 85){
		CNOT( anc[22], anc[1] );
		Toffoli( anc[27], anc[26], anc[20] );
		Toffoli( q[3], anc[36], anc[40] );
		Toffoli( anc[9], anc[13], anc[28] );
		Toffoli( anc[35], anc[38], anc[17] );
		CNOT( anc[35], anc[0] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[0], anc[35] );
		CNOT( anc[27], anc[32] );
		Toffoli( anc[36], anc[22], anc[5] );
		CNOT( anc[27], anc[25] );
		CNOT( anc[17], anc[12] );
		Toffoli( anc[40], anc[30], anc[37] );
		CNOT( anc[24], anc[26] );
		Toffoli( anc[12], anc[37], q[1] );
		CNOT( anc[11], anc[39] );
		CNOT( anc[35], anc[4] );
		func7R(nq2, 12);
		Toffoli( anc[36], anc[11], anc[40] );
		Toffoli( anc[36], anc[11], anc[20] );
		CNOT( q[0], anc[29] );
		Toffoli( anc[16], anc[34], anc[2] );
		CNOT( anc[29], q[0] );
		CNOT( anc[17], anc[7] );
		CNOT( q[3], anc[28] );
		func6R(nq1, 3);
		CNOT( anc[20], anc[17] );
		CNOT( anc[21], anc[17] );
		CNOT( q[1], anc[17] );
		CNOT( anc[24], anc[13] );
		Toffoli( anc[12], anc[39], anc[5] );
		CNOT( anc[13], anc[34] );
		CNOT( anc[22], anc[31] );
		Toffoli( anc[33], anc[20], anc[26] );
		Toffoli( anc[6], anc[39], q[3] );
		Toffoli( anc[40], anc[9], anc[0] );
		CNOT( anc[25], anc[38] );
		CNOT( anc[31], anc[4] );
		CNOT( anc[0], anc[27] );
		Toffoli( anc[0], anc[37], anc[33] );
		CNOT( q[1], anc[34] );
		Toffoli( anc[20], anc[1], anc[31] );
		Toffoli( anc[29], anc[27], anc[31] );
		Toffoli( anc[25], anc[16], anc[42] );
		CNOT( anc[18], anc[7] );
		Toffoli( anc[22], anc[39], anc[5] );
		CNOT( anc[0], anc[17] );
		Toffoli( anc[40], anc[3], anc[11] );
		CNOT( anc[7], anc[35] );
		func5R(nq0, 5);
		CNOT( anc[33], anc[21] );
		CNOT( anc[30], anc[36] );
		CNOT( anc[35], q[0] );
		Toffoli( anc[36], anc[22], anc[15] );
		Toffoli( q[0], anc[29], anc[38] );
		CNOT( anc[26], anc[25] );
		Toffoli( anc[2], anc[34], anc[23] );
		Toffoli( anc[21], anc[23], q[3] );
		Toffoli( anc[13], anc[21], anc[11] );
		Toffoli( anc[3], anc[10], anc[27] );
		Toffoli( anc[6], anc[9], anc[30] );
		Toffoli( anc[6], q[2], anc[1] );
		Toffoli( anc[35], q[0], anc[1] );
		CNOT( q[3], anc[2] );
		CNOT( anc[40], anc[38] );
		CNOT( anc[19], anc[34] );
		CNOT( anc[24], anc[38] );
		CNOT( anc[38], anc[12] );
		Toffoli( anc[21], anc[27], anc[41] );
		CNOT( anc[24], anc[31] );
		CNOT( anc[33], anc[34] );
		CNOT( anc[13], anc[25] );
		Toffoli( anc[35], anc[11], anc[7] );
		CNOT( anc[2], anc[37] );
		Toffoli( anc[27], q[3], anc[14] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[9], anc[16], anc[19] );
		Toffoli( anc[36], anc[10], anc[38] );
		CNOT( anc[20], anc[9] );
		CNOT( anc[21], anc[37] );
		CNOT( anc[6], anc[2] );
		Toffoli( anc[2], anc[5], anc[14] );
		CNOT( anc[42], anc[9] );
		Toffoli( q[3], anc[6], anc[31] );
		Toffoli( anc[11], anc[22], anc[41] );
		CNOT( anc[33], anc[19] );
		Toffoli( anc[19], anc[3], anc[25] );
	} Free(anc, 43) {}
}
// Function 1 with degree 3
// nq: 4, na: 43, ng: 84
void func1R(qbit **q, int n) {
printf("func1R\n");
fflush(stderr);
	qbit *anc[43]; // ancilla
	qbit *nb[16]; // interacting bits
	qbit *res[1];
	qbit *nq0[5];
	qbit *nq1[3];
	qbit *nq2[12];
	nb[0] = q[3];
	nb[1] = q[0];
	nb[2] = q[3];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[1];
	nb[6] = q[3];
	nb[7] = q[0];
	nb[8] = q[3];
	nb[9] = q[3];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[3];
	res[0] = q[2];
	// Non-leaf function
	nq0[0] = anc[4];
	nq0[1] = anc[25];
	nq0[2] = anc[2];
	nq0[3] = anc[33];
	nq0[4] = anc[22];
	nq1[0] = anc[7];
	nq1[1] = anc[23];
	nq1[2] = anc[15];
	nq2[0] = anc[6];
	nq2[1] = anc[37];
	nq2[2] = anc[10];
	nq2[3] = anc[19];
	nq2[4] = anc[39];
	nq2[5] = anc[16];
	nq2[6] = anc[17];
	nq2[7] = anc[42];
	nq2[8] = anc[40];
	nq2[9] = q[0];
	nq2[10] = anc[13];
	nq2[11] = anc[0];
	_computeModule(0, 43, 169, 85, 3, 4*LOOP, 0);
	acquire(43, anc, 16, nb);
	Recompute(res, 0, anc, 43, 169, 85){
		Toffoli( anc[19], anc[3], anc[25] );
		CNOT( anc[33], anc[19] );
		Toffoli( anc[11], anc[22], anc[41] );
		Toffoli( q[3], anc[6], anc[31] );
		CNOT( anc[42], anc[9] );
		Toffoli( anc[2], anc[5], anc[14] );
		CNOT( anc[6], anc[2] );
		CNOT( anc[21], anc[37] );
		CNOT( anc[20], anc[9] );
		Toffoli( anc[36], anc[10], anc[38] );
		Toffoli( anc[9], anc[16], anc[19] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[27], q[3], anc[14] );
		CNOT( anc[2], anc[37] );
		Toffoli( anc[35], anc[11], anc[7] );
		CNOT( anc[13], anc[25] );
		CNOT( anc[33], anc[34] );
		CNOT( anc[24], anc[31] );
		Toffoli( anc[21], anc[27], anc[41] );
		CNOT( anc[38], anc[12] );
		CNOT( anc[24], anc[38] );
		CNOT( anc[19], anc[34] );
		CNOT( anc[40], anc[38] );
		CNOT( q[3], anc[2] );
		Toffoli( anc[35], q[0], anc[1] );
		Toffoli( anc[6], q[2], anc[1] );
		Toffoli( anc[6], anc[9], anc[30] );
		Toffoli( anc[3], anc[10], anc[27] );
		Toffoli( anc[13], anc[21], anc[11] );
		Toffoli( anc[21], anc[23], q[3] );
		Toffoli( anc[2], anc[34], anc[23] );
		CNOT( anc[26], anc[25] );
		Toffoli( q[0], anc[29], anc[38] );
		Toffoli( anc[36], anc[22], anc[15] );
		CNOT( anc[35], q[0] );
		CNOT( anc[30], anc[36] );
		CNOT( anc[33], anc[21] );
		func5(nq0, 5);
		CNOT( anc[7], anc[35] );
		Toffoli( anc[40], anc[3], anc[11] );
		CNOT( anc[0], anc[17] );
		Toffoli( anc[22], anc[39], anc[5] );
		CNOT( anc[18], anc[7] );
		Toffoli( anc[25], anc[16], anc[42] );
		Toffoli( anc[29], anc[27], anc[31] );
		Toffoli( anc[20], anc[1], anc[31] );
		CNOT( q[1], anc[34] );
		Toffoli( anc[0], anc[37], anc[33] );
		CNOT( anc[0], anc[27] );
		CNOT( anc[31], anc[4] );
		CNOT( anc[25], anc[38] );
		Toffoli( anc[40], anc[9], anc[0] );
		Toffoli( anc[6], anc[39], q[3] );
		Toffoli( anc[33], anc[20], anc[26] );
		CNOT( anc[22], anc[31] );
		CNOT( anc[13], anc[34] );
		Toffoli( anc[12], anc[39], anc[5] );
		CNOT( anc[24], anc[13] );
		CNOT( q[1], anc[17] );
		CNOT( anc[21], anc[17] );
		CNOT( anc[20], anc[17] );
		func6(nq1, 3);
		CNOT( q[3], anc[28] );
		CNOT( anc[17], anc[7] );
		CNOT( anc[29], q[0] );
		Toffoli( anc[16], anc[34], anc[2] );
		CNOT( q[0], anc[29] );
		Toffoli( anc[36], anc[11], anc[20] );
		Toffoli( anc[36], anc[11], anc[40] );
		func7(nq2, 12);
		CNOT( anc[35], anc[4] );
		CNOT( anc[11], anc[39] );
		Toffoli( anc[12], anc[37], q[1] );
		CNOT( anc[24], anc[26] );
		Toffoli( anc[40], anc[30], anc[37] );
		CNOT( anc[17], anc[12] );
		CNOT( anc[27], anc[25] );
		Toffoli( anc[36], anc[22], anc[5] );
		CNOT( anc[27], anc[32] );
		CNOT( anc[0], anc[35] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[35], anc[0] );
		Toffoli( anc[35], anc[38], anc[17] );
		Toffoli( anc[9], anc[13], anc[28] );
		Toffoli( q[3], anc[36], anc[40] );
		Toffoli( anc[27], anc[26], anc[20] );
		CNOT( anc[22], anc[1] );
	}
	Restore {
		CNOT( anc[34], res[0] );
	}
	Unrecompute {
		CNOT( anc[22], anc[1] );
		Toffoli( anc[27], anc[26], anc[20] );
		Toffoli( q[3], anc[36], anc[40] );
		Toffoli( anc[9], anc[13], anc[28] );
		Toffoli( anc[35], anc[38], anc[17] );
		CNOT( anc[35], anc[0] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[0], anc[35] );
		CNOT( anc[27], anc[32] );
		Toffoli( anc[36], anc[22], anc[5] );
		CNOT( anc[27], anc[25] );
		CNOT( anc[17], anc[12] );
		Toffoli( anc[40], anc[30], anc[37] );
		CNOT( anc[24], anc[26] );
		Toffoli( anc[12], anc[37], q[1] );
		CNOT( anc[11], anc[39] );
		CNOT( anc[35], anc[4] );
		func7R(nq2, 12);
		Toffoli( anc[36], anc[11], anc[40] );
		Toffoli( anc[36], anc[11], anc[20] );
		CNOT( q[0], anc[29] );
		Toffoli( anc[16], anc[34], anc[2] );
		CNOT( anc[29], q[0] );
		CNOT( anc[17], anc[7] );
		CNOT( q[3], anc[28] );
		func6R(nq1, 3);
		CNOT( anc[20], anc[17] );
		CNOT( anc[21], anc[17] );
		CNOT( q[1], anc[17] );
		CNOT( anc[24], anc[13] );
		Toffoli( anc[12], anc[39], anc[5] );
		CNOT( anc[13], anc[34] );
		CNOT( anc[22], anc[31] );
		Toffoli( anc[33], anc[20], anc[26] );
		Toffoli( anc[6], anc[39], q[3] );
		Toffoli( anc[40], anc[9], anc[0] );
		CNOT( anc[25], anc[38] );
		CNOT( anc[31], anc[4] );
		CNOT( anc[0], anc[27] );
		Toffoli( anc[0], anc[37], anc[33] );
		CNOT( q[1], anc[34] );
		Toffoli( anc[20], anc[1], anc[31] );
		Toffoli( anc[29], anc[27], anc[31] );
		Toffoli( anc[25], anc[16], anc[42] );
		CNOT( anc[18], anc[7] );
		Toffoli( anc[22], anc[39], anc[5] );
		CNOT( anc[0], anc[17] );
		Toffoli( anc[40], anc[3], anc[11] );
		CNOT( anc[7], anc[35] );
		func5R(nq0, 5);
		CNOT( anc[33], anc[21] );
		CNOT( anc[30], anc[36] );
		CNOT( anc[35], q[0] );
		Toffoli( anc[36], anc[22], anc[15] );
		Toffoli( q[0], anc[29], anc[38] );
		CNOT( anc[26], anc[25] );
		Toffoli( anc[2], anc[34], anc[23] );
		Toffoli( anc[21], anc[23], q[3] );
		Toffoli( anc[13], anc[21], anc[11] );
		Toffoli( anc[3], anc[10], anc[27] );
		Toffoli( anc[6], anc[9], anc[30] );
		Toffoli( anc[6], q[2], anc[1] );
		Toffoli( anc[35], q[0], anc[1] );
		CNOT( q[3], anc[2] );
		CNOT( anc[40], anc[38] );
		CNOT( anc[19], anc[34] );
		CNOT( anc[24], anc[38] );
		CNOT( anc[38], anc[12] );
		Toffoli( anc[21], anc[27], anc[41] );
		CNOT( anc[24], anc[31] );
		CNOT( anc[33], anc[34] );
		CNOT( anc[13], anc[25] );
		Toffoli( anc[35], anc[11], anc[7] );
		CNOT( anc[2], anc[37] );
		Toffoli( anc[27], q[3], anc[14] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[9], anc[16], anc[19] );
		Toffoli( anc[36], anc[10], anc[38] );
		CNOT( anc[20], anc[9] );
		CNOT( anc[21], anc[37] );
		CNOT( anc[6], anc[2] );
		Toffoli( anc[2], anc[5], anc[14] );
		CNOT( anc[42], anc[9] );
		Toffoli( q[3], anc[6], anc[31] );
		Toffoli( anc[11], anc[22], anc[41] );
		CNOT( anc[33], anc[19] );
		Toffoli( anc[19], anc[3], anc[25] );
	} Refree(anc, 43) {}
}
// main function
int main() {
	qbit *new[16];
	acquire(16, new, 0, NULL);
	// Intialize inputs
	X (new[9]);
	X (new[6]);
	X (new[0]);
	X (new[1]);
	X (new[12]);
	// Start computation
	qbit *nq0[4];
	qbit *nq1[8];
	qbit *nq2[12];
	qbit *nq3[5];
	nq0[0] = new[2];
	nq0[1] = new[10];
	nq0[2] = new[7];
	nq0[3] = new[13];
	nq1[0] = new[11];
	nq1[1] = new[7];
	nq1[2] = new[9];
	nq1[3] = new[10];
	nq1[4] = new[15];
	nq1[5] = new[0];
	nq1[6] = new[4];
	nq1[7] = new[2];
	nq2[0] = new[1];
	nq2[1] = new[9];
	nq2[2] = new[10];
	nq2[3] = new[6];
	nq2[4] = new[11];
	nq2[5] = new[7];
	nq2[6] = new[4];
	nq2[7] = new[13];
	nq2[8] = new[8];
	nq2[9] = new[2];
	nq2[10] = new[3];
	nq2[11] = new[15];
	nq3[0] = new[5];
	nq3[1] = new[12];
	nq3[2] = new[8];
	nq3[3] = new[3];
	nq3[4] = new[1];
	for (int i = 0; i < LOOP; i++){
		func1(nq0, 4);
		func2(nq1, 8);
		func3(nq2, 12);
		func4(nq3, 5);
	}
	return 0;
}
