#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include "qalloc.h"
#include "uncompute.h"

#define B 2 // base
#define LOGB 2 // num bits of base
#define M 55 // modulo
#define LOGM 6 // num bits of modulo
#define N1 6 // top
#define N2 6 // bottom = logm




/* Computes map from |top>|0> to |top>|f(top)>, where f(y) = b^y % m */
int main() {
	int b = B;
	int m = M;
	int logm = LOGM;
	int n1 = N1;
	int n2 = N2;
	qbit *new[N1+N2];
	acquire(N1+N2, new, 0, NULL);
	qbit **top = &new[0]; // N1
	qbit **bot = &new[N1]; // N2
	for (int i = 0; i < N1; i++) {
		printf("iter%d\n", i);
		//ctrlModExp(top[i], i, bot, n2, b, m);
		Toffoli(top[0], top[1], bot[0]);
		Free(top, N1, bot, N2, 1) {
			//printf("try here\n");
			CNOT(top[0], top[1]);
			Toffoli(top[0], top[1], bot[0]);
			declare_free(bot, N2);
		} Nofree {
			//printf("catch here\n");
		}
	}
	return 0;
	
}

