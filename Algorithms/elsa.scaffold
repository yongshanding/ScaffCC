// Scaffold file synthesized by para-bench.py
// qubits: 16 ancilla: 16 gates: 256 levels: 2 degrees: 4 loops: 32
#include "qalloc.h"
#include "uncompute.h"
#define LOOP 32
// Call list: 1,2,3,4;5,6,7,8;9,10;11;12,13,14;15,16,17,18
// Function 18 with degree 0
// nq: 2, na: 4, ng: 165
void func18(qbit **q, int n) {
printf("func18\n");
fflush(stderr);
	qbit *anc[4]; // ancilla
	qbit *nb[127]; // interacting bits
	qbit *res[2];
	nb[0] = q[0];
	nb[1] = q[1];
	nb[2] = q[0];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[1];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[1];
	nb[13] = q[0];
	nb[14] = q[1];
	nb[15] = q[0];
	nb[16] = q[1];
	nb[17] = q[0];
	nb[18] = q[1];
	nb[19] = q[0];
	nb[20] = q[1];
	nb[21] = q[0];
	nb[22] = q[1];
	nb[23] = q[1];
	nb[24] = q[0];
	nb[25] = q[1];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[1];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[1];
	nb[33] = q[0];
	nb[34] = q[1];
	nb[35] = q[1];
	nb[36] = q[0];
	nb[37] = q[1];
	nb[38] = q[1];
	nb[39] = q[1];
	nb[40] = q[1];
	nb[41] = q[1];
	nb[42] = q[1];
	nb[43] = q[0];
	nb[44] = q[0];
	nb[45] = q[0];
	nb[46] = q[1];
	nb[47] = q[1];
	nb[48] = q[0];
	nb[49] = q[1];
	nb[50] = q[0];
	nb[51] = q[0];
	nb[52] = q[0];
	nb[53] = q[0];
	nb[54] = q[0];
	nb[55] = q[0];
	nb[56] = q[1];
	nb[57] = q[0];
	nb[58] = q[0];
	nb[59] = q[0];
	nb[60] = q[1];
	nb[61] = q[0];
	nb[62] = q[0];
	nb[63] = q[0];
	nb[64] = q[1];
	nb[65] = q[0];
	nb[66] = q[0];
	nb[67] = q[1];
	nb[68] = q[1];
	nb[69] = q[1];
	nb[70] = q[1];
	nb[71] = q[0];
	nb[72] = q[0];
	nb[73] = q[0];
	nb[74] = q[0];
	nb[75] = q[0];
	nb[76] = q[0];
	nb[77] = q[0];
	nb[78] = q[1];
	nb[79] = q[0];
	nb[80] = q[1];
	nb[81] = q[0];
	nb[82] = q[1];
	nb[83] = q[0];
	nb[84] = q[1];
	nb[85] = q[1];
	nb[86] = q[1];
	nb[87] = q[0];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[0];
	nb[91] = q[1];
	nb[92] = q[0];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[1];
	nb[96] = q[0];
	nb[97] = q[0];
	nb[98] = q[1];
	nb[99] = q[0];
	nb[100] = q[1];
	nb[101] = q[0];
	nb[102] = q[1];
	nb[103] = q[0];
	nb[104] = q[1];
	nb[105] = q[1];
	nb[106] = q[0];
	nb[107] = q[0];
	nb[108] = q[1];
	nb[109] = q[0];
	nb[110] = q[1];
	nb[111] = q[1];
	nb[112] = q[1];
	nb[113] = q[0];
	nb[114] = q[0];
	nb[115] = q[0];
	nb[116] = q[0];
	nb[117] = q[1];
	nb[118] = q[1];
	nb[119] = q[0];
	nb[120] = q[0];
	nb[121] = q[0];
	nb[122] = q[1];
	nb[123] = q[0];
	nb[124] = q[0];
	nb[125] = q[1];
	nb[126] = q[0];
	res[0] = q[1];
	res[1] = q[0];
	// Leaf function
	Compute (0, 4, 332, 167, 0, 4, 0) {
		acquire(4, anc, 127, nb);
		Toffoli( anc[1], q[0], anc[3] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( anc[3], q[0] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[2], anc[1], anc[0] );
		Toffoli( anc[2], anc[0], anc[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[2], anc[3] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[2], anc[0], q[1] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[2], anc[3], q[1] );
		Toffoli( anc[2], q[0], anc[3] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( anc[1], anc[0], anc[3] );
		Toffoli( anc[3], q[0], anc[1] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[3], anc[1], anc[2] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[0], anc[1], q[1] );
		CNOT( anc[3], anc[1] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], anc[2], q[1] );
		Toffoli( anc[3], anc[1], q[1] );
		Toffoli( q[0], anc[2], anc[1] );
		CNOT( anc[1], q[1] );
		CNOT( anc[2], anc[1] );
		CNOT( q[0], anc[1] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( anc[0], anc[3] );
		CNOT( q[0], q[1] );
		Toffoli( anc[2], q[0], anc[0] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( anc[3], q[1] );
		Toffoli( q[1], anc[1], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[3], q[1], anc[0] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[1], anc[3], q[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[0], anc[2], q[1] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[3], q[0] );
		Toffoli( q[0], anc[0], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[2], q[1], q[0] );
		CNOT( q[0], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[1], q[0], anc[3] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( anc[3], anc[0], q[0] );
		Toffoli( anc[0], q[1], anc[3] );
		Toffoli( anc[2], anc[3], q[0] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( anc[3], anc[0], anc[2] );
		CNOT( q[0], anc[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[3], q[0], anc[0] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( q[1], anc[3], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[0], anc[3], anc[2] );
		CNOT( q[1], anc[3] );
		Toffoli( q[1], anc[0], anc[3] );
		Toffoli( q[1], q[0], anc[1] );
		CNOT( q[0], anc[3] );
		CNOT( anc[1], anc[2] );
		CNOT( q[0], anc[2] );
		CNOT( q[0], anc[3] );
		Toffoli( anc[3], anc[2], q[0] );
		CNOT( anc[1], anc[2] );
		CNOT( q[0], anc[2] );
		Toffoli( q[0], anc[2], q[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( q[1], anc[2], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[3], anc[0] );
		Toffoli( q[1], q[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( q[1], anc[2] );
		Toffoli( anc[2], anc[0], q[0] );
		Toffoli( anc[1], anc[3], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[2], q[0] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[3], q[1] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[3], q[0], q[1] );
		Toffoli( anc[2], q[0], anc[0] );
		Toffoli( anc[0], anc[3], anc[1] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[0], q[1] );
		CNOT( anc[3], anc[2] );
		Toffoli( q[1], anc[3], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[3] );
		CNOT( anc[0], anc[3] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[1], anc[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[1], anc[3] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( q[1], anc[1] );
		CNOT( anc[3], q[1] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], anc[3], anc[0] );
		Toffoli( anc[3], q[0], q[1] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[0], anc[2], q[0] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[3], q[1], anc[1] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[3], anc[0], q[0] );
	}
	Store {
		CNOT( anc[3], res[0] );
		CNOT( anc[3], res[1] );
	}
	Uncompute(res, 0, anc, 4, 332, 167){
		Toffoli( anc[3], anc[0], q[0] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[3], q[1], anc[1] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[0], anc[2], q[0] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[3], q[0], q[1] );
		Toffoli( anc[1], anc[3], anc[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[3], q[1] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( q[0], anc[2], anc[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], q[1] );
		Toffoli( q[1], anc[1], anc[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[1], anc[3] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], anc[3] );
		CNOT( q[0], anc[3] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[3], anc[0] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[0], anc[3], anc[1] );
		Toffoli( anc[2], q[0], anc[0] );
		Toffoli( anc[3], q[0], q[1] );
		CNOT( q[0], anc[1] );
		CNOT( anc[3], q[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( q[1], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], anc[3], anc[0] );
		Toffoli( anc[2], anc[0], q[0] );
		CNOT( q[1], anc[2] );
		CNOT( anc[1], q[0] );
		Toffoli( q[1], q[0], anc[1] );
		CNOT( anc[3], anc[0] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], anc[2], q[0] );
		CNOT( anc[2], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[0], anc[2], q[1] );
		CNOT( q[0], anc[2] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[3], anc[2], q[0] );
		CNOT( q[0], anc[3] );
		CNOT( q[0], anc[2] );
		CNOT( anc[1], anc[2] );
		CNOT( q[0], anc[3] );
		Toffoli( q[1], q[0], anc[1] );
		Toffoli( q[1], anc[0], anc[3] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[0], anc[3], anc[2] );
		Toffoli( anc[2], anc[3], anc[1] );
		CNOT( anc[3], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[3], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( anc[3], q[0], anc[0] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[3], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[3], anc[0], anc[2] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( anc[2], anc[3], q[0] );
		Toffoli( anc[0], q[1], anc[3] );
		Toffoli( anc[3], anc[0], q[0] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], q[0], anc[3] );
		CNOT( anc[3], q[0] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[2], q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[1], q[0] );
		Toffoli( q[0], anc[0], anc[2] );
		CNOT( anc[3], q[0] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[0], anc[2], q[1] );
		CNOT( anc[1], q[1] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], anc[3], q[1] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[3], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[1], anc[2] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[2], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], anc[3] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( q[0], anc[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[3], anc[1], q[1] );
		Toffoli( anc[1], anc[2], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[0], anc[1], q[1] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[3], anc[1], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[2], anc[3] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( anc[1], q[1] );
		CNOT( anc[2], anc[3] );
		Toffoli( q[1], anc[1], q[0] );
		Toffoli( anc[3], q[0], anc[1] );
		Toffoli( anc[1], anc[0], anc[3] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[2], q[0], anc[3] );
		Toffoli( anc[2], anc[3], q[1] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[2], anc[0], q[1] );
		CNOT( q[1], anc[3] );
		CNOT( anc[2], anc[3] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( q[0], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[1], q[0], anc[3] );
	} Free(anc, 4) {}
}
// Function 18 with degree 0
// nq: 2, na: 4, ng: 165
void func18R(qbit **q, int n) {
printf("func18R\n");
fflush(stderr);
	qbit *anc[4]; // ancilla
	qbit *nb[127]; // interacting bits
	qbit *res[2];
	nb[0] = q[0];
	nb[1] = q[1];
	nb[2] = q[0];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[1];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[1];
	nb[13] = q[0];
	nb[14] = q[1];
	nb[15] = q[0];
	nb[16] = q[1];
	nb[17] = q[0];
	nb[18] = q[1];
	nb[19] = q[0];
	nb[20] = q[1];
	nb[21] = q[0];
	nb[22] = q[1];
	nb[23] = q[1];
	nb[24] = q[0];
	nb[25] = q[1];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[1];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[1];
	nb[33] = q[0];
	nb[34] = q[1];
	nb[35] = q[1];
	nb[36] = q[0];
	nb[37] = q[1];
	nb[38] = q[1];
	nb[39] = q[1];
	nb[40] = q[1];
	nb[41] = q[1];
	nb[42] = q[1];
	nb[43] = q[0];
	nb[44] = q[0];
	nb[45] = q[0];
	nb[46] = q[1];
	nb[47] = q[1];
	nb[48] = q[0];
	nb[49] = q[1];
	nb[50] = q[0];
	nb[51] = q[0];
	nb[52] = q[0];
	nb[53] = q[0];
	nb[54] = q[0];
	nb[55] = q[0];
	nb[56] = q[1];
	nb[57] = q[0];
	nb[58] = q[0];
	nb[59] = q[0];
	nb[60] = q[1];
	nb[61] = q[0];
	nb[62] = q[0];
	nb[63] = q[0];
	nb[64] = q[1];
	nb[65] = q[0];
	nb[66] = q[0];
	nb[67] = q[1];
	nb[68] = q[1];
	nb[69] = q[1];
	nb[70] = q[1];
	nb[71] = q[0];
	nb[72] = q[0];
	nb[73] = q[0];
	nb[74] = q[0];
	nb[75] = q[0];
	nb[76] = q[0];
	nb[77] = q[0];
	nb[78] = q[1];
	nb[79] = q[0];
	nb[80] = q[1];
	nb[81] = q[0];
	nb[82] = q[1];
	nb[83] = q[0];
	nb[84] = q[1];
	nb[85] = q[1];
	nb[86] = q[1];
	nb[87] = q[0];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[0];
	nb[91] = q[1];
	nb[92] = q[0];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[1];
	nb[96] = q[0];
	nb[97] = q[0];
	nb[98] = q[1];
	nb[99] = q[0];
	nb[100] = q[1];
	nb[101] = q[0];
	nb[102] = q[1];
	nb[103] = q[0];
	nb[104] = q[1];
	nb[105] = q[1];
	nb[106] = q[0];
	nb[107] = q[0];
	nb[108] = q[1];
	nb[109] = q[0];
	nb[110] = q[1];
	nb[111] = q[1];
	nb[112] = q[1];
	nb[113] = q[0];
	nb[114] = q[0];
	nb[115] = q[0];
	nb[116] = q[0];
	nb[117] = q[1];
	nb[118] = q[1];
	nb[119] = q[0];
	nb[120] = q[0];
	nb[121] = q[0];
	nb[122] = q[1];
	nb[123] = q[0];
	nb[124] = q[0];
	nb[125] = q[1];
	nb[126] = q[0];
	res[0] = q[1];
	res[1] = q[0];
	// Leaf function
	_computeModule(0, 4, 332, 167, 0, 4, 0);
	acquire(4, anc, 127, nb);
	Recompute (res, 0, anc, 4, 332, 167){
		Toffoli( anc[3], anc[0], q[0] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[3], q[1], anc[1] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[0], anc[2], q[0] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[3], q[0], q[1] );
		Toffoli( anc[1], anc[3], anc[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[3], q[1] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( q[0], anc[2], anc[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], q[1] );
		Toffoli( q[1], anc[1], anc[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[1], anc[3] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], anc[3] );
		CNOT( q[0], anc[3] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[3], anc[0] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[0], anc[3], anc[1] );
		Toffoli( anc[2], q[0], anc[0] );
		Toffoli( anc[3], q[0], q[1] );
		CNOT( q[0], anc[1] );
		CNOT( anc[3], q[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( q[1], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], anc[3], anc[0] );
		Toffoli( anc[2], anc[0], q[0] );
		CNOT( q[1], anc[2] );
		CNOT( anc[1], q[0] );
		Toffoli( q[1], q[0], anc[1] );
		CNOT( anc[3], anc[0] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], anc[2], q[0] );
		CNOT( anc[2], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[0], anc[2], q[1] );
		CNOT( q[0], anc[2] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[3], anc[2], q[0] );
		CNOT( q[0], anc[3] );
		CNOT( q[0], anc[2] );
		CNOT( anc[1], anc[2] );
		CNOT( q[0], anc[3] );
		Toffoli( q[1], q[0], anc[1] );
		Toffoli( q[1], anc[0], anc[3] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[0], anc[3], anc[2] );
		Toffoli( anc[2], anc[3], anc[1] );
		CNOT( anc[3], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[3], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( anc[3], q[0], anc[0] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[3], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[3], anc[0], anc[2] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( anc[2], anc[3], q[0] );
		Toffoli( anc[0], q[1], anc[3] );
		Toffoli( anc[3], anc[0], q[0] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], q[0], anc[3] );
		CNOT( anc[3], q[0] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[2], q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[1], q[0] );
		Toffoli( q[0], anc[0], anc[2] );
		CNOT( anc[3], q[0] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[0], anc[2], q[1] );
		CNOT( anc[1], q[1] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], anc[3], q[1] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[3], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[1], anc[2] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[2], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], anc[3] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( q[0], anc[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[3], anc[1], q[1] );
		Toffoli( anc[1], anc[2], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[0], anc[1], q[1] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[3], anc[1], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[2], anc[3] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( anc[1], q[1] );
		CNOT( anc[2], anc[3] );
		Toffoli( q[1], anc[1], q[0] );
		Toffoli( anc[3], q[0], anc[1] );
		Toffoli( anc[1], anc[0], anc[3] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[2], q[0], anc[3] );
		Toffoli( anc[2], anc[3], q[1] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[2], anc[0], q[1] );
		CNOT( q[1], anc[3] );
		CNOT( anc[2], anc[3] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( q[0], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[1], q[0], anc[3] );
	}
	Restore {
		CNOT( anc[3], res[0] );
		CNOT( anc[3], res[1] );
	}
	Unrecompute {
		Toffoli( anc[1], q[0], anc[3] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( anc[3], q[0] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[2], anc[1], anc[0] );
		Toffoli( anc[2], anc[0], anc[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[2], anc[3] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[2], anc[0], q[1] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[2], anc[3], q[1] );
		Toffoli( anc[2], q[0], anc[3] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( anc[1], anc[0], anc[3] );
		Toffoli( anc[3], q[0], anc[1] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[3], anc[1], anc[2] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[0], anc[1], q[1] );
		CNOT( anc[3], anc[1] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], anc[2], q[1] );
		Toffoli( anc[3], anc[1], q[1] );
		Toffoli( q[0], anc[2], anc[1] );
		CNOT( anc[1], q[1] );
		CNOT( anc[2], anc[1] );
		CNOT( q[0], anc[1] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( anc[0], anc[3] );
		CNOT( q[0], q[1] );
		Toffoli( anc[2], q[0], anc[0] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( anc[3], q[1] );
		Toffoli( q[1], anc[1], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[3], q[1], anc[0] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[1], anc[3], q[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[0], anc[2], q[1] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[3], q[0] );
		Toffoli( q[0], anc[0], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[2], q[1], q[0] );
		CNOT( q[0], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[1], q[0], anc[3] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( anc[3], anc[0], q[0] );
		Toffoli( anc[0], q[1], anc[3] );
		Toffoli( anc[2], anc[3], q[0] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( anc[3], anc[0], anc[2] );
		CNOT( q[0], anc[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[3], q[0], anc[0] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( q[1], anc[3], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[0], anc[3], anc[2] );
		CNOT( q[1], anc[3] );
		Toffoli( q[1], anc[0], anc[3] );
		Toffoli( q[1], q[0], anc[1] );
		CNOT( q[0], anc[3] );
		CNOT( anc[1], anc[2] );
		CNOT( q[0], anc[2] );
		CNOT( q[0], anc[3] );
		Toffoli( anc[3], anc[2], q[0] );
		CNOT( anc[1], anc[2] );
		CNOT( q[0], anc[2] );
		Toffoli( q[0], anc[2], q[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( q[1], anc[2], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[3], anc[0] );
		Toffoli( q[1], q[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( q[1], anc[2] );
		Toffoli( anc[2], anc[0], q[0] );
		Toffoli( anc[1], anc[3], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[2], q[0] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[3], q[1] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[3], q[0], q[1] );
		Toffoli( anc[2], q[0], anc[0] );
		Toffoli( anc[0], anc[3], anc[1] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[1], q[0], anc[2] );
		CNOT( anc[0], q[1] );
		CNOT( anc[3], anc[2] );
		Toffoli( q[1], anc[3], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[3] );
		CNOT( anc[0], anc[3] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[1], anc[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[1], anc[3] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( anc[2], anc[1], anc[3] );
		CNOT( q[1], anc[1] );
		CNOT( anc[3], q[1] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], anc[3], anc[0] );
		Toffoli( anc[3], q[0], q[1] );
		Toffoli( anc[2], anc[3], anc[0] );
		Toffoli( anc[0], anc[2], q[0] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[3], q[1], anc[1] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[3], anc[0], q[0] );
	} Refree(anc, 4) {}
}
// Function 17 with degree 0
// nq: 2, na: 3, ng: 118
void func17(qbit **q, int n) {
printf("func17\n");
fflush(stderr);
	qbit *anc[3]; // ancilla
	qbit *nb[117]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[1];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[1];
	nb[7] = q[0];
	nb[8] = q[1];
	nb[9] = q[1];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[1];
	nb[13] = q[1];
	nb[14] = q[0];
	nb[15] = q[1];
	nb[16] = q[1];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[1];
	nb[22] = q[0];
	nb[23] = q[1];
	nb[24] = q[0];
	nb[25] = q[0];
	nb[26] = q[0];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[1];
	nb[30] = q[1];
	nb[31] = q[0];
	nb[32] = q[0];
	nb[33] = q[1];
	nb[34] = q[1];
	nb[35] = q[0];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[0];
	nb[39] = q[1];
	nb[40] = q[0];
	nb[41] = q[1];
	nb[42] = q[0];
	nb[43] = q[1];
	nb[44] = q[1];
	nb[45] = q[0];
	nb[46] = q[1];
	nb[47] = q[1];
	nb[48] = q[0];
	nb[49] = q[1];
	nb[50] = q[0];
	nb[51] = q[1];
	nb[52] = q[1];
	nb[53] = q[1];
	nb[54] = q[0];
	nb[55] = q[0];
	nb[56] = q[0];
	nb[57] = q[0];
	nb[58] = q[1];
	nb[59] = q[0];
	nb[60] = q[0];
	nb[61] = q[0];
	nb[62] = q[0];
	nb[63] = q[1];
	nb[64] = q[1];
	nb[65] = q[0];
	nb[66] = q[0];
	nb[67] = q[0];
	nb[68] = q[0];
	nb[69] = q[1];
	nb[70] = q[0];
	nb[71] = q[1];
	nb[72] = q[0];
	nb[73] = q[0];
	nb[74] = q[1];
	nb[75] = q[1];
	nb[76] = q[0];
	nb[77] = q[1];
	nb[78] = q[0];
	nb[79] = q[0];
	nb[80] = q[1];
	nb[81] = q[0];
	nb[82] = q[0];
	nb[83] = q[0];
	nb[84] = q[1];
	nb[85] = q[0];
	nb[86] = q[0];
	nb[87] = q[0];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[1];
	nb[91] = q[0];
	nb[92] = q[1];
	nb[93] = q[0];
	nb[94] = q[1];
	nb[95] = q[0];
	nb[96] = q[1];
	nb[97] = q[0];
	nb[98] = q[1];
	nb[99] = q[1];
	nb[100] = q[1];
	nb[101] = q[0];
	nb[102] = q[0];
	nb[103] = q[1];
	nb[104] = q[1];
	nb[105] = q[0];
	nb[106] = q[0];
	nb[107] = q[1];
	nb[108] = q[1];
	nb[109] = q[1];
	nb[110] = q[1];
	nb[111] = q[1];
	nb[112] = q[1];
	nb[113] = q[1];
	nb[114] = q[1];
	nb[115] = q[1];
	nb[116] = q[1];
	res[0] = q[0];
	// Leaf function
	Compute (0, 3, 237, 119, 0, 4, 0) {
		acquire(3, anc, 117, nb);
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[0], anc[2], anc[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], anc[2] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[0], q[1], anc[1] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], q[0] );
		CNOT( q[1], anc[2] );
		CNOT( anc[2], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], anc[2] );
		Toffoli( q[1], anc[0], anc[2] );
		CNOT( q[1], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[0], anc[1], anc[2] );
		Toffoli( q[1], anc[2], q[0] );
		Toffoli( anc[2], q[0], anc[1] );
		Toffoli( anc[1], anc[0], anc[2] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( anc[1], q[1], q[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[0], q[1], anc[2] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[2], q[1], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( q[1], anc[1], q[0] );
		Toffoli( q[1], anc[0], anc[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[1], q[1], anc[2] );
		CNOT( anc[2], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[2], q[1] );
		Toffoli( q[0], anc[2], anc[1] );
		CNOT( q[0], anc[2] );
		CNOT( q[0], anc[0] );
		CNOT( anc[2], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[0], q[1], anc[1] );
		Toffoli( q[0], anc[1], anc[2] );
		Toffoli( anc[1], q[0], q[1] );
		Toffoli( q[1], anc[1], anc[2] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[1], anc[2], anc[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[2], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[0], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[0], anc[2], q[1] );
		Toffoli( q[0], q[1], anc[2] );
		Toffoli( anc[2], anc[0], anc[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[1], q[1] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[1], q[1] );
		CNOT( q[1], anc[2] );
		CNOT( anc[2], q[1] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( q[1], anc[1] );
		CNOT( q[1], anc[2] );
		Toffoli( anc[2], anc[1], q[1] );
		Toffoli( anc[2], anc[0], q[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[2], q[1], anc[1] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[0], anc[1], anc[2] );
	}
	Store {
		CNOT( anc[2], res[0] );
	}
	Uncompute(res, 0, anc, 3, 237, 119){
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[2], q[1], anc[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[2], anc[0], q[1] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( q[1], anc[2] );
		CNOT( q[1], anc[1] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( anc[2], q[1] );
		CNOT( q[1], anc[2] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		CNOT( anc[1], q[1] );
		CNOT( anc[2], anc[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( q[0], q[1], anc[2] );
		Toffoli( q[0], anc[2], q[1] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( anc[0], anc[1], anc[2] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[0], anc[2] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[2] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], anc[2], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], anc[2], anc[0] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( q[1], anc[1], anc[2] );
		Toffoli( anc[1], q[0], q[1] );
		Toffoli( q[0], anc[1], anc[2] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( q[0], anc[1] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( q[1], q[0] );
		CNOT( anc[2], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[2] );
		Toffoli( q[0], anc[2], anc[1] );
		CNOT( anc[2], q[1] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[1], anc[2], anc[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[1], q[1], anc[2] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], anc[0], anc[1] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[2], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( anc[2], q[1], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[1], anc[2] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], q[1], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], anc[0], anc[2] );
		Toffoli( anc[2], q[0], anc[1] );
		Toffoli( q[1], anc[2], q[0] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], anc[2] );
		Toffoli( q[1], anc[0], anc[2] );
		CNOT( q[1], anc[2] );
		CNOT( q[1], anc[0] );
		CNOT( anc[2], anc[0] );
		CNOT( q[1], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[1] );
		CNOT( anc[0], anc[2] );
		Toffoli( q[1], anc[2], anc[1] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[2], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[2] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], anc[2], anc[1] );
		CNOT( q[0], anc[1] );
		CNOT( q[0], anc[0] );
	} Free(anc, 3) {}
}
// Function 17 with degree 0
// nq: 2, na: 3, ng: 118
void func17R(qbit **q, int n) {
printf("func17R\n");
fflush(stderr);
	qbit *anc[3]; // ancilla
	qbit *nb[117]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[1];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[1];
	nb[7] = q[0];
	nb[8] = q[1];
	nb[9] = q[1];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[1];
	nb[13] = q[1];
	nb[14] = q[0];
	nb[15] = q[1];
	nb[16] = q[1];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[1];
	nb[22] = q[0];
	nb[23] = q[1];
	nb[24] = q[0];
	nb[25] = q[0];
	nb[26] = q[0];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[1];
	nb[30] = q[1];
	nb[31] = q[0];
	nb[32] = q[0];
	nb[33] = q[1];
	nb[34] = q[1];
	nb[35] = q[0];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[0];
	nb[39] = q[1];
	nb[40] = q[0];
	nb[41] = q[1];
	nb[42] = q[0];
	nb[43] = q[1];
	nb[44] = q[1];
	nb[45] = q[0];
	nb[46] = q[1];
	nb[47] = q[1];
	nb[48] = q[0];
	nb[49] = q[1];
	nb[50] = q[0];
	nb[51] = q[1];
	nb[52] = q[1];
	nb[53] = q[1];
	nb[54] = q[0];
	nb[55] = q[0];
	nb[56] = q[0];
	nb[57] = q[0];
	nb[58] = q[1];
	nb[59] = q[0];
	nb[60] = q[0];
	nb[61] = q[0];
	nb[62] = q[0];
	nb[63] = q[1];
	nb[64] = q[1];
	nb[65] = q[0];
	nb[66] = q[0];
	nb[67] = q[0];
	nb[68] = q[0];
	nb[69] = q[1];
	nb[70] = q[0];
	nb[71] = q[1];
	nb[72] = q[0];
	nb[73] = q[0];
	nb[74] = q[1];
	nb[75] = q[1];
	nb[76] = q[0];
	nb[77] = q[1];
	nb[78] = q[0];
	nb[79] = q[0];
	nb[80] = q[1];
	nb[81] = q[0];
	nb[82] = q[0];
	nb[83] = q[0];
	nb[84] = q[1];
	nb[85] = q[0];
	nb[86] = q[0];
	nb[87] = q[0];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[1];
	nb[91] = q[0];
	nb[92] = q[1];
	nb[93] = q[0];
	nb[94] = q[1];
	nb[95] = q[0];
	nb[96] = q[1];
	nb[97] = q[0];
	nb[98] = q[1];
	nb[99] = q[1];
	nb[100] = q[1];
	nb[101] = q[0];
	nb[102] = q[0];
	nb[103] = q[1];
	nb[104] = q[1];
	nb[105] = q[0];
	nb[106] = q[0];
	nb[107] = q[1];
	nb[108] = q[1];
	nb[109] = q[1];
	nb[110] = q[1];
	nb[111] = q[1];
	nb[112] = q[1];
	nb[113] = q[1];
	nb[114] = q[1];
	nb[115] = q[1];
	nb[116] = q[1];
	res[0] = q[0];
	// Leaf function
	_computeModule(0, 3, 237, 119, 0, 4, 0);
	acquire(3, anc, 117, nb);
	Recompute (res, 0, anc, 3, 237, 119){
		Toffoli( anc[0], anc[1], anc[2] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[2], q[1], anc[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[2], anc[0], q[1] );
		Toffoli( anc[2], anc[1], q[1] );
		CNOT( q[1], anc[2] );
		CNOT( q[1], anc[1] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( anc[2], q[1] );
		CNOT( q[1], anc[2] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		CNOT( anc[1], q[1] );
		CNOT( anc[2], anc[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[2], anc[0], anc[1] );
		Toffoli( q[0], q[1], anc[2] );
		Toffoli( q[0], anc[2], q[1] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( anc[0], anc[1], anc[2] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[0], anc[2] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[2] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], anc[2], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], anc[2], anc[0] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( q[1], anc[1], anc[2] );
		Toffoli( anc[1], q[0], q[1] );
		Toffoli( q[0], anc[1], anc[2] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( q[0], anc[1] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( q[1], q[0] );
		CNOT( anc[2], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[2] );
		Toffoli( q[0], anc[2], anc[1] );
		CNOT( anc[2], q[1] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[1], anc[2], anc[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[1], q[1], anc[2] );
		Toffoli( anc[1], anc[0], q[1] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], anc[0], anc[1] );
		Toffoli( q[1], anc[1], q[0] );
		CNOT( anc[2], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( anc[2], q[1], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[1], anc[2] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], q[1], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], anc[0], anc[2] );
		Toffoli( anc[2], q[0], anc[1] );
		Toffoli( q[1], anc[2], q[0] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], anc[2] );
		Toffoli( q[1], anc[0], anc[2] );
		CNOT( q[1], anc[2] );
		CNOT( q[1], anc[0] );
		CNOT( anc[2], anc[0] );
		CNOT( q[1], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[1] );
		CNOT( anc[0], anc[2] );
		Toffoli( q[1], anc[2], anc[1] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[2], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[2] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], anc[2], anc[1] );
		CNOT( q[0], anc[1] );
		CNOT( q[0], anc[0] );
	}
	Restore {
		CNOT( anc[2], res[0] );
	}
	Unrecompute {
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[0], anc[2], anc[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], anc[2] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[2], q[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[0], q[1], anc[1] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[2] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], q[0] );
		CNOT( q[1], anc[2] );
		CNOT( anc[2], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], anc[2] );
		Toffoli( q[1], anc[0], anc[2] );
		CNOT( q[1], anc[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[0], anc[1], anc[2] );
		Toffoli( q[1], anc[2], q[0] );
		Toffoli( anc[2], q[0], anc[1] );
		Toffoli( anc[1], anc[0], anc[2] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( q[0], anc[2], anc[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( anc[1], q[1], q[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[0], q[1], anc[2] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[2], q[1], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( q[1], anc[1], q[0] );
		Toffoli( q[1], anc[0], anc[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[1], q[1], anc[2] );
		CNOT( anc[2], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[2], q[1] );
		Toffoli( q[0], anc[2], anc[1] );
		CNOT( q[0], anc[2] );
		CNOT( q[0], anc[0] );
		CNOT( anc[2], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], anc[1], anc[2] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[0], q[1], anc[1] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[0], q[1], anc[1] );
		Toffoli( q[0], anc[1], anc[2] );
		Toffoli( anc[1], q[0], q[1] );
		Toffoli( q[1], anc[1], anc[2] );
		Toffoli( q[0], anc[2], anc[1] );
		Toffoli( anc[1], anc[2], anc[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[2], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[0], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[2], anc[0] );
		Toffoli( anc[0], anc[1], anc[2] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[0], anc[2], q[1] );
		Toffoli( q[0], q[1], anc[2] );
		Toffoli( anc[2], anc[0], anc[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[1], q[1] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[1], q[1] );
		CNOT( q[1], anc[2] );
		CNOT( anc[2], q[1] );
		Toffoli( q[1], anc[2], anc[1] );
		CNOT( q[1], anc[1] );
		CNOT( q[1], anc[2] );
		Toffoli( anc[2], anc[1], q[1] );
		Toffoli( anc[2], anc[0], q[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[2], q[1], anc[1] );
		Toffoli( q[1], anc[2], anc[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[0], anc[1], anc[2] );
	} Refree(anc, 3) {}
}
// Function 16 with degree 0
// nq: 2, na: 1, ng: 126
void func16(qbit **q, int n) {
printf("func16\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[210]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[1];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[0];
	nb[6] = q[1];
	nb[7] = q[1];
	nb[8] = q[1];
	nb[9] = q[0];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[1];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[1];
	nb[22] = q[1];
	nb[23] = q[0];
	nb[24] = q[1];
	nb[25] = q[0];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[0];
	nb[30] = q[1];
	nb[31] = q[0];
	nb[32] = q[1];
	nb[33] = q[0];
	nb[34] = q[1];
	nb[35] = q[0];
	nb[36] = q[1];
	nb[37] = q[1];
	nb[38] = q[0];
	nb[39] = q[1];
	nb[40] = q[1];
	nb[41] = q[0];
	nb[42] = q[1];
	nb[43] = q[1];
	nb[44] = q[0];
	nb[45] = q[1];
	nb[46] = q[0];
	nb[47] = q[0];
	nb[48] = q[1];
	nb[49] = q[0];
	nb[50] = q[1];
	nb[51] = q[1];
	nb[52] = q[0];
	nb[53] = q[0];
	nb[54] = q[1];
	nb[55] = q[0];
	nb[56] = q[1];
	nb[57] = q[1];
	nb[58] = q[0];
	nb[59] = q[1];
	nb[60] = q[0];
	nb[61] = q[0];
	nb[62] = q[1];
	nb[63] = q[0];
	nb[64] = q[0];
	nb[65] = q[1];
	nb[66] = q[0];
	nb[67] = q[0];
	nb[68] = q[0];
	nb[69] = q[1];
	nb[70] = q[0];
	nb[71] = q[1];
	nb[72] = q[1];
	nb[73] = q[0];
	nb[74] = q[1];
	nb[75] = q[0];
	nb[76] = q[0];
	nb[77] = q[1];
	nb[78] = q[0];
	nb[79] = q[1];
	nb[80] = q[1];
	nb[81] = q[0];
	nb[82] = q[0];
	nb[83] = q[1];
	nb[84] = q[0];
	nb[85] = q[1];
	nb[86] = q[1];
	nb[87] = q[1];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[0];
	nb[91] = q[0];
	nb[92] = q[1];
	nb[93] = q[0];
	nb[94] = q[1];
	nb[95] = q[1];
	nb[96] = q[0];
	nb[97] = q[0];
	nb[98] = q[1];
	nb[99] = q[0];
	nb[100] = q[1];
	nb[101] = q[0];
	nb[102] = q[0];
	nb[103] = q[0];
	nb[104] = q[1];
	nb[105] = q[1];
	nb[106] = q[0];
	nb[107] = q[1];
	nb[108] = q[1];
	nb[109] = q[0];
	nb[110] = q[1];
	nb[111] = q[0];
	nb[112] = q[1];
	nb[113] = q[0];
	nb[114] = q[1];
	nb[115] = q[1];
	nb[116] = q[0];
	nb[117] = q[1];
	nb[118] = q[1];
	nb[119] = q[0];
	nb[120] = q[0];
	nb[121] = q[1];
	nb[122] = q[1];
	nb[123] = q[0];
	nb[124] = q[1];
	nb[125] = q[0];
	nb[126] = q[1];
	nb[127] = q[0];
	nb[128] = q[1];
	nb[129] = q[0];
	nb[130] = q[0];
	nb[131] = q[1];
	nb[132] = q[1];
	nb[133] = q[1];
	nb[134] = q[1];
	nb[135] = q[0];
	nb[136] = q[1];
	nb[137] = q[0];
	nb[138] = q[0];
	nb[139] = q[1];
	nb[140] = q[0];
	nb[141] = q[1];
	nb[142] = q[1];
	nb[143] = q[0];
	nb[144] = q[0];
	nb[145] = q[1];
	nb[146] = q[1];
	nb[147] = q[0];
	nb[148] = q[1];
	nb[149] = q[0];
	nb[150] = q[0];
	nb[151] = q[1];
	nb[152] = q[1];
	nb[153] = q[0];
	nb[154] = q[1];
	nb[155] = q[1];
	nb[156] = q[0];
	nb[157] = q[0];
	nb[158] = q[1];
	nb[159] = q[0];
	nb[160] = q[1];
	nb[161] = q[1];
	nb[162] = q[1];
	nb[163] = q[0];
	nb[164] = q[1];
	nb[165] = q[0];
	nb[166] = q[1];
	nb[167] = q[0];
	nb[168] = q[1];
	nb[169] = q[1];
	nb[170] = q[0];
	nb[171] = q[0];
	nb[172] = q[1];
	nb[173] = q[0];
	nb[174] = q[1];
	nb[175] = q[1];
	nb[176] = q[0];
	nb[177] = q[0];
	nb[178] = q[0];
	nb[179] = q[1];
	nb[180] = q[0];
	nb[181] = q[1];
	nb[182] = q[1];
	nb[183] = q[0];
	nb[184] = q[1];
	nb[185] = q[0];
	nb[186] = q[1];
	nb[187] = q[1];
	nb[188] = q[0];
	nb[189] = q[0];
	nb[190] = q[1];
	nb[191] = q[0];
	nb[192] = q[0];
	nb[193] = q[0];
	nb[194] = q[0];
	nb[195] = q[1];
	nb[196] = q[0];
	nb[197] = q[1];
	nb[198] = q[0];
	nb[199] = q[1];
	nb[200] = q[1];
	nb[201] = q[0];
	nb[202] = q[1];
	nb[203] = q[0];
	nb[204] = q[1];
	nb[205] = q[0];
	nb[206] = q[1];
	nb[207] = q[0];
	nb[208] = q[1];
	nb[209] = q[1];
	res[0] = q[0];
	// Leaf function
	Compute (0, 1, 253, 127, 0, 4, 0) {
		acquire(1, anc, 210, nb);
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
	}
	Store {
		CNOT( q[1], res[0] );
	}
	Uncompute(res, 0, anc, 1, 253, 127){
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
	} Free(anc, 1) {}
}
// Function 16 with degree 0
// nq: 2, na: 1, ng: 126
void func16R(qbit **q, int n) {
printf("func16R\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[210]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[1];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[0];
	nb[6] = q[1];
	nb[7] = q[1];
	nb[8] = q[1];
	nb[9] = q[0];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[1];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[1];
	nb[22] = q[1];
	nb[23] = q[0];
	nb[24] = q[1];
	nb[25] = q[0];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[0];
	nb[30] = q[1];
	nb[31] = q[0];
	nb[32] = q[1];
	nb[33] = q[0];
	nb[34] = q[1];
	nb[35] = q[0];
	nb[36] = q[1];
	nb[37] = q[1];
	nb[38] = q[0];
	nb[39] = q[1];
	nb[40] = q[1];
	nb[41] = q[0];
	nb[42] = q[1];
	nb[43] = q[1];
	nb[44] = q[0];
	nb[45] = q[1];
	nb[46] = q[0];
	nb[47] = q[0];
	nb[48] = q[1];
	nb[49] = q[0];
	nb[50] = q[1];
	nb[51] = q[1];
	nb[52] = q[0];
	nb[53] = q[0];
	nb[54] = q[1];
	nb[55] = q[0];
	nb[56] = q[1];
	nb[57] = q[1];
	nb[58] = q[0];
	nb[59] = q[1];
	nb[60] = q[0];
	nb[61] = q[0];
	nb[62] = q[1];
	nb[63] = q[0];
	nb[64] = q[0];
	nb[65] = q[1];
	nb[66] = q[0];
	nb[67] = q[0];
	nb[68] = q[0];
	nb[69] = q[1];
	nb[70] = q[0];
	nb[71] = q[1];
	nb[72] = q[1];
	nb[73] = q[0];
	nb[74] = q[1];
	nb[75] = q[0];
	nb[76] = q[0];
	nb[77] = q[1];
	nb[78] = q[0];
	nb[79] = q[1];
	nb[80] = q[1];
	nb[81] = q[0];
	nb[82] = q[0];
	nb[83] = q[1];
	nb[84] = q[0];
	nb[85] = q[1];
	nb[86] = q[1];
	nb[87] = q[1];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[0];
	nb[91] = q[0];
	nb[92] = q[1];
	nb[93] = q[0];
	nb[94] = q[1];
	nb[95] = q[1];
	nb[96] = q[0];
	nb[97] = q[0];
	nb[98] = q[1];
	nb[99] = q[0];
	nb[100] = q[1];
	nb[101] = q[0];
	nb[102] = q[0];
	nb[103] = q[0];
	nb[104] = q[1];
	nb[105] = q[1];
	nb[106] = q[0];
	nb[107] = q[1];
	nb[108] = q[1];
	nb[109] = q[0];
	nb[110] = q[1];
	nb[111] = q[0];
	nb[112] = q[1];
	nb[113] = q[0];
	nb[114] = q[1];
	nb[115] = q[1];
	nb[116] = q[0];
	nb[117] = q[1];
	nb[118] = q[1];
	nb[119] = q[0];
	nb[120] = q[0];
	nb[121] = q[1];
	nb[122] = q[1];
	nb[123] = q[0];
	nb[124] = q[1];
	nb[125] = q[0];
	nb[126] = q[1];
	nb[127] = q[0];
	nb[128] = q[1];
	nb[129] = q[0];
	nb[130] = q[0];
	nb[131] = q[1];
	nb[132] = q[1];
	nb[133] = q[1];
	nb[134] = q[1];
	nb[135] = q[0];
	nb[136] = q[1];
	nb[137] = q[0];
	nb[138] = q[0];
	nb[139] = q[1];
	nb[140] = q[0];
	nb[141] = q[1];
	nb[142] = q[1];
	nb[143] = q[0];
	nb[144] = q[0];
	nb[145] = q[1];
	nb[146] = q[1];
	nb[147] = q[0];
	nb[148] = q[1];
	nb[149] = q[0];
	nb[150] = q[0];
	nb[151] = q[1];
	nb[152] = q[1];
	nb[153] = q[0];
	nb[154] = q[1];
	nb[155] = q[1];
	nb[156] = q[0];
	nb[157] = q[0];
	nb[158] = q[1];
	nb[159] = q[0];
	nb[160] = q[1];
	nb[161] = q[1];
	nb[162] = q[1];
	nb[163] = q[0];
	nb[164] = q[1];
	nb[165] = q[0];
	nb[166] = q[1];
	nb[167] = q[0];
	nb[168] = q[1];
	nb[169] = q[1];
	nb[170] = q[0];
	nb[171] = q[0];
	nb[172] = q[1];
	nb[173] = q[0];
	nb[174] = q[1];
	nb[175] = q[1];
	nb[176] = q[0];
	nb[177] = q[0];
	nb[178] = q[0];
	nb[179] = q[1];
	nb[180] = q[0];
	nb[181] = q[1];
	nb[182] = q[1];
	nb[183] = q[0];
	nb[184] = q[1];
	nb[185] = q[0];
	nb[186] = q[1];
	nb[187] = q[1];
	nb[188] = q[0];
	nb[189] = q[0];
	nb[190] = q[1];
	nb[191] = q[0];
	nb[192] = q[0];
	nb[193] = q[0];
	nb[194] = q[0];
	nb[195] = q[1];
	nb[196] = q[0];
	nb[197] = q[1];
	nb[198] = q[0];
	nb[199] = q[1];
	nb[200] = q[1];
	nb[201] = q[0];
	nb[202] = q[1];
	nb[203] = q[0];
	nb[204] = q[1];
	nb[205] = q[0];
	nb[206] = q[1];
	nb[207] = q[0];
	nb[208] = q[1];
	nb[209] = q[1];
	res[0] = q[0];
	// Leaf function
	_computeModule(0, 1, 253, 127, 0, 4, 0);
	acquire(1, anc, 210, nb);
	Recompute (res, 0, anc, 1, 253, 127){
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
	}
	Restore {
		CNOT( q[1], res[0] );
	}
	Unrecompute {
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( anc[0], q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
	} Refree(anc, 1) {}
}
// Function 15 with degree 0
// nq: 2, na: 6, ng: 43
void func15(qbit **q, int n) {
printf("func15\n");
fflush(stderr);
	qbit *anc[6]; // ancilla
	qbit *nb[30]; // interacting bits
	qbit *res[1];
	nb[0] = q[1];
	nb[1] = q[1];
	nb[2] = q[1];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[1];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[1];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[1];
	nb[14] = q[0];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[0];
	nb[23] = q[1];
	nb[24] = q[1];
	nb[25] = q[1];
	nb[26] = q[0];
	nb[27] = q[1];
	nb[28] = q[0];
	nb[29] = q[1];
	res[0] = q[1];
	// Leaf function
	Compute (0, 6, 87, 44, 0, 4, 0) {
		acquire(6, anc, 30, nb);
		Toffoli( q[1], anc[5], anc[4] );
		CNOT( q[1], anc[4] );
		CNOT( anc[5], anc[3] );
		Toffoli( anc[4], anc[3], q[1] );
		Toffoli( anc[3], anc[5], anc[0] );
		CNOT( anc[0], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[0], anc[3], anc[4] );
		Toffoli( anc[4], anc[0], anc[2] );
		Toffoli( anc[0], anc[1], anc[3] );
		Toffoli( anc[5], anc[2], anc[0] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[4], anc[1], q[0] );
		Toffoli( anc[1], anc[2], anc[4] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[5], anc[1], q[0] );
		Toffoli( anc[5], q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[3], anc[5], q[0] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[4], anc[2], anc[3] );
		CNOT( anc[4], anc[2] );
		CNOT( anc[2], q[1] );
		CNOT( q[1], anc[4] );
		Toffoli( q[0], anc[1], anc[5] );
		Toffoli( q[0], anc[1], anc[4] );
		CNOT( anc[1], anc[5] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[2], anc[3], anc[1] );
		CNOT( q[1], anc[4] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[2], anc[5], q[1] );
		Toffoli( q[0], anc[1], q[1] );
		Toffoli( q[0], q[1], anc[4] );
		CNOT( anc[1], anc[0] );
	}
	Store {
		CNOT( anc[5], res[0] );
	}
	Uncompute(res, 0, anc, 6, 87, 44){
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], q[1], anc[4] );
		Toffoli( q[0], anc[1], q[1] );
		Toffoli( anc[2], anc[5], q[1] );
		CNOT( anc[5], anc[0] );
		CNOT( anc[4], anc[0] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[2], anc[3], anc[1] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[1], anc[5] );
		Toffoli( q[0], anc[1], anc[4] );
		Toffoli( q[0], anc[1], anc[5] );
		CNOT( q[1], anc[4] );
		CNOT( anc[2], q[1] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[4], anc[2], anc[3] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[3], anc[5], q[0] );
		CNOT( anc[0], anc[3] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[5], q[0], q[1] );
		Toffoli( anc[5], anc[1], q[0] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[1], anc[2], anc[4] );
		Toffoli( anc[4], anc[1], q[0] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[5], anc[2], anc[0] );
		Toffoli( anc[0], anc[1], anc[3] );
		Toffoli( anc[4], anc[0], anc[2] );
		Toffoli( anc[0], anc[3], anc[4] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( q[1], anc[1] );
		CNOT( anc[4], anc[3] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[3], anc[5], anc[0] );
		Toffoli( anc[4], anc[3], q[1] );
		CNOT( anc[5], anc[3] );
		CNOT( q[1], anc[4] );
		Toffoli( q[1], anc[5], anc[4] );
	} Free(anc, 6) {}
}
// Function 15 with degree 0
// nq: 2, na: 6, ng: 43
void func15R(qbit **q, int n) {
printf("func15R\n");
fflush(stderr);
	qbit *anc[6]; // ancilla
	qbit *nb[30]; // interacting bits
	qbit *res[1];
	nb[0] = q[1];
	nb[1] = q[1];
	nb[2] = q[1];
	nb[3] = q[1];
	nb[4] = q[0];
	nb[5] = q[1];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[1];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[1];
	nb[14] = q[0];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[1];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[0];
	nb[23] = q[1];
	nb[24] = q[1];
	nb[25] = q[1];
	nb[26] = q[0];
	nb[27] = q[1];
	nb[28] = q[0];
	nb[29] = q[1];
	res[0] = q[1];
	// Leaf function
	_computeModule(0, 6, 87, 44, 0, 4, 0);
	acquire(6, anc, 30, nb);
	Recompute (res, 0, anc, 6, 87, 44){
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], q[1], anc[4] );
		Toffoli( q[0], anc[1], q[1] );
		Toffoli( anc[2], anc[5], q[1] );
		CNOT( anc[5], anc[0] );
		CNOT( anc[4], anc[0] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[2], anc[3], anc[1] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[1], anc[5] );
		Toffoli( q[0], anc[1], anc[4] );
		Toffoli( q[0], anc[1], anc[5] );
		CNOT( q[1], anc[4] );
		CNOT( anc[2], q[1] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[4], anc[2], anc[3] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[3], anc[5], q[0] );
		CNOT( anc[0], anc[3] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( anc[5], q[0], q[1] );
		Toffoli( anc[5], anc[1], q[0] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[1], anc[2], anc[4] );
		Toffoli( anc[4], anc[1], q[0] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[5], anc[2], anc[0] );
		Toffoli( anc[0], anc[1], anc[3] );
		Toffoli( anc[4], anc[0], anc[2] );
		Toffoli( anc[0], anc[3], anc[4] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( q[1], anc[1] );
		CNOT( anc[4], anc[3] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[3], anc[5], anc[0] );
		Toffoli( anc[4], anc[3], q[1] );
		CNOT( anc[5], anc[3] );
		CNOT( q[1], anc[4] );
		Toffoli( q[1], anc[5], anc[4] );
	}
	Restore {
		CNOT( anc[5], res[0] );
	}
	Unrecompute {
		Toffoli( q[1], anc[5], anc[4] );
		CNOT( q[1], anc[4] );
		CNOT( anc[5], anc[3] );
		Toffoli( anc[4], anc[3], q[1] );
		Toffoli( anc[3], anc[5], anc[0] );
		CNOT( anc[0], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[0], anc[3], anc[4] );
		Toffoli( anc[4], anc[0], anc[2] );
		Toffoli( anc[0], anc[1], anc[3] );
		Toffoli( anc[5], anc[2], anc[0] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[4], anc[1], q[0] );
		Toffoli( anc[1], anc[2], anc[4] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[5], anc[1], q[0] );
		Toffoli( anc[5], q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[3], anc[5], q[0] );
		Toffoli( anc[1], anc[0], q[1] );
		Toffoli( anc[4], anc[2], anc[3] );
		CNOT( anc[4], anc[2] );
		CNOT( anc[2], q[1] );
		CNOT( q[1], anc[4] );
		Toffoli( q[0], anc[1], anc[5] );
		Toffoli( q[0], anc[1], anc[4] );
		CNOT( anc[1], anc[5] );
		Toffoli( anc[0], q[0], anc[2] );
		CNOT( anc[3], q[1] );
		Toffoli( anc[2], anc[3], anc[1] );
		CNOT( q[1], anc[4] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[2], anc[5], q[1] );
		Toffoli( q[0], anc[1], q[1] );
		Toffoli( q[0], q[1], anc[4] );
		CNOT( anc[1], anc[0] );
	} Refree(anc, 6) {}
}
// Function 14 with degree 0
// nq: 4, na: 16, ng: 92
void func14(qbit **q, int n) {
printf("func14\n");
fflush(stderr);
	qbit *anc[16]; // ancilla
	qbit *nb[52]; // interacting bits
	qbit *res[1];
	nb[0] = q[1];
	nb[1] = q[2];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[2];
	nb[6] = q[0];
	nb[7] = q[1];
	nb[8] = q[3];
	nb[9] = q[1];
	nb[10] = q[0];
	nb[11] = q[3];
	nb[12] = q[2];
	nb[13] = q[1];
	nb[14] = q[2];
	nb[15] = q[2];
	nb[16] = q[1];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[1];
	nb[20] = q[3];
	nb[21] = q[2];
	nb[22] = q[2];
	nb[23] = q[1];
	nb[24] = q[2];
	nb[25] = q[1];
	nb[26] = q[2];
	nb[27] = q[0];
	nb[28] = q[2];
	nb[29] = q[3];
	nb[30] = q[1];
	nb[31] = q[3];
	nb[32] = q[0];
	nb[33] = q[2];
	nb[34] = q[1];
	nb[35] = q[0];
	nb[36] = q[2];
	nb[37] = q[2];
	nb[38] = q[1];
	nb[39] = q[2];
	nb[40] = q[1];
	nb[41] = q[3];
	nb[42] = q[2];
	nb[43] = q[0];
	nb[44] = q[0];
	nb[45] = q[0];
	nb[46] = q[2];
	nb[47] = q[1];
	nb[48] = q[0];
	nb[49] = q[3];
	nb[50] = q[3];
	nb[51] = q[1];
	res[0] = q[2];
	// Leaf function
	Compute (0, 16, 185, 93, 0, 3, 0) {
		acquire(16, anc, 52, nb);
		CNOT( q[1], anc[6] );
		Toffoli( anc[12], anc[4], anc[13] );
		CNOT( anc[6], anc[10] );
		CNOT( anc[4], anc[14] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[6], anc[2], q[0] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[14], anc[5], anc[8] );
		CNOT( q[1], q[2] );
		Toffoli( anc[13], anc[1], anc[2] );
		Toffoli( anc[14], q[0], anc[13] );
		CNOT( anc[6], anc[11] );
		Toffoli( anc[9], anc[13], anc[14] );
		Toffoli( anc[11], anc[0], anc[1] );
		CNOT( anc[15], anc[0] );
		Toffoli( anc[0], anc[4], anc[3] );
		CNOT( anc[10], q[1] );
		CNOT( anc[15], anc[9] );
		CNOT( anc[11], anc[2] );
		CNOT( q[3], anc[1] );
		Toffoli( anc[0], anc[5], anc[15] );
		Toffoli( anc[10], anc[2], anc[11] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], anc[12] );
		Toffoli( anc[12], anc[6], anc[9] );
		Toffoli( anc[15], q[0], q[3] );
		Toffoli( q[2], anc[13], anc[10] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[11], anc[4], anc[10] );
		CNOT( anc[11], q[2] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[9], anc[3], anc[4] );
		CNOT( anc[2], q[1] );
		Toffoli( q[1], anc[8], anc[14] );
		Toffoli( anc[11], anc[5], q[1] );
		Toffoli( q[1], anc[3], q[3] );
		CNOT( q[2], anc[14] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], anc[5] );
		CNOT( q[2], anc[1] );
		Toffoli( anc[5], anc[8], q[1] );
		Toffoli( anc[11], anc[4], anc[2] );
		Toffoli( anc[5], anc[11], q[2] );
		CNOT( anc[1], anc[5] );
		Toffoli( q[1], anc[1], anc[12] );
		CNOT( anc[8], q[2] );
		Toffoli( anc[13], anc[3], anc[11] );
		CNOT( anc[13], anc[12] );
		CNOT( anc[8], anc[5] );
		Toffoli( anc[10], anc[9], anc[6] );
		Toffoli( q[0], q[2], anc[13] );
		Toffoli( anc[3], anc[4], q[3] );
		Toffoli( anc[10], anc[5], anc[7] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], q[3] );
		CNOT( anc[5], q[0] );
		CNOT( anc[1], anc[4] );
		Toffoli( q[2], anc[10], anc[4] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[10], anc[9], anc[11] );
		Toffoli( q[0], anc[13], anc[3] );
		Toffoli( anc[13], anc[0], anc[15] );
		Toffoli( anc[1], anc[0], anc[15] );
		Toffoli( anc[2], anc[8], q[2] );
		Toffoli( anc[15], anc[8], anc[1] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[2], anc[2], anc[3] );
		CNOT( anc[9], anc[6] );
		CNOT( anc[15], anc[9] );
		Toffoli( anc[2], anc[7], anc[3] );
		Toffoli( q[1], anc[6], anc[7] );
		Toffoli( q[2], anc[9], anc[14] );
		Toffoli( anc[15], q[1], anc[11] );
		CNOT( anc[10], anc[4] );
		Toffoli( anc[9], anc[4], anc[0] );
		Toffoli( anc[6], q[3], q[2] );
		CNOT( anc[9], q[0] );
		Toffoli( q[0], anc[8], anc[10] );
		Toffoli( anc[11], anc[12], anc[3] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[7], anc[11], q[2] );
		Toffoli( anc[8], q[1], anc[7] );
		CNOT( anc[7], anc[4] );
		CNOT( anc[9], anc[1] );
		Toffoli( anc[8], anc[13], anc[4] );
		Toffoli( anc[1], anc[2], anc[15] );
		CNOT( q[0], q[3] );
		Toffoli( anc[15], q[3], anc[8] );
		Toffoli( q[1], anc[7], anc[1] );
		CNOT( anc[13], anc[5] );
		CNOT( anc[7], anc[2] );
	}
	Store {
		CNOT( anc[12], res[0] );
	}
	Uncompute(res, 0, anc, 16, 185, 93){
		CNOT( anc[7], anc[2] );
		CNOT( anc[13], anc[5] );
		Toffoli( q[1], anc[7], anc[1] );
		Toffoli( anc[15], q[3], anc[8] );
		CNOT( q[0], q[3] );
		Toffoli( anc[1], anc[2], anc[15] );
		Toffoli( anc[8], anc[13], anc[4] );
		CNOT( anc[9], anc[1] );
		CNOT( anc[7], anc[4] );
		Toffoli( anc[8], q[1], anc[7] );
		Toffoli( anc[7], anc[11], q[2] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[11], anc[12], anc[3] );
		Toffoli( q[0], anc[8], anc[10] );
		CNOT( anc[9], q[0] );
		Toffoli( anc[6], q[3], q[2] );
		Toffoli( anc[9], anc[4], anc[0] );
		CNOT( anc[10], anc[4] );
		Toffoli( anc[15], q[1], anc[11] );
		Toffoli( q[2], anc[9], anc[14] );
		Toffoli( q[1], anc[6], anc[7] );
		Toffoli( anc[2], anc[7], anc[3] );
		CNOT( anc[15], anc[9] );
		CNOT( anc[9], anc[6] );
		Toffoli( q[2], anc[2], anc[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[15], anc[8], anc[1] );
		Toffoli( anc[2], anc[8], q[2] );
		Toffoli( anc[1], anc[0], anc[15] );
		Toffoli( anc[13], anc[0], anc[15] );
		Toffoli( q[0], anc[13], anc[3] );
		Toffoli( anc[10], anc[9], anc[11] );
		CNOT( q[1], anc[1] );
		Toffoli( q[2], anc[10], anc[4] );
		CNOT( anc[1], anc[4] );
		CNOT( anc[5], q[0] );
		CNOT( anc[1], q[3] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[10], anc[5], anc[7] );
		Toffoli( anc[3], anc[4], q[3] );
		Toffoli( q[0], q[2], anc[13] );
		Toffoli( anc[10], anc[9], anc[6] );
		CNOT( anc[8], anc[5] );
		CNOT( anc[13], anc[12] );
		Toffoli( anc[13], anc[3], anc[11] );
		CNOT( anc[8], q[2] );
		Toffoli( q[1], anc[1], anc[12] );
		CNOT( anc[1], anc[5] );
		Toffoli( anc[5], anc[11], q[2] );
		Toffoli( anc[11], anc[4], anc[2] );
		Toffoli( anc[5], anc[8], q[1] );
		CNOT( q[2], anc[1] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], anc[1] );
		CNOT( q[2], anc[14] );
		Toffoli( q[1], anc[3], q[3] );
		Toffoli( anc[11], anc[5], q[1] );
		Toffoli( q[1], anc[8], anc[14] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[9], anc[3], anc[4] );
		CNOT( anc[0], q[2] );
		CNOT( anc[11], q[2] );
		Toffoli( anc[11], anc[4], anc[10] );
		CNOT( q[1], anc[0] );
		Toffoli( q[2], anc[13], anc[10] );
		Toffoli( anc[15], q[0], q[3] );
		Toffoli( anc[12], anc[6], anc[9] );
		CNOT( q[1], anc[12] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[10], anc[2], anc[11] );
		Toffoli( anc[0], anc[5], anc[15] );
		CNOT( q[3], anc[1] );
		CNOT( anc[11], anc[2] );
		CNOT( anc[15], anc[9] );
		CNOT( anc[10], q[1] );
		Toffoli( anc[0], anc[4], anc[3] );
		CNOT( anc[15], anc[0] );
		Toffoli( anc[11], anc[0], anc[1] );
		Toffoli( anc[9], anc[13], anc[14] );
		CNOT( anc[6], anc[11] );
		Toffoli( anc[14], q[0], anc[13] );
		Toffoli( anc[13], anc[1], anc[2] );
		CNOT( q[1], q[2] );
		Toffoli( anc[14], anc[5], anc[8] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[6], anc[2], q[0] );
		CNOT( anc[0], q[2] );
		CNOT( anc[4], anc[14] );
		CNOT( anc[6], anc[10] );
		Toffoli( anc[12], anc[4], anc[13] );
		CNOT( q[1], anc[6] );
	} Free(anc, 16) {}
}
// Function 14 with degree 0
// nq: 4, na: 16, ng: 92
void func14R(qbit **q, int n) {
printf("func14R\n");
fflush(stderr);
	qbit *anc[16]; // ancilla
	qbit *nb[52]; // interacting bits
	qbit *res[1];
	nb[0] = q[1];
	nb[1] = q[2];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[1];
	nb[5] = q[2];
	nb[6] = q[0];
	nb[7] = q[1];
	nb[8] = q[3];
	nb[9] = q[1];
	nb[10] = q[0];
	nb[11] = q[3];
	nb[12] = q[2];
	nb[13] = q[1];
	nb[14] = q[2];
	nb[15] = q[2];
	nb[16] = q[1];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[1];
	nb[20] = q[3];
	nb[21] = q[2];
	nb[22] = q[2];
	nb[23] = q[1];
	nb[24] = q[2];
	nb[25] = q[1];
	nb[26] = q[2];
	nb[27] = q[0];
	nb[28] = q[2];
	nb[29] = q[3];
	nb[30] = q[1];
	nb[31] = q[3];
	nb[32] = q[0];
	nb[33] = q[2];
	nb[34] = q[1];
	nb[35] = q[0];
	nb[36] = q[2];
	nb[37] = q[2];
	nb[38] = q[1];
	nb[39] = q[2];
	nb[40] = q[1];
	nb[41] = q[3];
	nb[42] = q[2];
	nb[43] = q[0];
	nb[44] = q[0];
	nb[45] = q[0];
	nb[46] = q[2];
	nb[47] = q[1];
	nb[48] = q[0];
	nb[49] = q[3];
	nb[50] = q[3];
	nb[51] = q[1];
	res[0] = q[2];
	// Leaf function
	_computeModule(0, 16, 185, 93, 0, 3, 0);
	acquire(16, anc, 52, nb);
	Recompute (res, 0, anc, 16, 185, 93){
		CNOT( anc[7], anc[2] );
		CNOT( anc[13], anc[5] );
		Toffoli( q[1], anc[7], anc[1] );
		Toffoli( anc[15], q[3], anc[8] );
		CNOT( q[0], q[3] );
		Toffoli( anc[1], anc[2], anc[15] );
		Toffoli( anc[8], anc[13], anc[4] );
		CNOT( anc[9], anc[1] );
		CNOT( anc[7], anc[4] );
		Toffoli( anc[8], q[1], anc[7] );
		Toffoli( anc[7], anc[11], q[2] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[11], anc[12], anc[3] );
		Toffoli( q[0], anc[8], anc[10] );
		CNOT( anc[9], q[0] );
		Toffoli( anc[6], q[3], q[2] );
		Toffoli( anc[9], anc[4], anc[0] );
		CNOT( anc[10], anc[4] );
		Toffoli( anc[15], q[1], anc[11] );
		Toffoli( q[2], anc[9], anc[14] );
		Toffoli( q[1], anc[6], anc[7] );
		Toffoli( anc[2], anc[7], anc[3] );
		CNOT( anc[15], anc[9] );
		CNOT( anc[9], anc[6] );
		Toffoli( q[2], anc[2], anc[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[15], anc[8], anc[1] );
		Toffoli( anc[2], anc[8], q[2] );
		Toffoli( anc[1], anc[0], anc[15] );
		Toffoli( anc[13], anc[0], anc[15] );
		Toffoli( q[0], anc[13], anc[3] );
		Toffoli( anc[10], anc[9], anc[11] );
		CNOT( q[1], anc[1] );
		Toffoli( q[2], anc[10], anc[4] );
		CNOT( anc[1], anc[4] );
		CNOT( anc[5], q[0] );
		CNOT( anc[1], q[3] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[10], anc[5], anc[7] );
		Toffoli( anc[3], anc[4], q[3] );
		Toffoli( q[0], q[2], anc[13] );
		Toffoli( anc[10], anc[9], anc[6] );
		CNOT( anc[8], anc[5] );
		CNOT( anc[13], anc[12] );
		Toffoli( anc[13], anc[3], anc[11] );
		CNOT( anc[8], q[2] );
		Toffoli( q[1], anc[1], anc[12] );
		CNOT( anc[1], anc[5] );
		Toffoli( anc[5], anc[11], q[2] );
		Toffoli( anc[11], anc[4], anc[2] );
		Toffoli( anc[5], anc[8], q[1] );
		CNOT( q[2], anc[1] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], anc[1] );
		CNOT( q[2], anc[14] );
		Toffoli( q[1], anc[3], q[3] );
		Toffoli( anc[11], anc[5], q[1] );
		Toffoli( q[1], anc[8], anc[14] );
		CNOT( anc[2], q[1] );
		Toffoli( anc[9], anc[3], anc[4] );
		CNOT( anc[0], q[2] );
		CNOT( anc[11], q[2] );
		Toffoli( anc[11], anc[4], anc[10] );
		CNOT( q[1], anc[0] );
		Toffoli( q[2], anc[13], anc[10] );
		Toffoli( anc[15], q[0], q[3] );
		Toffoli( anc[12], anc[6], anc[9] );
		CNOT( q[1], anc[12] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[10], anc[2], anc[11] );
		Toffoli( anc[0], anc[5], anc[15] );
		CNOT( q[3], anc[1] );
		CNOT( anc[11], anc[2] );
		CNOT( anc[15], anc[9] );
		CNOT( anc[10], q[1] );
		Toffoli( anc[0], anc[4], anc[3] );
		CNOT( anc[15], anc[0] );
		Toffoli( anc[11], anc[0], anc[1] );
		Toffoli( anc[9], anc[13], anc[14] );
		CNOT( anc[6], anc[11] );
		Toffoli( anc[14], q[0], anc[13] );
		Toffoli( anc[13], anc[1], anc[2] );
		CNOT( q[1], q[2] );
		Toffoli( anc[14], anc[5], anc[8] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[6], anc[2], q[0] );
		CNOT( anc[0], q[2] );
		CNOT( anc[4], anc[14] );
		CNOT( anc[6], anc[10] );
		Toffoli( anc[12], anc[4], anc[13] );
		CNOT( q[1], anc[6] );
	}
	Restore {
		CNOT( anc[12], res[0] );
	}
	Unrecompute {
		CNOT( q[1], anc[6] );
		Toffoli( anc[12], anc[4], anc[13] );
		CNOT( anc[6], anc[10] );
		CNOT( anc[4], anc[14] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[6], anc[2], q[0] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[14], anc[5], anc[8] );
		CNOT( q[1], q[2] );
		Toffoli( anc[13], anc[1], anc[2] );
		Toffoli( anc[14], q[0], anc[13] );
		CNOT( anc[6], anc[11] );
		Toffoli( anc[9], anc[13], anc[14] );
		Toffoli( anc[11], anc[0], anc[1] );
		CNOT( anc[15], anc[0] );
		Toffoli( anc[0], anc[4], anc[3] );
		CNOT( anc[10], q[1] );
		CNOT( anc[15], anc[9] );
		CNOT( anc[11], anc[2] );
		CNOT( q[3], anc[1] );
		Toffoli( anc[0], anc[5], anc[15] );
		Toffoli( anc[10], anc[2], anc[11] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], anc[12] );
		Toffoli( anc[12], anc[6], anc[9] );
		Toffoli( anc[15], q[0], q[3] );
		Toffoli( q[2], anc[13], anc[10] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[11], anc[4], anc[10] );
		CNOT( anc[11], q[2] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[9], anc[3], anc[4] );
		CNOT( anc[2], q[1] );
		Toffoli( q[1], anc[8], anc[14] );
		Toffoli( anc[11], anc[5], q[1] );
		Toffoli( q[1], anc[3], q[3] );
		CNOT( q[2], anc[14] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], anc[5] );
		CNOT( q[2], anc[1] );
		Toffoli( anc[5], anc[8], q[1] );
		Toffoli( anc[11], anc[4], anc[2] );
		Toffoli( anc[5], anc[11], q[2] );
		CNOT( anc[1], anc[5] );
		Toffoli( q[1], anc[1], anc[12] );
		CNOT( anc[8], q[2] );
		Toffoli( anc[13], anc[3], anc[11] );
		CNOT( anc[13], anc[12] );
		CNOT( anc[8], anc[5] );
		Toffoli( anc[10], anc[9], anc[6] );
		Toffoli( q[0], q[2], anc[13] );
		Toffoli( anc[3], anc[4], q[3] );
		Toffoli( anc[10], anc[5], anc[7] );
		CNOT( anc[1], q[1] );
		CNOT( anc[1], q[3] );
		CNOT( anc[5], q[0] );
		CNOT( anc[1], anc[4] );
		Toffoli( q[2], anc[10], anc[4] );
		CNOT( q[1], anc[1] );
		Toffoli( anc[10], anc[9], anc[11] );
		Toffoli( q[0], anc[13], anc[3] );
		Toffoli( anc[13], anc[0], anc[15] );
		Toffoli( anc[1], anc[0], anc[15] );
		Toffoli( anc[2], anc[8], q[2] );
		Toffoli( anc[15], anc[8], anc[1] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[2], anc[2], anc[3] );
		CNOT( anc[9], anc[6] );
		CNOT( anc[15], anc[9] );
		Toffoli( anc[2], anc[7], anc[3] );
		Toffoli( q[1], anc[6], anc[7] );
		Toffoli( q[2], anc[9], anc[14] );
		Toffoli( anc[15], q[1], anc[11] );
		CNOT( anc[10], anc[4] );
		Toffoli( anc[9], anc[4], anc[0] );
		Toffoli( anc[6], q[3], q[2] );
		CNOT( anc[9], q[0] );
		Toffoli( q[0], anc[8], anc[10] );
		Toffoli( anc[11], anc[12], anc[3] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[7], anc[11], q[2] );
		Toffoli( anc[8], q[1], anc[7] );
		CNOT( anc[7], anc[4] );
		CNOT( anc[9], anc[1] );
		Toffoli( anc[8], anc[13], anc[4] );
		Toffoli( anc[1], anc[2], anc[15] );
		CNOT( q[0], q[3] );
		Toffoli( anc[15], q[3], anc[8] );
		Toffoli( q[1], anc[7], anc[1] );
		CNOT( anc[13], anc[5] );
		CNOT( anc[7], anc[2] );
	} Refree(anc, 16) {}
}
// Function 13 with degree 0
// nq: 4, na: 1, ng: 103
void func13(qbit **q, int n) {
printf("func13\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[193]; // interacting bits
	qbit *res[1];
	nb[0] = q[1];
	nb[1] = q[3];
	nb[2] = q[0];
	nb[3] = q[1];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[1];
	nb[7] = q[3];
	nb[8] = q[0];
	nb[9] = q[2];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[2];
	nb[13] = q[1];
	nb[14] = q[2];
	nb[15] = q[3];
	nb[16] = q[1];
	nb[17] = q[2];
	nb[18] = q[0];
	nb[19] = q[3];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[3];
	nb[23] = q[0];
	nb[24] = q[3];
	nb[25] = q[2];
	nb[26] = q[3];
	nb[27] = q[2];
	nb[28] = q[0];
	nb[29] = q[2];
	nb[30] = q[1];
	nb[31] = q[0];
	nb[32] = q[3];
	nb[33] = q[2];
	nb[34] = q[2];
	nb[35] = q[0];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[3];
	nb[39] = q[1];
	nb[40] = q[0];
	nb[41] = q[0];
	nb[42] = q[2];
	nb[43] = q[0];
	nb[44] = q[1];
	nb[45] = q[0];
	nb[46] = q[1];
	nb[47] = q[2];
	nb[48] = q[0];
	nb[49] = q[3];
	nb[50] = q[1];
	nb[51] = q[2];
	nb[52] = q[3];
	nb[53] = q[2];
	nb[54] = q[3];
	nb[55] = q[2];
	nb[56] = q[2];
	nb[57] = q[3];
	nb[58] = q[1];
	nb[59] = q[1];
	nb[60] = q[3];
	nb[61] = q[1];
	nb[62] = q[0];
	nb[63] = q[1];
	nb[64] = q[3];
	nb[65] = q[0];
	nb[66] = q[0];
	nb[67] = q[3];
	nb[68] = q[3];
	nb[69] = q[1];
	nb[70] = q[0];
	nb[71] = q[2];
	nb[72] = q[1];
	nb[73] = q[2];
	nb[74] = q[2];
	nb[75] = q[2];
	nb[76] = q[2];
	nb[77] = q[3];
	nb[78] = q[3];
	nb[79] = q[0];
	nb[80] = q[2];
	nb[81] = q[0];
	nb[82] = q[2];
	nb[83] = q[0];
	nb[84] = q[3];
	nb[85] = q[1];
	nb[86] = q[3];
	nb[87] = q[0];
	nb[88] = q[3];
	nb[89] = q[1];
	nb[90] = q[0];
	nb[91] = q[3];
	nb[92] = q[2];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[1];
	nb[96] = q[3];
	nb[97] = q[0];
	nb[98] = q[2];
	nb[99] = q[2];
	nb[100] = q[3];
	nb[101] = q[2];
	nb[102] = q[0];
	nb[103] = q[2];
	nb[104] = q[3];
	nb[105] = q[1];
	nb[106] = q[1];
	nb[107] = q[0];
	nb[108] = q[0];
	nb[109] = q[2];
	nb[110] = q[3];
	nb[111] = q[2];
	nb[112] = q[0];
	nb[113] = q[1];
	nb[114] = q[2];
	nb[115] = q[0];
	nb[116] = q[0];
	nb[117] = q[3];
	nb[118] = q[0];
	nb[119] = q[1];
	nb[120] = q[2];
	nb[121] = q[1];
	nb[122] = q[2];
	nb[123] = q[0];
	nb[124] = q[3];
	nb[125] = q[3];
	nb[126] = q[0];
	nb[127] = q[2];
	nb[128] = q[2];
	nb[129] = q[0];
	nb[130] = q[0];
	nb[131] = q[3];
	nb[132] = q[2];
	nb[133] = q[2];
	nb[134] = q[0];
	nb[135] = q[3];
	nb[136] = q[0];
	nb[137] = q[0];
	nb[138] = q[2];
	nb[139] = q[2];
	nb[140] = q[0];
	nb[141] = q[3];
	nb[142] = q[2];
	nb[143] = q[0];
	nb[144] = q[2];
	nb[145] = q[1];
	nb[146] = q[0];
	nb[147] = q[1];
	nb[148] = q[2];
	nb[149] = q[1];
	nb[150] = q[3];
	nb[151] = q[1];
	nb[152] = q[1];
	nb[153] = q[2];
	nb[154] = q[3];
	nb[155] = q[1];
	nb[156] = q[0];
	nb[157] = q[3];
	nb[158] = q[1];
	nb[159] = q[0];
	nb[160] = q[2];
	nb[161] = q[1];
	nb[162] = q[0];
	nb[163] = q[2];
	nb[164] = q[3];
	nb[165] = q[2];
	nb[166] = q[1];
	nb[167] = q[0];
	nb[168] = q[0];
	nb[169] = q[1];
	nb[170] = q[2];
	nb[171] = q[1];
	nb[172] = q[0];
	nb[173] = q[2];
	nb[174] = q[0];
	nb[175] = q[1];
	nb[176] = q[3];
	nb[177] = q[2];
	nb[178] = q[3];
	nb[179] = q[2];
	nb[180] = q[3];
	nb[181] = q[3];
	nb[182] = q[0];
	nb[183] = q[1];
	nb[184] = q[2];
	nb[185] = q[3];
	nb[186] = q[2];
	nb[187] = q[0];
	nb[188] = q[1];
	nb[189] = q[0];
	nb[190] = q[1];
	nb[191] = q[1];
	nb[192] = q[2];
	res[0] = q[1];
	// Leaf function
	Compute (0, 1, 207, 104, 0, 3, 0) {
		acquire(1, anc, 193, nb);
		Toffoli( q[1], q[3], q[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[2], q[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[1], q[2] );
		Toffoli( q[3], q[1], anc[0] );
		Toffoli( anc[0], q[2], q[0] );
		Toffoli( q[3], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[0], q[3], anc[0] );
		CNOT( q[2], q[3] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( q[2], q[0], anc[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[3], q[1], q[0] );
		CNOT( q[0], q[2] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], q[0], anc[0] );
		CNOT( q[0], q[3] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[2], q[1] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[1], anc[0], q[3] );
		CNOT( anc[0], q[0] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[1], q[3], anc[0] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[2], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], q[2] );
		CNOT( q[3], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[0], q[2] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[3] );
		CNOT( q[0], q[1] );
		CNOT( q[2], anc[0] );
		CNOT( q[1], q[2] );
		CNOT( q[0], q[3] );
		Toffoli( q[3], q[0], q[2] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[3], q[0] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[2], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[1], q[2] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[1], q[0], q[2] );
		Toffoli( q[3], q[2], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[0], q[2], q[1] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], q[2], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( q[2], q[3], anc[0] );
		CNOT( q[3], q[0] );
		CNOT( q[1], q[2] );
		Toffoli( q[3], anc[0], q[2] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[2] );
	}
	Store {
		CNOT( q[0], res[0] );
	}
	Uncompute(res, 0, anc, 1, 207, 104){
		CNOT( q[1], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[1], q[2] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], q[3], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( q[3], q[2], anc[0] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( anc[0], q[2], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[2], q[1] );
		Toffoli( q[1], q[0], q[2] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[1], q[2] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[2], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( anc[0], q[3], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[2], anc[0], q[0] );
		Toffoli( q[3], q[0], q[2] );
		CNOT( q[0], q[3] );
		CNOT( q[1], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[3] );
		CNOT( anc[0], q[0] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[0], q[2] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[3], q[1] );
		CNOT( q[0], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], q[3] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[1], q[3], anc[0] );
		Toffoli( q[2], q[1], q[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], anc[0], q[3] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[2], q[0], anc[0] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		Toffoli( q[0], q[2], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[3], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[3], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[2], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[0], q[2] );
		Toffoli( q[3], q[1], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( q[2], q[1], q[0] );
		CNOT( q[2], q[0] );
		CNOT( q[2], q[3] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[3], q[0], anc[0] );
		Toffoli( anc[0], q[2], q[0] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[1], q[3] );
		CNOT( q[2], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[3], q[0] );
	} Free(anc, 1) {}
}
// Function 13 with degree 0
// nq: 4, na: 1, ng: 103
void func13R(qbit **q, int n) {
printf("func13R\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[193]; // interacting bits
	qbit *res[1];
	nb[0] = q[1];
	nb[1] = q[3];
	nb[2] = q[0];
	nb[3] = q[1];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[1];
	nb[7] = q[3];
	nb[8] = q[0];
	nb[9] = q[2];
	nb[10] = q[1];
	nb[11] = q[0];
	nb[12] = q[2];
	nb[13] = q[1];
	nb[14] = q[2];
	nb[15] = q[3];
	nb[16] = q[1];
	nb[17] = q[2];
	nb[18] = q[0];
	nb[19] = q[3];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[3];
	nb[23] = q[0];
	nb[24] = q[3];
	nb[25] = q[2];
	nb[26] = q[3];
	nb[27] = q[2];
	nb[28] = q[0];
	nb[29] = q[2];
	nb[30] = q[1];
	nb[31] = q[0];
	nb[32] = q[3];
	nb[33] = q[2];
	nb[34] = q[2];
	nb[35] = q[0];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[3];
	nb[39] = q[1];
	nb[40] = q[0];
	nb[41] = q[0];
	nb[42] = q[2];
	nb[43] = q[0];
	nb[44] = q[1];
	nb[45] = q[0];
	nb[46] = q[1];
	nb[47] = q[2];
	nb[48] = q[0];
	nb[49] = q[3];
	nb[50] = q[1];
	nb[51] = q[2];
	nb[52] = q[3];
	nb[53] = q[2];
	nb[54] = q[3];
	nb[55] = q[2];
	nb[56] = q[2];
	nb[57] = q[3];
	nb[58] = q[1];
	nb[59] = q[1];
	nb[60] = q[3];
	nb[61] = q[1];
	nb[62] = q[0];
	nb[63] = q[1];
	nb[64] = q[3];
	nb[65] = q[0];
	nb[66] = q[0];
	nb[67] = q[3];
	nb[68] = q[3];
	nb[69] = q[1];
	nb[70] = q[0];
	nb[71] = q[2];
	nb[72] = q[1];
	nb[73] = q[2];
	nb[74] = q[2];
	nb[75] = q[2];
	nb[76] = q[2];
	nb[77] = q[3];
	nb[78] = q[3];
	nb[79] = q[0];
	nb[80] = q[2];
	nb[81] = q[0];
	nb[82] = q[2];
	nb[83] = q[0];
	nb[84] = q[3];
	nb[85] = q[1];
	nb[86] = q[3];
	nb[87] = q[0];
	nb[88] = q[3];
	nb[89] = q[1];
	nb[90] = q[0];
	nb[91] = q[3];
	nb[92] = q[2];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[1];
	nb[96] = q[3];
	nb[97] = q[0];
	nb[98] = q[2];
	nb[99] = q[2];
	nb[100] = q[3];
	nb[101] = q[2];
	nb[102] = q[0];
	nb[103] = q[2];
	nb[104] = q[3];
	nb[105] = q[1];
	nb[106] = q[1];
	nb[107] = q[0];
	nb[108] = q[0];
	nb[109] = q[2];
	nb[110] = q[3];
	nb[111] = q[2];
	nb[112] = q[0];
	nb[113] = q[1];
	nb[114] = q[2];
	nb[115] = q[0];
	nb[116] = q[0];
	nb[117] = q[3];
	nb[118] = q[0];
	nb[119] = q[1];
	nb[120] = q[2];
	nb[121] = q[1];
	nb[122] = q[2];
	nb[123] = q[0];
	nb[124] = q[3];
	nb[125] = q[3];
	nb[126] = q[0];
	nb[127] = q[2];
	nb[128] = q[2];
	nb[129] = q[0];
	nb[130] = q[0];
	nb[131] = q[3];
	nb[132] = q[2];
	nb[133] = q[2];
	nb[134] = q[0];
	nb[135] = q[3];
	nb[136] = q[0];
	nb[137] = q[0];
	nb[138] = q[2];
	nb[139] = q[2];
	nb[140] = q[0];
	nb[141] = q[3];
	nb[142] = q[2];
	nb[143] = q[0];
	nb[144] = q[2];
	nb[145] = q[1];
	nb[146] = q[0];
	nb[147] = q[1];
	nb[148] = q[2];
	nb[149] = q[1];
	nb[150] = q[3];
	nb[151] = q[1];
	nb[152] = q[1];
	nb[153] = q[2];
	nb[154] = q[3];
	nb[155] = q[1];
	nb[156] = q[0];
	nb[157] = q[3];
	nb[158] = q[1];
	nb[159] = q[0];
	nb[160] = q[2];
	nb[161] = q[1];
	nb[162] = q[0];
	nb[163] = q[2];
	nb[164] = q[3];
	nb[165] = q[2];
	nb[166] = q[1];
	nb[167] = q[0];
	nb[168] = q[0];
	nb[169] = q[1];
	nb[170] = q[2];
	nb[171] = q[1];
	nb[172] = q[0];
	nb[173] = q[2];
	nb[174] = q[0];
	nb[175] = q[1];
	nb[176] = q[3];
	nb[177] = q[2];
	nb[178] = q[3];
	nb[179] = q[2];
	nb[180] = q[3];
	nb[181] = q[3];
	nb[182] = q[0];
	nb[183] = q[1];
	nb[184] = q[2];
	nb[185] = q[3];
	nb[186] = q[2];
	nb[187] = q[0];
	nb[188] = q[1];
	nb[189] = q[0];
	nb[190] = q[1];
	nb[191] = q[1];
	nb[192] = q[2];
	res[0] = q[1];
	// Leaf function
	_computeModule(0, 1, 207, 104, 0, 3, 0);
	acquire(1, anc, 193, nb);
	Recompute (res, 0, anc, 1, 207, 104){
		CNOT( q[1], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[1], q[2] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], q[3], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( q[3], q[2], anc[0] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( anc[0], q[2], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[2], q[1] );
		Toffoli( q[1], q[0], q[2] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[1], q[2] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[2], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( anc[0], q[3], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[2], anc[0], q[0] );
		Toffoli( q[3], q[0], q[2] );
		CNOT( q[0], q[3] );
		CNOT( q[1], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[3] );
		CNOT( anc[0], q[0] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[0], q[2] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[3], q[1] );
		CNOT( q[0], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], q[3] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[1], q[3], anc[0] );
		Toffoli( q[2], q[1], q[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[1], anc[0], q[3] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[2], q[0], anc[0] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		Toffoli( q[0], q[2], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[3], q[0], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[3], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[2], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[0], q[2] );
		Toffoli( q[3], q[1], q[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( q[2], q[1], q[0] );
		CNOT( q[2], q[0] );
		CNOT( q[2], q[3] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[3], q[0], anc[0] );
		Toffoli( anc[0], q[2], q[0] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[1], q[3] );
		CNOT( q[2], q[1] );
		CNOT( q[1], anc[0] );
		Toffoli( q[1], q[3], q[0] );
	}
	Restore {
		CNOT( q[0], res[0] );
	}
	Unrecompute {
		Toffoli( q[1], q[3], q[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[2], q[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[1], q[2] );
		Toffoli( q[3], q[1], anc[0] );
		Toffoli( anc[0], q[2], q[0] );
		Toffoli( q[3], q[0], anc[0] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[0], q[3], anc[0] );
		CNOT( q[2], q[3] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( q[2], q[0], anc[0] );
		CNOT( q[1], q[0] );
		Toffoli( q[3], q[1], q[0] );
		CNOT( q[0], q[2] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], q[0], anc[0] );
		CNOT( q[0], q[3] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], anc[0] );
		Toffoli( q[0], q[2], q[1] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[1], anc[0], q[3] );
		CNOT( anc[0], q[0] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[1], q[3], anc[0] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[2], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], q[2] );
		CNOT( q[3], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[0], q[2] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], q[3] );
		CNOT( q[0], q[1] );
		CNOT( q[2], anc[0] );
		CNOT( q[1], q[2] );
		CNOT( q[0], q[3] );
		Toffoli( q[3], q[0], q[2] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[3], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[3], q[0] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[2], q[0], q[3] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[2], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[1], q[2] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[1], anc[0] );
		Toffoli( q[0], anc[0], q[2] );
		Toffoli( q[1], q[0], q[2] );
		Toffoli( q[3], q[2], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[0], q[2], q[1] );
		Toffoli( q[0], anc[0], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], q[2], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( q[2], q[3], anc[0] );
		CNOT( q[3], q[0] );
		CNOT( q[1], q[2] );
		Toffoli( q[3], anc[0], q[2] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[2] );
	} Refree(anc, 1) {}
}
// Function 12 with degree 0
// nq: 4, na: 1, ng: 107
void func12(qbit **q, int n) {
printf("func12\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[211]; // interacting bits
	qbit *res[4];
	nb[0] = q[2];
	nb[1] = q[0];
	nb[2] = q[3];
	nb[3] = q[2];
	nb[4] = q[3];
	nb[5] = q[2];
	nb[6] = q[3];
	nb[7] = q[1];
	nb[8] = q[2];
	nb[9] = q[0];
	nb[10] = q[2];
	nb[11] = q[1];
	nb[12] = q[1];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[2];
	nb[16] = q[2];
	nb[17] = q[0];
	nb[18] = q[2];
	nb[19] = q[3];
	nb[20] = q[0];
	nb[21] = q[3];
	nb[22] = q[2];
	nb[23] = q[0];
	nb[24] = q[1];
	nb[25] = q[0];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[1];
	nb[29] = q[2];
	nb[30] = q[2];
	nb[31] = q[1];
	nb[32] = q[0];
	nb[33] = q[3];
	nb[34] = q[2];
	nb[35] = q[2];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[3];
	nb[39] = q[1];
	nb[40] = q[2];
	nb[41] = q[0];
	nb[42] = q[1];
	nb[43] = q[2];
	nb[44] = q[1];
	nb[45] = q[2];
	nb[46] = q[2];
	nb[47] = q[0];
	nb[48] = q[3];
	nb[49] = q[2];
	nb[50] = q[2];
	nb[51] = q[1];
	nb[52] = q[2];
	nb[53] = q[1];
	nb[54] = q[3];
	nb[55] = q[3];
	nb[56] = q[1];
	nb[57] = q[2];
	nb[58] = q[3];
	nb[59] = q[2];
	nb[60] = q[3];
	nb[61] = q[0];
	nb[62] = q[1];
	nb[63] = q[1];
	nb[64] = q[2];
	nb[65] = q[3];
	nb[66] = q[3];
	nb[67] = q[1];
	nb[68] = q[2];
	nb[69] = q[3];
	nb[70] = q[2];
	nb[71] = q[1];
	nb[72] = q[3];
	nb[73] = q[3];
	nb[74] = q[1];
	nb[75] = q[1];
	nb[76] = q[2];
	nb[77] = q[0];
	nb[78] = q[1];
	nb[79] = q[2];
	nb[80] = q[3];
	nb[81] = q[2];
	nb[82] = q[0];
	nb[83] = q[2];
	nb[84] = q[0];
	nb[85] = q[3];
	nb[86] = q[0];
	nb[87] = q[2];
	nb[88] = q[0];
	nb[89] = q[0];
	nb[90] = q[2];
	nb[91] = q[0];
	nb[92] = q[0];
	nb[93] = q[3];
	nb[94] = q[1];
	nb[95] = q[2];
	nb[96] = q[3];
	nb[97] = q[0];
	nb[98] = q[3];
	nb[99] = q[3];
	nb[100] = q[1];
	nb[101] = q[3];
	nb[102] = q[0];
	nb[103] = q[1];
	nb[104] = q[2];
	nb[105] = q[2];
	nb[106] = q[0];
	nb[107] = q[3];
	nb[108] = q[0];
	nb[109] = q[2];
	nb[110] = q[0];
	nb[111] = q[2];
	nb[112] = q[3];
	nb[113] = q[2];
	nb[114] = q[3];
	nb[115] = q[1];
	nb[116] = q[1];
	nb[117] = q[0];
	nb[118] = q[1];
	nb[119] = q[0];
	nb[120] = q[1];
	nb[121] = q[0];
	nb[122] = q[1];
	nb[123] = q[0];
	nb[124] = q[1];
	nb[125] = q[1];
	nb[126] = q[3];
	nb[127] = q[0];
	nb[128] = q[3];
	nb[129] = q[1];
	nb[130] = q[3];
	nb[131] = q[2];
	nb[132] = q[1];
	nb[133] = q[3];
	nb[134] = q[2];
	nb[135] = q[1];
	nb[136] = q[0];
	nb[137] = q[1];
	nb[138] = q[3];
	nb[139] = q[1];
	nb[140] = q[2];
	nb[141] = q[1];
	nb[142] = q[3];
	nb[143] = q[1];
	nb[144] = q[1];
	nb[145] = q[2];
	nb[146] = q[0];
	nb[147] = q[0];
	nb[148] = q[2];
	nb[149] = q[2];
	nb[150] = q[0];
	nb[151] = q[1];
	nb[152] = q[2];
	nb[153] = q[0];
	nb[154] = q[2];
	nb[155] = q[3];
	nb[156] = q[1];
	nb[157] = q[0];
	nb[158] = q[0];
	nb[159] = q[2];
	nb[160] = q[1];
	nb[161] = q[0];
	nb[162] = q[2];
	nb[163] = q[0];
	nb[164] = q[3];
	nb[165] = q[1];
	nb[166] = q[3];
	nb[167] = q[0];
	nb[168] = q[1];
	nb[169] = q[2];
	nb[170] = q[3];
	nb[171] = q[0];
	nb[172] = q[1];
	nb[173] = q[2];
	nb[174] = q[1];
	nb[175] = q[0];
	nb[176] = q[1];
	nb[177] = q[1];
	nb[178] = q[0];
	nb[179] = q[1];
	nb[180] = q[2];
	nb[181] = q[3];
	nb[182] = q[0];
	nb[183] = q[0];
	nb[184] = q[2];
	nb[185] = q[2];
	nb[186] = q[1];
	nb[187] = q[3];
	nb[188] = q[0];
	nb[189] = q[3];
	nb[190] = q[2];
	nb[191] = q[1];
	nb[192] = q[2];
	nb[193] = q[2];
	nb[194] = q[3];
	nb[195] = q[1];
	nb[196] = q[3];
	nb[197] = q[0];
	nb[198] = q[2];
	nb[199] = q[1];
	nb[200] = q[0];
	nb[201] = q[3];
	nb[202] = q[2];
	nb[203] = q[1];
	nb[204] = q[3];
	nb[205] = q[1];
	nb[206] = q[2];
	nb[207] = q[1];
	nb[208] = q[3];
	nb[209] = q[3];
	nb[210] = q[1];
	res[0] = q[2];
	res[1] = q[1];
	res[2] = q[3];
	res[3] = q[0];
	// Leaf function
	Compute (0, 1, 218, 111, 0, 3, 0) {
		acquire(1, anc, 211, nb);
		Toffoli( q[2], q[0], q[3] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[3], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[2], q[1] );
		Toffoli( anc[0], q[1], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( anc[0], q[2] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[0], q[3], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], q[2] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[2], q[1], anc[0] );
		Toffoli( q[0], q[3], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( q[1], anc[0], q[2] );
		CNOT( q[1], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[2], q[3] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[3], anc[0] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[3], anc[0], q[1] );
		Toffoli( q[1], q[2], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], q[0] );
		CNOT( q[2], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[3], q[0], q[2] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[0], q[3], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[0], q[3], anc[0] );
		CNOT( q[3], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[0], q[1], q[2] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[2], q[3], anc[0] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[3] );
		CNOT( q[0], q[3] );
		Toffoli( q[1], q[3], anc[0] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[2], q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[3], q[1] );
		CNOT( q[2], q[1] );
		Toffoli( q[3], q[1], anc[0] );
		Toffoli( q[1], q[2], q[0] );
		Toffoli( anc[0], q[0], q[2] );
		Toffoli( q[2], q[0], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[2], q[1] );
		Toffoli( q[0], q[2], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[1], q[3], q[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], q[2] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], q[2], anc[0] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( q[0], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( anc[0], q[3], q[0] );
		CNOT( anc[0], q[2] );
		Toffoli( q[1], q[0], q[3] );
		CNOT( q[2], q[1] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], q[3] );
		CNOT( anc[0], q[1] );
	}
	Store {
		CNOT( anc[0], res[0] );
		CNOT( q[0], res[1] );
		CNOT( anc[0], res[2] );
		CNOT( q[2], res[3] );
	}
	Uncompute(res, 0, anc, 1, 218, 111){
		CNOT( anc[0], q[1] );
		CNOT( anc[0], q[3] );
		CNOT( q[1], q[3] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[2], q[1] );
		Toffoli( q[1], q[0], q[3] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[0], q[3], q[0] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[1], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[0], q[2], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], q[2] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], q[2], q[3] );
		Toffoli( q[1], q[3], q[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[0], q[2], anc[0] );
		Toffoli( q[0], q[2], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[0], q[1] );
		Toffoli( anc[0], q[0], q[2] );
		Toffoli( q[1], q[2], q[0] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[2], q[1] );
		CNOT( q[3], q[1] );
		CNOT( anc[0], q[1] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[1], q[3], anc[0] );
		CNOT( q[0], q[3] );
		CNOT( anc[0], q[3] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( q[2], q[3], anc[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[0], q[1], q[2] );
		CNOT( anc[0], q[3] );
		CNOT( q[3], q[1] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[0], q[3], q[1] );
		CNOT( q[2], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[0], q[2] );
		CNOT( anc[0], q[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], q[2], q[0] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[2], q[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( q[3], q[2] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( q[1], anc[0], q[2] );
		CNOT( q[2], q[0] );
		Toffoli( q[0], q[3], q[1] );
		Toffoli( q[2], q[1], anc[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[0], q[1], q[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], q[3], q[2] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( q[2], q[0] );
		CNOT( anc[0], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], q[1], q[3] );
		CNOT( q[2], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[3], q[1] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[2], q[0], q[3] );
	} Free(anc, 1) {}
}
// Function 12 with degree 0
// nq: 4, na: 1, ng: 107
void func12R(qbit **q, int n) {
printf("func12R\n");
fflush(stderr);
	qbit *anc[1]; // ancilla
	qbit *nb[211]; // interacting bits
	qbit *res[4];
	nb[0] = q[2];
	nb[1] = q[0];
	nb[2] = q[3];
	nb[3] = q[2];
	nb[4] = q[3];
	nb[5] = q[2];
	nb[6] = q[3];
	nb[7] = q[1];
	nb[8] = q[2];
	nb[9] = q[0];
	nb[10] = q[2];
	nb[11] = q[1];
	nb[12] = q[1];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[2];
	nb[16] = q[2];
	nb[17] = q[0];
	nb[18] = q[2];
	nb[19] = q[3];
	nb[20] = q[0];
	nb[21] = q[3];
	nb[22] = q[2];
	nb[23] = q[0];
	nb[24] = q[1];
	nb[25] = q[0];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[1];
	nb[29] = q[2];
	nb[30] = q[2];
	nb[31] = q[1];
	nb[32] = q[0];
	nb[33] = q[3];
	nb[34] = q[2];
	nb[35] = q[2];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[3];
	nb[39] = q[1];
	nb[40] = q[2];
	nb[41] = q[0];
	nb[42] = q[1];
	nb[43] = q[2];
	nb[44] = q[1];
	nb[45] = q[2];
	nb[46] = q[2];
	nb[47] = q[0];
	nb[48] = q[3];
	nb[49] = q[2];
	nb[50] = q[2];
	nb[51] = q[1];
	nb[52] = q[2];
	nb[53] = q[1];
	nb[54] = q[3];
	nb[55] = q[3];
	nb[56] = q[1];
	nb[57] = q[2];
	nb[58] = q[3];
	nb[59] = q[2];
	nb[60] = q[3];
	nb[61] = q[0];
	nb[62] = q[1];
	nb[63] = q[1];
	nb[64] = q[2];
	nb[65] = q[3];
	nb[66] = q[3];
	nb[67] = q[1];
	nb[68] = q[2];
	nb[69] = q[3];
	nb[70] = q[2];
	nb[71] = q[1];
	nb[72] = q[3];
	nb[73] = q[3];
	nb[74] = q[1];
	nb[75] = q[1];
	nb[76] = q[2];
	nb[77] = q[0];
	nb[78] = q[1];
	nb[79] = q[2];
	nb[80] = q[3];
	nb[81] = q[2];
	nb[82] = q[0];
	nb[83] = q[2];
	nb[84] = q[0];
	nb[85] = q[3];
	nb[86] = q[0];
	nb[87] = q[2];
	nb[88] = q[0];
	nb[89] = q[0];
	nb[90] = q[2];
	nb[91] = q[0];
	nb[92] = q[0];
	nb[93] = q[3];
	nb[94] = q[1];
	nb[95] = q[2];
	nb[96] = q[3];
	nb[97] = q[0];
	nb[98] = q[3];
	nb[99] = q[3];
	nb[100] = q[1];
	nb[101] = q[3];
	nb[102] = q[0];
	nb[103] = q[1];
	nb[104] = q[2];
	nb[105] = q[2];
	nb[106] = q[0];
	nb[107] = q[3];
	nb[108] = q[0];
	nb[109] = q[2];
	nb[110] = q[0];
	nb[111] = q[2];
	nb[112] = q[3];
	nb[113] = q[2];
	nb[114] = q[3];
	nb[115] = q[1];
	nb[116] = q[1];
	nb[117] = q[0];
	nb[118] = q[1];
	nb[119] = q[0];
	nb[120] = q[1];
	nb[121] = q[0];
	nb[122] = q[1];
	nb[123] = q[0];
	nb[124] = q[1];
	nb[125] = q[1];
	nb[126] = q[3];
	nb[127] = q[0];
	nb[128] = q[3];
	nb[129] = q[1];
	nb[130] = q[3];
	nb[131] = q[2];
	nb[132] = q[1];
	nb[133] = q[3];
	nb[134] = q[2];
	nb[135] = q[1];
	nb[136] = q[0];
	nb[137] = q[1];
	nb[138] = q[3];
	nb[139] = q[1];
	nb[140] = q[2];
	nb[141] = q[1];
	nb[142] = q[3];
	nb[143] = q[1];
	nb[144] = q[1];
	nb[145] = q[2];
	nb[146] = q[0];
	nb[147] = q[0];
	nb[148] = q[2];
	nb[149] = q[2];
	nb[150] = q[0];
	nb[151] = q[1];
	nb[152] = q[2];
	nb[153] = q[0];
	nb[154] = q[2];
	nb[155] = q[3];
	nb[156] = q[1];
	nb[157] = q[0];
	nb[158] = q[0];
	nb[159] = q[2];
	nb[160] = q[1];
	nb[161] = q[0];
	nb[162] = q[2];
	nb[163] = q[0];
	nb[164] = q[3];
	nb[165] = q[1];
	nb[166] = q[3];
	nb[167] = q[0];
	nb[168] = q[1];
	nb[169] = q[2];
	nb[170] = q[3];
	nb[171] = q[0];
	nb[172] = q[1];
	nb[173] = q[2];
	nb[174] = q[1];
	nb[175] = q[0];
	nb[176] = q[1];
	nb[177] = q[1];
	nb[178] = q[0];
	nb[179] = q[1];
	nb[180] = q[2];
	nb[181] = q[3];
	nb[182] = q[0];
	nb[183] = q[0];
	nb[184] = q[2];
	nb[185] = q[2];
	nb[186] = q[1];
	nb[187] = q[3];
	nb[188] = q[0];
	nb[189] = q[3];
	nb[190] = q[2];
	nb[191] = q[1];
	nb[192] = q[2];
	nb[193] = q[2];
	nb[194] = q[3];
	nb[195] = q[1];
	nb[196] = q[3];
	nb[197] = q[0];
	nb[198] = q[2];
	nb[199] = q[1];
	nb[200] = q[0];
	nb[201] = q[3];
	nb[202] = q[2];
	nb[203] = q[1];
	nb[204] = q[3];
	nb[205] = q[1];
	nb[206] = q[2];
	nb[207] = q[1];
	nb[208] = q[3];
	nb[209] = q[3];
	nb[210] = q[1];
	res[0] = q[2];
	res[1] = q[1];
	res[2] = q[3];
	res[3] = q[0];
	// Leaf function
	_computeModule(0, 1, 218, 111, 0, 3, 0);
	acquire(1, anc, 211, nb);
	Recompute (res, 0, anc, 1, 218, 111){
		CNOT( anc[0], q[1] );
		CNOT( anc[0], q[3] );
		CNOT( q[1], q[3] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[2], q[1] );
		Toffoli( q[1], q[0], q[3] );
		CNOT( anc[0], q[2] );
		Toffoli( anc[0], q[3], q[0] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[1], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[0], q[2], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[1], q[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], q[2] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], q[2], q[3] );
		Toffoli( q[1], q[3], q[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[0], q[2], anc[0] );
		Toffoli( q[0], q[2], q[1] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[0], q[1] );
		Toffoli( anc[0], q[0], q[2] );
		Toffoli( q[1], q[2], q[0] );
		Toffoli( q[3], q[1], anc[0] );
		CNOT( q[2], q[1] );
		CNOT( q[3], q[1] );
		CNOT( anc[0], q[1] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[1], q[3], anc[0] );
		CNOT( q[0], q[3] );
		CNOT( anc[0], q[3] );
		CNOT( q[1], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( q[2], q[3], anc[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[0], q[1], q[2] );
		CNOT( anc[0], q[3] );
		CNOT( q[3], q[1] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[0], q[3], q[1] );
		CNOT( q[2], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[0], q[2] );
		CNOT( anc[0], q[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], q[2], q[0] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[2], q[3] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( anc[0], q[3], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( q[3], q[2] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( q[1], anc[0], q[2] );
		CNOT( q[2], q[0] );
		Toffoli( q[0], q[3], q[1] );
		Toffoli( q[2], q[1], anc[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( q[0], q[1], q[2] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], q[3], q[2] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( q[2], q[0] );
		CNOT( anc[0], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], q[1], q[3] );
		CNOT( q[2], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[3], q[1] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[2], q[0], q[3] );
	}
	Restore {
		CNOT( anc[0], res[0] );
		CNOT( q[0], res[1] );
		CNOT( anc[0], res[2] );
		CNOT( q[2], res[3] );
	}
	Unrecompute {
		Toffoli( q[2], q[0], q[3] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[3], q[1] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[2], q[1] );
		Toffoli( anc[0], q[1], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( anc[0], q[2] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[0], q[3], q[2] );
		CNOT( q[0], q[1] );
		Toffoli( q[0], anc[0], q[1] );
		Toffoli( q[0], q[1], q[2] );
		Toffoli( q[2], q[1], q[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[2], q[1], anc[0] );
		Toffoli( q[0], q[3], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( q[1], anc[0], q[2] );
		CNOT( q[1], q[2] );
		CNOT( q[2], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[2], q[3] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[3], anc[0] );
		Toffoli( q[2], anc[0], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[3], anc[0], q[1] );
		Toffoli( q[1], q[2], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		CNOT( q[2], q[0] );
		CNOT( q[2], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[3], q[0], q[2] );
		CNOT( q[0], anc[0] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[0], q[3], q[1] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[0], q[3], anc[0] );
		CNOT( q[3], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[0], q[1], q[2] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[2], q[3], anc[0] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[0], q[1] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[1], anc[0] );
		CNOT( anc[0], q[3] );
		CNOT( q[0], q[3] );
		Toffoli( q[1], q[3], anc[0] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[2], q[1], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[3], q[1] );
		CNOT( q[2], q[1] );
		Toffoli( q[3], q[1], anc[0] );
		Toffoli( q[1], q[2], q[0] );
		Toffoli( anc[0], q[0], q[2] );
		Toffoli( q[2], q[0], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[0], q[2], q[1] );
		Toffoli( q[0], q[2], anc[0] );
		CNOT( q[0], q[3] );
		Toffoli( q[1], q[3], q[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[0], anc[0] );
		CNOT( q[1], q[2] );
		CNOT( q[1], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], q[2], anc[0] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( q[0], q[3] );
		CNOT( q[2], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( anc[0], q[3], q[0] );
		CNOT( anc[0], q[2] );
		Toffoli( q[1], q[0], q[3] );
		CNOT( q[2], q[1] );
		Toffoli( q[3], q[1], q[2] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], q[3] );
		CNOT( anc[0], q[1] );
	} Refree(anc, 1) {}
}
// Function 11 with degree 0
// nq: 7, na: 4, ng: 21
void func11(qbit **q, int n) {
printf("func11\n");
fflush(stderr);
	qbit *anc[4]; // ancilla
	qbit *nb[38]; // interacting bits
	qbit *res[4];
	nb[0] = q[6];
	nb[1] = q[2];
	nb[2] = q[6];
	nb[3] = q[3];
	nb[4] = q[4];
	nb[5] = q[3];
	nb[6] = q[1];
	nb[7] = q[3];
	nb[8] = q[3];
	nb[9] = q[4];
	nb[10] = q[2];
	nb[11] = q[1];
	nb[12] = q[6];
	nb[13] = q[3];
	nb[14] = q[5];
	nb[15] = q[0];
	nb[16] = q[2];
	nb[17] = q[3];
	nb[18] = q[1];
	nb[19] = q[5];
	nb[20] = q[3];
	nb[21] = q[1];
	nb[22] = q[6];
	nb[23] = q[6];
	nb[24] = q[4];
	nb[25] = q[6];
	nb[26] = q[4];
	nb[27] = q[1];
	nb[28] = q[1];
	nb[29] = q[3];
	nb[30] = q[0];
	nb[31] = q[1];
	nb[32] = q[1];
	nb[33] = q[2];
	nb[34] = q[1];
	nb[35] = q[1];
	nb[36] = q[5];
	nb[37] = q[0];
	res[0] = q[3];
	res[1] = q[0];
	res[2] = q[5];
	res[3] = q[6];
	// Leaf function
	Compute (0, 4, 46, 25, 0, 1, 0) {
		acquire(4, anc, 38, nb);
		Toffoli( q[6], q[2], anc[0] );
		CNOT( q[6], q[3] );
		CNOT( q[4], anc[3] );
		Toffoli( anc[0], q[3], anc[2] );
		CNOT( q[1], q[3] );
		Toffoli( q[3], q[4], q[2] );
		Toffoli( q[1], anc[0], q[6] );
		Toffoli( q[3], anc[0], q[5] );
		Toffoli( q[0], q[2], q[3] );
		Toffoli( anc[2], q[1], q[5] );
		Toffoli( q[3], q[1], q[6] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[6], q[4], anc[0] );
		Toffoli( q[6], anc[0], anc[1] );
		Toffoli( anc[3], q[4], anc[1] );
		Toffoli( anc[3], anc[2], q[1] );
		Toffoli( q[1], q[3], q[0] );
		Toffoli( anc[3], anc[2], q[1] );
		CNOT( q[1], q[2] );
		Toffoli( q[1], anc[1], anc[3] );
		Toffoli( q[1], q[5], q[0] );
	}
	Store {
		CNOT( anc[2], res[0] );
		CNOT( q[1], res[1] );
		CNOT( anc[1], res[2] );
		CNOT( anc[0], res[3] );
	}
	Uncompute(res, 0, anc, 4, 46, 25){
		Toffoli( q[1], q[5], q[0] );
		Toffoli( q[1], anc[1], anc[3] );
		CNOT( q[1], q[2] );
		Toffoli( anc[3], anc[2], q[1] );
		Toffoli( q[1], q[3], q[0] );
		Toffoli( anc[3], anc[2], q[1] );
		Toffoli( anc[3], q[4], anc[1] );
		Toffoli( q[6], anc[0], anc[1] );
		Toffoli( q[6], q[4], anc[0] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[3], q[1], q[6] );
		Toffoli( anc[2], q[1], q[5] );
		Toffoli( q[0], q[2], q[3] );
		Toffoli( q[3], anc[0], q[5] );
		Toffoli( q[1], anc[0], q[6] );
		Toffoli( q[3], q[4], q[2] );
		CNOT( q[1], q[3] );
		Toffoli( anc[0], q[3], anc[2] );
		CNOT( q[4], anc[3] );
		CNOT( q[6], q[3] );
		Toffoli( q[6], q[2], anc[0] );
	} Free(anc, 4) {}
}
// Function 11 with degree 0
// nq: 7, na: 4, ng: 21
void func11R(qbit **q, int n) {
printf("func11R\n");
fflush(stderr);
	qbit *anc[4]; // ancilla
	qbit *nb[38]; // interacting bits
	qbit *res[4];
	nb[0] = q[6];
	nb[1] = q[2];
	nb[2] = q[6];
	nb[3] = q[3];
	nb[4] = q[4];
	nb[5] = q[3];
	nb[6] = q[1];
	nb[7] = q[3];
	nb[8] = q[3];
	nb[9] = q[4];
	nb[10] = q[2];
	nb[11] = q[1];
	nb[12] = q[6];
	nb[13] = q[3];
	nb[14] = q[5];
	nb[15] = q[0];
	nb[16] = q[2];
	nb[17] = q[3];
	nb[18] = q[1];
	nb[19] = q[5];
	nb[20] = q[3];
	nb[21] = q[1];
	nb[22] = q[6];
	nb[23] = q[6];
	nb[24] = q[4];
	nb[25] = q[6];
	nb[26] = q[4];
	nb[27] = q[1];
	nb[28] = q[1];
	nb[29] = q[3];
	nb[30] = q[0];
	nb[31] = q[1];
	nb[32] = q[1];
	nb[33] = q[2];
	nb[34] = q[1];
	nb[35] = q[1];
	nb[36] = q[5];
	nb[37] = q[0];
	res[0] = q[3];
	res[1] = q[0];
	res[2] = q[5];
	res[3] = q[6];
	// Leaf function
	_computeModule(0, 4, 46, 25, 0, 1, 0);
	acquire(4, anc, 38, nb);
	Recompute (res, 0, anc, 4, 46, 25){
		Toffoli( q[1], q[5], q[0] );
		Toffoli( q[1], anc[1], anc[3] );
		CNOT( q[1], q[2] );
		Toffoli( anc[3], anc[2], q[1] );
		Toffoli( q[1], q[3], q[0] );
		Toffoli( anc[3], anc[2], q[1] );
		Toffoli( anc[3], q[4], anc[1] );
		Toffoli( q[6], anc[0], anc[1] );
		Toffoli( q[6], q[4], anc[0] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[3], q[1], q[6] );
		Toffoli( anc[2], q[1], q[5] );
		Toffoli( q[0], q[2], q[3] );
		Toffoli( q[3], anc[0], q[5] );
		Toffoli( q[1], anc[0], q[6] );
		Toffoli( q[3], q[4], q[2] );
		CNOT( q[1], q[3] );
		Toffoli( anc[0], q[3], anc[2] );
		CNOT( q[4], anc[3] );
		CNOT( q[6], q[3] );
		Toffoli( q[6], q[2], anc[0] );
	}
	Restore {
		CNOT( anc[2], res[0] );
		CNOT( q[1], res[1] );
		CNOT( anc[1], res[2] );
		CNOT( anc[0], res[3] );
	}
	Unrecompute {
		Toffoli( q[6], q[2], anc[0] );
		CNOT( q[6], q[3] );
		CNOT( q[4], anc[3] );
		Toffoli( anc[0], q[3], anc[2] );
		CNOT( q[1], q[3] );
		Toffoli( q[3], q[4], q[2] );
		Toffoli( q[1], anc[0], q[6] );
		Toffoli( q[3], anc[0], q[5] );
		Toffoli( q[0], q[2], q[3] );
		Toffoli( anc[2], q[1], q[5] );
		Toffoli( q[3], q[1], q[6] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[6], q[4], anc[0] );
		Toffoli( q[6], anc[0], anc[1] );
		Toffoli( anc[3], q[4], anc[1] );
		Toffoli( anc[3], anc[2], q[1] );
		Toffoli( q[1], q[3], q[0] );
		Toffoli( anc[3], anc[2], q[1] );
		CNOT( q[1], q[2] );
		Toffoli( q[1], anc[1], anc[3] );
		Toffoli( q[1], q[5], q[0] );
	} Refree(anc, 4) {}
}
// Function 10 with degree 0
// nq: 6, na: 11, ng: 20
void func10(qbit **q, int n) {
printf("func10\n");
fflush(stderr);
	qbit *anc[11]; // ancilla
	qbit *nb[25]; // interacting bits
	qbit *res[6];
	nb[0] = q[0];
	nb[1] = q[4];
	nb[2] = q[5];
	nb[3] = q[2];
	nb[4] = q[1];
	nb[5] = q[4];
	nb[6] = q[0];
	nb[7] = q[3];
	nb[8] = q[0];
	nb[9] = q[5];
	nb[10] = q[4];
	nb[11] = q[2];
	nb[12] = q[0];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[5];
	nb[16] = q[3];
	nb[17] = q[4];
	nb[18] = q[0];
	nb[19] = q[5];
	nb[20] = q[2];
	nb[21] = q[5];
	nb[22] = q[2];
	nb[23] = q[2];
	nb[24] = q[0];
	res[0] = q[1];
	res[1] = q[0];
	res[2] = q[5];
	res[3] = q[4];
	res[4] = q[3];
	res[5] = q[2];
	// Leaf function
	Compute (0, 11, 46, 26, 0, 2, 0) {
		acquire(11, anc, 25, nb);
		Toffoli( q[0], anc[5], q[4] );
		CNOT( anc[6], anc[4] );
		CNOT( q[5], anc[0] );
		CNOT( anc[8], q[2] );
		Toffoli( anc[7], q[1], anc[1] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[10], q[4], anc[6] );
		Toffoli( anc[9], anc[2], anc[6] );
		CNOT( anc[10], q[0] );
		Toffoli( anc[9], q[3], q[0] );
		CNOT( q[5], anc[4] );
		Toffoli( anc[7], q[4], anc[5] );
		Toffoli( anc[10], q[2], q[0] );
		Toffoli( q[3], q[2], q[5] );
		Toffoli( anc[6], q[3], anc[7] );
		CNOT( q[4], anc[7] );
		Toffoli( q[0], q[5], anc[7] );
		Toffoli( anc[1], q[2], q[5] );
		Toffoli( q[2], anc[5], anc[7] );
		Toffoli( anc[10], q[2], q[0] );
	}
	Store {
		CNOT( anc[5], res[0] );
		CNOT( anc[1], res[1] );
		CNOT( q[1], res[2] );
		CNOT( anc[0], res[3] );
		CNOT( q[2], res[4] );
		CNOT( anc[6], res[5] );
	}
	Uncompute(res, 0, anc, 11, 46, 26){
		Toffoli( anc[10], q[2], q[0] );
		Toffoli( q[2], anc[5], anc[7] );
		Toffoli( anc[1], q[2], q[5] );
		Toffoli( q[0], q[5], anc[7] );
		CNOT( q[4], anc[7] );
		Toffoli( anc[6], q[3], anc[7] );
		Toffoli( q[3], q[2], q[5] );
		Toffoli( anc[10], q[2], q[0] );
		Toffoli( anc[7], q[4], anc[5] );
		CNOT( q[5], anc[4] );
		Toffoli( anc[9], q[3], q[0] );
		CNOT( anc[10], q[0] );
		Toffoli( anc[9], anc[2], anc[6] );
		Toffoli( anc[10], q[4], anc[6] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[7], q[1], anc[1] );
		CNOT( anc[8], q[2] );
		CNOT( q[5], anc[0] );
		CNOT( anc[6], anc[4] );
		Toffoli( q[0], anc[5], q[4] );
	} Free(anc, 11) {}
}
// Function 10 with degree 0
// nq: 6, na: 11, ng: 20
void func10R(qbit **q, int n) {
printf("func10R\n");
fflush(stderr);
	qbit *anc[11]; // ancilla
	qbit *nb[25]; // interacting bits
	qbit *res[6];
	nb[0] = q[0];
	nb[1] = q[4];
	nb[2] = q[5];
	nb[3] = q[2];
	nb[4] = q[1];
	nb[5] = q[4];
	nb[6] = q[0];
	nb[7] = q[3];
	nb[8] = q[0];
	nb[9] = q[5];
	nb[10] = q[4];
	nb[11] = q[2];
	nb[12] = q[0];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[5];
	nb[16] = q[3];
	nb[17] = q[4];
	nb[18] = q[0];
	nb[19] = q[5];
	nb[20] = q[2];
	nb[21] = q[5];
	nb[22] = q[2];
	nb[23] = q[2];
	nb[24] = q[0];
	res[0] = q[1];
	res[1] = q[0];
	res[2] = q[5];
	res[3] = q[4];
	res[4] = q[3];
	res[5] = q[2];
	// Leaf function
	_computeModule(0, 11, 46, 26, 0, 2, 0);
	acquire(11, anc, 25, nb);
	Recompute (res, 0, anc, 11, 46, 26){
		Toffoli( anc[10], q[2], q[0] );
		Toffoli( q[2], anc[5], anc[7] );
		Toffoli( anc[1], q[2], q[5] );
		Toffoli( q[0], q[5], anc[7] );
		CNOT( q[4], anc[7] );
		Toffoli( anc[6], q[3], anc[7] );
		Toffoli( q[3], q[2], q[5] );
		Toffoli( anc[10], q[2], q[0] );
		Toffoli( anc[7], q[4], anc[5] );
		CNOT( q[5], anc[4] );
		Toffoli( anc[9], q[3], q[0] );
		CNOT( anc[10], q[0] );
		Toffoli( anc[9], anc[2], anc[6] );
		Toffoli( anc[10], q[4], anc[6] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[7], q[1], anc[1] );
		CNOT( anc[8], q[2] );
		CNOT( q[5], anc[0] );
		CNOT( anc[6], anc[4] );
		Toffoli( q[0], anc[5], q[4] );
	}
	Restore {
		CNOT( anc[5], res[0] );
		CNOT( anc[1], res[1] );
		CNOT( q[1], res[2] );
		CNOT( anc[0], res[3] );
		CNOT( q[2], res[4] );
		CNOT( anc[6], res[5] );
	}
	Unrecompute {
		Toffoli( q[0], anc[5], q[4] );
		CNOT( anc[6], anc[4] );
		CNOT( q[5], anc[0] );
		CNOT( anc[8], q[2] );
		Toffoli( anc[7], q[1], anc[1] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[10], q[4], anc[6] );
		Toffoli( anc[9], anc[2], anc[6] );
		CNOT( anc[10], q[0] );
		Toffoli( anc[9], q[3], q[0] );
		CNOT( q[5], anc[4] );
		Toffoli( anc[7], q[4], anc[5] );
		Toffoli( anc[10], q[2], q[0] );
		Toffoli( q[3], q[2], q[5] );
		Toffoli( anc[6], q[3], anc[7] );
		CNOT( q[4], anc[7] );
		Toffoli( q[0], q[5], anc[7] );
		Toffoli( anc[1], q[2], q[5] );
		Toffoli( q[2], anc[5], anc[7] );
		Toffoli( anc[10], q[2], q[0] );
	} Refree(anc, 11) {}
}
// Function 9 with degree 0
// nq: 6, na: 15, ng: 76
void func9(qbit **q, int n) {
printf("func9\n");
fflush(stderr);
	qbit *anc[15]; // ancilla
	qbit *nb[74]; // interacting bits
	qbit *res[6];
	nb[0] = q[4];
	nb[1] = q[5];
	nb[2] = q[3];
	nb[3] = q[3];
	nb[4] = q[4];
	nb[5] = q[5];
	nb[6] = q[1];
	nb[7] = q[4];
	nb[8] = q[4];
	nb[9] = q[3];
	nb[10] = q[2];
	nb[11] = q[2];
	nb[12] = q[0];
	nb[13] = q[2];
	nb[14] = q[4];
	nb[15] = q[4];
	nb[16] = q[0];
	nb[17] = q[4];
	nb[18] = q[3];
	nb[19] = q[2];
	nb[20] = q[0];
	nb[21] = q[2];
	nb[22] = q[0];
	nb[23] = q[4];
	nb[24] = q[0];
	nb[25] = q[4];
	nb[26] = q[5];
	nb[27] = q[3];
	nb[28] = q[1];
	nb[29] = q[2];
	nb[30] = q[0];
	nb[31] = q[2];
	nb[32] = q[1];
	nb[33] = q[2];
	nb[34] = q[3];
	nb[35] = q[2];
	nb[36] = q[3];
	nb[37] = q[4];
	nb[38] = q[3];
	nb[39] = q[1];
	nb[40] = q[2];
	nb[41] = q[5];
	nb[42] = q[3];
	nb[43] = q[3];
	nb[44] = q[5];
	nb[45] = q[1];
	nb[46] = q[4];
	nb[47] = q[4];
	nb[48] = q[0];
	nb[49] = q[2];
	nb[50] = q[3];
	nb[51] = q[0];
	nb[52] = q[5];
	nb[53] = q[1];
	nb[54] = q[2];
	nb[55] = q[2];
	nb[56] = q[2];
	nb[57] = q[1];
	nb[58] = q[4];
	nb[59] = q[1];
	nb[60] = q[3];
	nb[61] = q[4];
	nb[62] = q[0];
	nb[63] = q[2];
	nb[64] = q[3];
	nb[65] = q[4];
	nb[66] = q[1];
	nb[67] = q[3];
	nb[68] = q[4];
	nb[69] = q[0];
	nb[70] = q[3];
	nb[71] = q[5];
	nb[72] = q[3];
	nb[73] = q[2];
	res[0] = q[0];
	res[1] = q[5];
	res[2] = q[1];
	res[3] = q[2];
	res[4] = q[3];
	res[5] = q[4];
	// Leaf function
	Compute (0, 15, 158, 82, 0, 2, 0) {
		acquire(15, anc, 74, nb);
		CNOT( anc[0], q[4] );
		Toffoli( q[5], anc[2], q[3] );
		CNOT( anc[10], anc[12] );
		CNOT( q[3], anc[4] );
		Toffoli( q[4], q[5], anc[11] );
		Toffoli( anc[4], anc[2], q[1] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[1], anc[0], anc[3] );
		Toffoli( anc[2], q[4], anc[7] );
		Toffoli( anc[8], anc[13], anc[0] );
		CNOT( anc[5], q[4] );
		CNOT( anc[3], anc[5] );
		Toffoli( anc[2], anc[12], anc[6] );
		Toffoli( anc[8], q[3], anc[2] );
		CNOT( q[2], anc[13] );
		Toffoli( q[2], anc[7], q[0] );
		Toffoli( q[2], q[4], anc[14] );
		Toffoli( q[4], q[0], anc[0] );
		CNOT( anc[2], anc[4] );
		Toffoli( anc[10], anc[5], q[4] );
		Toffoli( anc[13], q[3], anc[14] );
		CNOT( anc[4], anc[14] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[2], q[2] );
		CNOT( q[0], anc[2] );
		CNOT( q[2], q[0] );
		CNOT( anc[8], anc[3] );
		CNOT( anc[3], q[4] );
		Toffoli( anc[4], q[0], anc[3] );
		CNOT( q[4], q[5] );
		Toffoli( anc[12], anc[6], q[3] );
		Toffoli( anc[6], anc[3], q[1] );
		CNOT( q[2], anc[2] );
		Toffoli( anc[8], q[0], q[2] );
		Toffoli( anc[12], anc[1], anc[14] );
		CNOT( anc[12], anc[10] );
		CNOT( anc[12], anc[2] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[9], anc[14], anc[12] );
		Toffoli( anc[7], q[2], anc[9] );
		Toffoli( q[3], anc[14], anc[7] );
		CNOT( q[2], anc[11] );
		Toffoli( q[3], q[4], anc[12] );
		Toffoli( anc[10], anc[7], anc[11] );
		CNOT( anc[9], anc[13] );
		CNOT( q[3], anc[9] );
		Toffoli( q[1], anc[3], anc[13] );
		Toffoli( q[2], q[5], q[3] );
		Toffoli( anc[0], anc[5], q[3] );
		Toffoli( q[5], anc[9], q[1] );
		Toffoli( anc[1], q[4], anc[6] );
		Toffoli( anc[4], q[4], q[0] );
		Toffoli( anc[1], q[2], q[3] );
		CNOT( anc[1], q[0] );
		Toffoli( q[5], q[1], anc[9] );
		Toffoli( anc[4], anc[1], anc[9] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[8], anc[2], q[2] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( q[2], q[1], q[4] );
		Toffoli( anc[10], q[1], q[3] );
		CNOT( anc[13], q[4] );
		CNOT( anc[13], q[0] );
		CNOT( anc[4], q[2] );
		CNOT( q[3], anc[11] );
		Toffoli( anc[10], anc[3], anc[1] );
		CNOT( q[4], anc[8] );
		CNOT( anc[6], q[1] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[4], anc[10], q[3] );
		CNOT( anc[13], q[4] );
		Toffoli( anc[3], q[0], anc[11] );
		Toffoli( q[3], anc[0], anc[10] );
		Toffoli( q[5], q[3], anc[5] );
		Toffoli( anc[10], anc[1], anc[13] );
		CNOT( q[2], anc[1] );
	}
	Store {
		CNOT( anc[10], res[0] );
		CNOT( q[1], res[1] );
		CNOT( q[4], res[2] );
		CNOT( anc[14], res[3] );
		CNOT( anc[8], res[4] );
		CNOT( anc[4], res[5] );
	}
	Uncompute(res, 0, anc, 15, 158, 82){
		CNOT( q[2], anc[1] );
		Toffoli( anc[10], anc[1], anc[13] );
		Toffoli( q[5], q[3], anc[5] );
		Toffoli( q[3], anc[0], anc[10] );
		Toffoli( anc[3], q[0], anc[11] );
		CNOT( anc[13], q[4] );
		Toffoli( anc[4], anc[10], q[3] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[6], q[1] );
		CNOT( q[4], anc[8] );
		Toffoli( anc[10], anc[3], anc[1] );
		CNOT( q[3], anc[11] );
		CNOT( anc[4], q[2] );
		CNOT( anc[13], q[0] );
		CNOT( anc[13], q[4] );
		Toffoli( anc[10], q[1], q[3] );
		Toffoli( q[2], q[1], q[4] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( anc[8], anc[2], q[2] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[4], anc[1], anc[9] );
		Toffoli( q[5], q[1], anc[9] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], q[2], q[3] );
		Toffoli( anc[4], q[4], q[0] );
		Toffoli( anc[1], q[4], anc[6] );
		Toffoli( q[5], anc[9], q[1] );
		Toffoli( anc[0], anc[5], q[3] );
		Toffoli( q[2], q[5], q[3] );
		Toffoli( q[1], anc[3], anc[13] );
		CNOT( q[3], anc[9] );
		CNOT( anc[9], anc[13] );
		Toffoli( anc[10], anc[7], anc[11] );
		Toffoli( q[3], q[4], anc[12] );
		CNOT( q[2], anc[11] );
		Toffoli( q[3], anc[14], anc[7] );
		Toffoli( anc[7], q[2], anc[9] );
		Toffoli( anc[9], anc[14], anc[12] );
		CNOT( q[1], anc[4] );
		CNOT( anc[12], anc[2] );
		CNOT( anc[12], anc[10] );
		Toffoli( anc[12], anc[1], anc[14] );
		Toffoli( anc[8], q[0], q[2] );
		CNOT( q[2], anc[2] );
		Toffoli( anc[6], anc[3], q[1] );
		Toffoli( anc[12], anc[6], q[3] );
		CNOT( q[4], q[5] );
		Toffoli( anc[4], q[0], anc[3] );
		CNOT( anc[3], q[4] );
		CNOT( anc[8], anc[3] );
		CNOT( q[2], q[0] );
		CNOT( q[0], anc[2] );
		CNOT( anc[2], q[2] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[4], anc[14] );
		Toffoli( anc[13], q[3], anc[14] );
		Toffoli( anc[10], anc[5], q[4] );
		CNOT( anc[2], anc[4] );
		Toffoli( q[4], q[0], anc[0] );
		Toffoli( q[2], q[4], anc[14] );
		Toffoli( q[2], anc[7], q[0] );
		CNOT( q[2], anc[13] );
		Toffoli( anc[8], q[3], anc[2] );
		Toffoli( anc[2], anc[12], anc[6] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[5], q[4] );
		Toffoli( anc[8], anc[13], anc[0] );
		Toffoli( anc[2], q[4], anc[7] );
		Toffoli( anc[1], anc[0], anc[3] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[4], anc[2], q[1] );
		Toffoli( q[4], q[5], anc[11] );
		CNOT( q[3], anc[4] );
		CNOT( anc[10], anc[12] );
		Toffoli( q[5], anc[2], q[3] );
		CNOT( anc[0], q[4] );
	} Free(anc, 15) {}
}
// Function 9 with degree 0
// nq: 6, na: 15, ng: 76
void func9R(qbit **q, int n) {
printf("func9R\n");
fflush(stderr);
	qbit *anc[15]; // ancilla
	qbit *nb[74]; // interacting bits
	qbit *res[6];
	nb[0] = q[4];
	nb[1] = q[5];
	nb[2] = q[3];
	nb[3] = q[3];
	nb[4] = q[4];
	nb[5] = q[5];
	nb[6] = q[1];
	nb[7] = q[4];
	nb[8] = q[4];
	nb[9] = q[3];
	nb[10] = q[2];
	nb[11] = q[2];
	nb[12] = q[0];
	nb[13] = q[2];
	nb[14] = q[4];
	nb[15] = q[4];
	nb[16] = q[0];
	nb[17] = q[4];
	nb[18] = q[3];
	nb[19] = q[2];
	nb[20] = q[0];
	nb[21] = q[2];
	nb[22] = q[0];
	nb[23] = q[4];
	nb[24] = q[0];
	nb[25] = q[4];
	nb[26] = q[5];
	nb[27] = q[3];
	nb[28] = q[1];
	nb[29] = q[2];
	nb[30] = q[0];
	nb[31] = q[2];
	nb[32] = q[1];
	nb[33] = q[2];
	nb[34] = q[3];
	nb[35] = q[2];
	nb[36] = q[3];
	nb[37] = q[4];
	nb[38] = q[3];
	nb[39] = q[1];
	nb[40] = q[2];
	nb[41] = q[5];
	nb[42] = q[3];
	nb[43] = q[3];
	nb[44] = q[5];
	nb[45] = q[1];
	nb[46] = q[4];
	nb[47] = q[4];
	nb[48] = q[0];
	nb[49] = q[2];
	nb[50] = q[3];
	nb[51] = q[0];
	nb[52] = q[5];
	nb[53] = q[1];
	nb[54] = q[2];
	nb[55] = q[2];
	nb[56] = q[2];
	nb[57] = q[1];
	nb[58] = q[4];
	nb[59] = q[1];
	nb[60] = q[3];
	nb[61] = q[4];
	nb[62] = q[0];
	nb[63] = q[2];
	nb[64] = q[3];
	nb[65] = q[4];
	nb[66] = q[1];
	nb[67] = q[3];
	nb[68] = q[4];
	nb[69] = q[0];
	nb[70] = q[3];
	nb[71] = q[5];
	nb[72] = q[3];
	nb[73] = q[2];
	res[0] = q[0];
	res[1] = q[5];
	res[2] = q[1];
	res[3] = q[2];
	res[4] = q[3];
	res[5] = q[4];
	// Leaf function
	_computeModule(0, 15, 158, 82, 0, 2, 0);
	acquire(15, anc, 74, nb);
	Recompute (res, 0, anc, 15, 158, 82){
		CNOT( q[2], anc[1] );
		Toffoli( anc[10], anc[1], anc[13] );
		Toffoli( q[5], q[3], anc[5] );
		Toffoli( q[3], anc[0], anc[10] );
		Toffoli( anc[3], q[0], anc[11] );
		CNOT( anc[13], q[4] );
		Toffoli( anc[4], anc[10], q[3] );
		CNOT( anc[9], anc[10] );
		CNOT( anc[6], q[1] );
		CNOT( q[4], anc[8] );
		Toffoli( anc[10], anc[3], anc[1] );
		CNOT( q[3], anc[11] );
		CNOT( anc[4], q[2] );
		CNOT( anc[13], q[0] );
		CNOT( anc[13], q[4] );
		Toffoli( anc[10], q[1], q[3] );
		Toffoli( q[2], q[1], q[4] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( anc[8], anc[2], q[2] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[4], anc[1], anc[9] );
		Toffoli( q[5], q[1], anc[9] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], q[2], q[3] );
		Toffoli( anc[4], q[4], q[0] );
		Toffoli( anc[1], q[4], anc[6] );
		Toffoli( q[5], anc[9], q[1] );
		Toffoli( anc[0], anc[5], q[3] );
		Toffoli( q[2], q[5], q[3] );
		Toffoli( q[1], anc[3], anc[13] );
		CNOT( q[3], anc[9] );
		CNOT( anc[9], anc[13] );
		Toffoli( anc[10], anc[7], anc[11] );
		Toffoli( q[3], q[4], anc[12] );
		CNOT( q[2], anc[11] );
		Toffoli( q[3], anc[14], anc[7] );
		Toffoli( anc[7], q[2], anc[9] );
		Toffoli( anc[9], anc[14], anc[12] );
		CNOT( q[1], anc[4] );
		CNOT( anc[12], anc[2] );
		CNOT( anc[12], anc[10] );
		Toffoli( anc[12], anc[1], anc[14] );
		Toffoli( anc[8], q[0], q[2] );
		CNOT( q[2], anc[2] );
		Toffoli( anc[6], anc[3], q[1] );
		Toffoli( anc[12], anc[6], q[3] );
		CNOT( q[4], q[5] );
		Toffoli( anc[4], q[0], anc[3] );
		CNOT( anc[3], q[4] );
		CNOT( anc[8], anc[3] );
		CNOT( q[2], q[0] );
		CNOT( q[0], anc[2] );
		CNOT( anc[2], q[2] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[4], anc[14] );
		Toffoli( anc[13], q[3], anc[14] );
		Toffoli( anc[10], anc[5], q[4] );
		CNOT( anc[2], anc[4] );
		Toffoli( q[4], q[0], anc[0] );
		Toffoli( q[2], q[4], anc[14] );
		Toffoli( q[2], anc[7], q[0] );
		CNOT( q[2], anc[13] );
		Toffoli( anc[8], q[3], anc[2] );
		Toffoli( anc[2], anc[12], anc[6] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[5], q[4] );
		Toffoli( anc[8], anc[13], anc[0] );
		Toffoli( anc[2], q[4], anc[7] );
		Toffoli( anc[1], anc[0], anc[3] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[4], anc[2], q[1] );
		Toffoli( q[4], q[5], anc[11] );
		CNOT( q[3], anc[4] );
		CNOT( anc[10], anc[12] );
		Toffoli( q[5], anc[2], q[3] );
		CNOT( anc[0], q[4] );
	}
	Restore {
		CNOT( anc[10], res[0] );
		CNOT( q[1], res[1] );
		CNOT( q[4], res[2] );
		CNOT( anc[14], res[3] );
		CNOT( anc[8], res[4] );
		CNOT( anc[4], res[5] );
	}
	Unrecompute {
		CNOT( anc[0], q[4] );
		Toffoli( q[5], anc[2], q[3] );
		CNOT( anc[10], anc[12] );
		CNOT( q[3], anc[4] );
		Toffoli( q[4], q[5], anc[11] );
		Toffoli( anc[4], anc[2], q[1] );
		CNOT( anc[10], anc[2] );
		Toffoli( anc[1], anc[0], anc[3] );
		Toffoli( anc[2], q[4], anc[7] );
		Toffoli( anc[8], anc[13], anc[0] );
		CNOT( anc[5], q[4] );
		CNOT( anc[3], anc[5] );
		Toffoli( anc[2], anc[12], anc[6] );
		Toffoli( anc[8], q[3], anc[2] );
		CNOT( q[2], anc[13] );
		Toffoli( q[2], anc[7], q[0] );
		Toffoli( q[2], q[4], anc[14] );
		Toffoli( q[4], q[0], anc[0] );
		CNOT( anc[2], anc[4] );
		Toffoli( anc[10], anc[5], q[4] );
		Toffoli( anc[13], q[3], anc[14] );
		CNOT( anc[4], anc[14] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[2], q[2] );
		CNOT( q[0], anc[2] );
		CNOT( q[2], q[0] );
		CNOT( anc[8], anc[3] );
		CNOT( anc[3], q[4] );
		Toffoli( anc[4], q[0], anc[3] );
		CNOT( q[4], q[5] );
		Toffoli( anc[12], anc[6], q[3] );
		Toffoli( anc[6], anc[3], q[1] );
		CNOT( q[2], anc[2] );
		Toffoli( anc[8], q[0], q[2] );
		Toffoli( anc[12], anc[1], anc[14] );
		CNOT( anc[12], anc[10] );
		CNOT( anc[12], anc[2] );
		CNOT( q[1], anc[4] );
		Toffoli( anc[9], anc[14], anc[12] );
		Toffoli( anc[7], q[2], anc[9] );
		Toffoli( q[3], anc[14], anc[7] );
		CNOT( q[2], anc[11] );
		Toffoli( q[3], q[4], anc[12] );
		Toffoli( anc[10], anc[7], anc[11] );
		CNOT( anc[9], anc[13] );
		CNOT( q[3], anc[9] );
		Toffoli( q[1], anc[3], anc[13] );
		Toffoli( q[2], q[5], q[3] );
		Toffoli( anc[0], anc[5], q[3] );
		Toffoli( q[5], anc[9], q[1] );
		Toffoli( anc[1], q[4], anc[6] );
		Toffoli( anc[4], q[4], q[0] );
		Toffoli( anc[1], q[2], q[3] );
		CNOT( anc[1], q[0] );
		Toffoli( q[5], q[1], anc[9] );
		Toffoli( anc[4], anc[1], anc[9] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[8], anc[2], q[2] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( q[2], q[1], q[4] );
		Toffoli( anc[10], q[1], q[3] );
		CNOT( anc[13], q[4] );
		CNOT( anc[13], q[0] );
		CNOT( anc[4], q[2] );
		CNOT( q[3], anc[11] );
		Toffoli( anc[10], anc[3], anc[1] );
		CNOT( q[4], anc[8] );
		CNOT( anc[6], q[1] );
		CNOT( anc[9], anc[10] );
		Toffoli( anc[4], anc[10], q[3] );
		CNOT( anc[13], q[4] );
		Toffoli( anc[3], q[0], anc[11] );
		Toffoli( q[3], anc[0], anc[10] );
		Toffoli( q[5], q[3], anc[5] );
		Toffoli( anc[10], anc[1], anc[13] );
		CNOT( q[2], anc[1] );
	} Refree(anc, 15) {}
}
// Function 8 with degree 0
// nq: 1, na: 10, ng: 179
void func8(qbit **q, int n) {
printf("func8\n");
fflush(stderr);
	qbit *anc[10]; // ancilla
	qbit *nb[33]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[0];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[0];
	nb[23] = q[0];
	nb[24] = q[0];
	nb[25] = q[0];
	nb[26] = q[0];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[0];
	res[0] = q[0];
	// Leaf function
	Compute (0, 10, 359, 180, 0, 4, 0) {
		acquire(10, anc, 33, nb);
		CNOT( anc[5], anc[0] );
		Toffoli( anc[4], anc[2], anc[3] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[2], anc[1], anc[5] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[0], anc[8], anc[6] );
		CNOT( anc[1], anc[9] );
		CNOT( anc[8], anc[2] );
		CNOT( q[0], anc[6] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[8], anc[4] );
		CNOT( anc[7], anc[9] );
		CNOT( anc[8], anc[9] );
		Toffoli( anc[9], anc[6], anc[0] );
		CNOT( anc[0], anc[4] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[4], anc[1], anc[3] );
		Toffoli( anc[0], anc[8], anc[6] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[8], q[0], anc[2] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[6], anc[7], q[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[6], anc[9] );
		Toffoli( anc[4], anc[5], anc[8] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[4], anc[8], anc[7] );
		CNOT( anc[8], anc[7] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[6], anc[2], q[0] );
		Toffoli( anc[3], anc[8], q[0] );
		CNOT( q[0], anc[3] );
		Toffoli( anc[8], anc[3], anc[7] );
		Toffoli( anc[7], anc[5], q[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[3], anc[8], q[0] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[1], anc[3], anc[2] );
		Toffoli( anc[7], anc[6], anc[1] );
		Toffoli( anc[5], anc[8], anc[2] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[9], anc[3], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[6], anc[1], q[0] );
		CNOT( anc[9], anc[0] );
		Toffoli( anc[6], q[0], anc[8] );
		Toffoli( anc[8], anc[4], anc[9] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( anc[5], anc[8] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[9], anc[1], anc[5] );
		Toffoli( anc[7], anc[8], anc[0] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[0], anc[3], anc[9] );
		Toffoli( anc[9], anc[4], anc[1] );
		CNOT( anc[0], anc[7] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[5], anc[2], anc[9] );
		CNOT( anc[5], anc[6] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[6], anc[8] );
		Toffoli( anc[4], anc[0], anc[8] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[7], anc[9], anc[3] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[4], anc[2], q[0] );
		CNOT( anc[0], anc[4] );
		CNOT( anc[6], anc[7] );
		CNOT( anc[5], anc[1] );
		CNOT( q[0], anc[6] );
		Toffoli( anc[0], anc[4], q[0] );
		CNOT( anc[2], anc[9] );
		CNOT( anc[3], anc[7] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[5], anc[1] );
		CNOT( anc[3], anc[5] );
		Toffoli( anc[1], anc[8], anc[5] );
		Toffoli( anc[3], anc[5], anc[8] );
		CNOT( anc[1], anc[9] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[1], anc[8] );
		Toffoli( anc[1], anc[6], q[0] );
		Toffoli( anc[2], anc[9], anc[8] );
		Toffoli( anc[3], anc[7], anc[6] );
		Toffoli( anc[8], anc[2], anc[7] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[4], anc[5], anc[2] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[0], anc[3], anc[6] );
		CNOT( anc[6], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[5], anc[9], anc[0] );
		Toffoli( anc[1], anc[5], anc[9] );
		Toffoli( q[0], anc[7], anc[0] );
		Toffoli( anc[9], q[0], anc[1] );
		Toffoli( q[0], anc[6], anc[7] );
		Toffoli( anc[3], anc[4], anc[7] );
		Toffoli( anc[4], anc[8], anc[7] );
		Toffoli( anc[7], anc[3], anc[5] );
		Toffoli( anc[2], anc[1], anc[9] );
		Toffoli( anc[7], anc[2], anc[8] );
		Toffoli( anc[9], anc[5], anc[2] );
		Toffoli( anc[3], anc[6], anc[1] );
		Toffoli( anc[8], anc[5], anc[2] );
		CNOT( anc[2], anc[6] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[2], q[0] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[9], anc[2] );
		Toffoli( anc[4], anc[3], anc[5] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[8], q[0], anc[0] );
		Toffoli( anc[6], anc[9], anc[8] );
		Toffoli( anc[5], anc[7], anc[6] );
		CNOT( anc[3], anc[8] );
		Toffoli( anc[1], anc[3], anc[6] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[3], anc[5], anc[7] );
		Toffoli( anc[9], anc[1], anc[7] );
		Toffoli( anc[8], anc[5], anc[4] );
		CNOT( anc[8], q[0] );
		CNOT( anc[0], anc[7] );
		Toffoli( anc[4], anc[9], anc[0] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[9], anc[0] );
		CNOT( anc[0], anc[8] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[3], anc[6], anc[9] );
		Toffoli( anc[3], anc[6], anc[7] );
		CNOT( anc[5], anc[0] );
		CNOT( anc[8], q[0] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[3], anc[8], anc[1] );
		CNOT( anc[3], anc[9] );
		CNOT( anc[7], anc[1] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[5], anc[9], anc[6] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[3], anc[0], anc[8] );
		Toffoli( anc[0], anc[7], anc[8] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[8], q[0], anc[6] );
		Toffoli( anc[2], q[0], anc[5] );
		Toffoli( anc[0], anc[2], anc[7] );
		Toffoli( q[0], anc[5], anc[1] );
		Toffoli( anc[3], anc[6], anc[5] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[8], anc[7], anc[1] );
		CNOT( anc[5], anc[9] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[4], q[0] );
		Toffoli( anc[6], anc[3], anc[5] );
		Toffoli( anc[6], anc[0], anc[1] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[7], anc[4], anc[8] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[4] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[1], anc[5], anc[3] );
		Toffoli( anc[4], anc[8], anc[5] );
		Toffoli( anc[3], anc[8], anc[2] );
		CNOT( anc[2], anc[6] );
		CNOT( anc[7], anc[8] );
		CNOT( anc[5], q[0] );
		Toffoli( anc[5], anc[4], anc[1] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[0], anc[8], anc[7] );
		Toffoli( anc[7], anc[1], anc[0] );
		Toffoli( anc[4], anc[6], anc[8] );
	}
	Store {
		CNOT( anc[6], res[0] );
	}
	Uncompute(res, 0, anc, 10, 359, 180){
		Toffoli( anc[4], anc[6], anc[8] );
		Toffoli( anc[7], anc[1], anc[0] );
		Toffoli( anc[0], anc[8], anc[7] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[5], anc[4], anc[1] );
		CNOT( anc[5], q[0] );
		CNOT( anc[7], anc[8] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[3], anc[8], anc[2] );
		Toffoli( anc[4], anc[8], anc[5] );
		Toffoli( anc[1], anc[5], anc[3] );
		CNOT( anc[5], anc[8] );
		Toffoli( q[0], anc[0], anc[4] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[7], anc[4], anc[8] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[6], anc[0], anc[1] );
		Toffoli( anc[6], anc[3], anc[5] );
		CNOT( anc[4], q[0] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[5], anc[9] );
		Toffoli( anc[8], anc[7], anc[1] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[3], anc[6], anc[5] );
		Toffoli( q[0], anc[5], anc[1] );
		Toffoli( anc[0], anc[2], anc[7] );
		Toffoli( anc[2], q[0], anc[5] );
		Toffoli( anc[8], q[0], anc[6] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[0], anc[7], anc[8] );
		Toffoli( anc[3], anc[0], anc[8] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[5], anc[9], anc[6] );
		CNOT( anc[8], anc[4] );
		CNOT( anc[7], anc[1] );
		CNOT( anc[3], anc[9] );
		Toffoli( anc[3], anc[8], anc[1] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[8], q[0] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[3], anc[6], anc[7] );
		Toffoli( anc[3], anc[6], anc[9] );
		CNOT( anc[1], anc[4] );
		CNOT( anc[0], anc[8] );
		CNOT( anc[9], anc[0] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[4], anc[9], anc[0] );
		CNOT( anc[0], anc[7] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[8], anc[5], anc[4] );
		Toffoli( anc[9], anc[1], anc[7] );
		Toffoli( anc[3], anc[5], anc[7] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[1], anc[3], anc[6] );
		CNOT( anc[3], anc[8] );
		Toffoli( anc[5], anc[7], anc[6] );
		Toffoli( anc[6], anc[9], anc[8] );
		Toffoli( anc[8], q[0], anc[0] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[4], anc[3], anc[5] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[8], anc[5], anc[2] );
		Toffoli( anc[3], anc[6], anc[1] );
		Toffoli( anc[9], anc[5], anc[2] );
		Toffoli( anc[7], anc[2], anc[8] );
		Toffoli( anc[2], anc[1], anc[9] );
		Toffoli( anc[7], anc[3], anc[5] );
		Toffoli( anc[4], anc[8], anc[7] );
		Toffoli( anc[3], anc[4], anc[7] );
		Toffoli( q[0], anc[6], anc[7] );
		Toffoli( anc[9], q[0], anc[1] );
		Toffoli( q[0], anc[7], anc[0] );
		Toffoli( anc[1], anc[5], anc[9] );
		Toffoli( anc[5], anc[9], anc[0] );
		CNOT( anc[3], q[0] );
		CNOT( anc[6], anc[2] );
		Toffoli( anc[0], anc[3], anc[6] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[4], anc[5], anc[2] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[8], anc[2], anc[7] );
		Toffoli( anc[3], anc[7], anc[6] );
		Toffoli( anc[2], anc[9], anc[8] );
		Toffoli( anc[1], anc[6], q[0] );
		CNOT( anc[1], anc[8] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[3], anc[5], anc[8] );
		Toffoli( anc[1], anc[8], anc[5] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[5], anc[1] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[2], anc[9] );
		Toffoli( anc[0], anc[4], q[0] );
		CNOT( q[0], anc[6] );
		CNOT( anc[5], anc[1] );
		CNOT( anc[6], anc[7] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[4], anc[2], q[0] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[7], anc[9], anc[3] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[4], anc[0], anc[8] );
		CNOT( anc[6], anc[8] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[5], anc[6] );
		Toffoli( anc[5], anc[2], anc[9] );
		CNOT( q[0], anc[2] );
		CNOT( anc[0], anc[7] );
		Toffoli( anc[9], anc[4], anc[1] );
		Toffoli( anc[0], anc[3], anc[9] );
		CNOT( anc[4], anc[9] );
		CNOT( anc[2], anc[3] );
		Toffoli( anc[7], anc[8], anc[0] );
		Toffoli( anc[9], anc[1], anc[5] );
		CNOT( anc[0], anc[5] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[8], anc[4], anc[9] );
		Toffoli( anc[6], q[0], anc[8] );
		CNOT( anc[9], anc[0] );
		Toffoli( anc[6], anc[1], q[0] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[4], anc[3] );
		Toffoli( anc[9], anc[3], anc[5] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[5], anc[8], anc[2] );
		Toffoli( anc[7], anc[6], anc[1] );
		Toffoli( anc[1], anc[3], anc[2] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[3], anc[8], q[0] );
		CNOT( anc[5], anc[8] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[7], anc[5], q[0] );
		Toffoli( anc[8], anc[3], anc[7] );
		CNOT( q[0], anc[3] );
		Toffoli( anc[3], anc[8], q[0] );
		Toffoli( anc[6], anc[2], q[0] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[8], anc[7] );
		Toffoli( anc[4], anc[8], anc[7] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[4], anc[5], anc[8] );
		CNOT( anc[6], anc[9] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[6], anc[7], q[0] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[8], q[0], anc[2] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[0], anc[8], anc[6] );
		Toffoli( anc[4], anc[1], anc[3] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[9], anc[6], anc[0] );
		CNOT( anc[8], anc[9] );
		CNOT( anc[7], anc[9] );
		CNOT( anc[8], anc[4] );
		CNOT( anc[2], anc[1] );
		CNOT( q[0], anc[6] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[0], anc[8], anc[6] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[2], anc[1], anc[5] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[4], anc[2], anc[3] );
		CNOT( anc[5], anc[0] );
	} Free(anc, 10) {}
}
// Function 8 with degree 0
// nq: 1, na: 10, ng: 179
void func8R(qbit **q, int n) {
printf("func8R\n");
fflush(stderr);
	qbit *anc[10]; // ancilla
	qbit *nb[33]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[0];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[0];
	nb[23] = q[0];
	nb[24] = q[0];
	nb[25] = q[0];
	nb[26] = q[0];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[0];
	res[0] = q[0];
	// Leaf function
	_computeModule(0, 10, 359, 180, 0, 4, 0);
	acquire(10, anc, 33, nb);
	Recompute (res, 0, anc, 10, 359, 180){
		Toffoli( anc[4], anc[6], anc[8] );
		Toffoli( anc[7], anc[1], anc[0] );
		Toffoli( anc[0], anc[8], anc[7] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[5], anc[4], anc[1] );
		CNOT( anc[5], q[0] );
		CNOT( anc[7], anc[8] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[3], anc[8], anc[2] );
		Toffoli( anc[4], anc[8], anc[5] );
		Toffoli( anc[1], anc[5], anc[3] );
		CNOT( anc[5], anc[8] );
		Toffoli( q[0], anc[0], anc[4] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[7], anc[4], anc[8] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[6], anc[0], anc[1] );
		Toffoli( anc[6], anc[3], anc[5] );
		CNOT( anc[4], q[0] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[5], anc[9] );
		Toffoli( anc[8], anc[7], anc[1] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[3], anc[6], anc[5] );
		Toffoli( q[0], anc[5], anc[1] );
		Toffoli( anc[0], anc[2], anc[7] );
		Toffoli( anc[2], q[0], anc[5] );
		Toffoli( anc[8], q[0], anc[6] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[0], anc[7], anc[8] );
		Toffoli( anc[3], anc[0], anc[8] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[5], anc[9], anc[6] );
		CNOT( anc[8], anc[4] );
		CNOT( anc[7], anc[1] );
		CNOT( anc[3], anc[9] );
		Toffoli( anc[3], anc[8], anc[1] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[8], q[0] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[3], anc[6], anc[7] );
		Toffoli( anc[3], anc[6], anc[9] );
		CNOT( anc[1], anc[4] );
		CNOT( anc[0], anc[8] );
		CNOT( anc[9], anc[0] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[4], anc[9], anc[0] );
		CNOT( anc[0], anc[7] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[8], anc[5], anc[4] );
		Toffoli( anc[9], anc[1], anc[7] );
		Toffoli( anc[3], anc[5], anc[7] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[1], anc[3], anc[6] );
		CNOT( anc[3], anc[8] );
		Toffoli( anc[5], anc[7], anc[6] );
		Toffoli( anc[6], anc[9], anc[8] );
		Toffoli( anc[8], q[0], anc[0] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[4], anc[3], anc[5] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[2], q[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[2], anc[6] );
		Toffoli( anc[8], anc[5], anc[2] );
		Toffoli( anc[3], anc[6], anc[1] );
		Toffoli( anc[9], anc[5], anc[2] );
		Toffoli( anc[7], anc[2], anc[8] );
		Toffoli( anc[2], anc[1], anc[9] );
		Toffoli( anc[7], anc[3], anc[5] );
		Toffoli( anc[4], anc[8], anc[7] );
		Toffoli( anc[3], anc[4], anc[7] );
		Toffoli( q[0], anc[6], anc[7] );
		Toffoli( anc[9], q[0], anc[1] );
		Toffoli( q[0], anc[7], anc[0] );
		Toffoli( anc[1], anc[5], anc[9] );
		Toffoli( anc[5], anc[9], anc[0] );
		CNOT( anc[3], q[0] );
		CNOT( anc[6], anc[2] );
		Toffoli( anc[0], anc[3], anc[6] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[4], anc[5], anc[2] );
		CNOT( anc[3], anc[2] );
		CNOT( anc[3], anc[1] );
		Toffoli( anc[8], anc[2], anc[7] );
		Toffoli( anc[3], anc[7], anc[6] );
		Toffoli( anc[2], anc[9], anc[8] );
		Toffoli( anc[1], anc[6], q[0] );
		CNOT( anc[1], anc[8] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[3], anc[5], anc[8] );
		Toffoli( anc[1], anc[8], anc[5] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[5], anc[1] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[2], anc[9] );
		Toffoli( anc[0], anc[4], q[0] );
		CNOT( q[0], anc[6] );
		CNOT( anc[5], anc[1] );
		CNOT( anc[6], anc[7] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[4], anc[2], q[0] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[7], anc[9], anc[3] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[4], anc[0], anc[8] );
		CNOT( anc[6], anc[8] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[5], anc[6] );
		Toffoli( anc[5], anc[2], anc[9] );
		CNOT( q[0], anc[2] );
		CNOT( anc[0], anc[7] );
		Toffoli( anc[9], anc[4], anc[1] );
		Toffoli( anc[0], anc[3], anc[9] );
		CNOT( anc[4], anc[9] );
		CNOT( anc[2], anc[3] );
		Toffoli( anc[7], anc[8], anc[0] );
		Toffoli( anc[9], anc[1], anc[5] );
		CNOT( anc[0], anc[5] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[8], anc[4], anc[9] );
		Toffoli( anc[6], q[0], anc[8] );
		CNOT( anc[9], anc[0] );
		Toffoli( anc[6], anc[1], q[0] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[4], anc[3] );
		Toffoli( anc[9], anc[3], anc[5] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[5], anc[8], anc[2] );
		Toffoli( anc[7], anc[6], anc[1] );
		Toffoli( anc[1], anc[3], anc[2] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[3], anc[8], q[0] );
		CNOT( anc[5], anc[8] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[7], anc[5], q[0] );
		Toffoli( anc[8], anc[3], anc[7] );
		CNOT( q[0], anc[3] );
		Toffoli( anc[3], anc[8], q[0] );
		Toffoli( anc[6], anc[2], q[0] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[8], anc[7] );
		Toffoli( anc[4], anc[8], anc[7] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[4], anc[5], anc[8] );
		CNOT( anc[6], anc[9] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[6], anc[7], q[0] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[8], q[0], anc[2] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[0], anc[8], anc[6] );
		Toffoli( anc[4], anc[1], anc[3] );
		CNOT( anc[0], anc[2] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[9], anc[6], anc[0] );
		CNOT( anc[8], anc[9] );
		CNOT( anc[7], anc[9] );
		CNOT( anc[8], anc[4] );
		CNOT( anc[2], anc[1] );
		CNOT( q[0], anc[6] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[0], anc[8], anc[6] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[2], anc[1], anc[5] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[4], anc[2], anc[3] );
		CNOT( anc[5], anc[0] );
	}
	Restore {
		CNOT( anc[6], res[0] );
	}
	Unrecompute {
		CNOT( anc[5], anc[0] );
		Toffoli( anc[4], anc[2], anc[3] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[2], anc[1], anc[5] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[0], anc[8], anc[6] );
		CNOT( anc[1], anc[9] );
		CNOT( anc[8], anc[2] );
		CNOT( q[0], anc[6] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[8], anc[4] );
		CNOT( anc[7], anc[9] );
		CNOT( anc[8], anc[9] );
		Toffoli( anc[9], anc[6], anc[0] );
		CNOT( anc[0], anc[4] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[4], anc[1], anc[3] );
		Toffoli( anc[0], anc[8], anc[6] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[8], q[0], anc[2] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[6], anc[7], q[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[6], anc[9] );
		Toffoli( anc[4], anc[5], anc[8] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[4], anc[8], anc[7] );
		CNOT( anc[8], anc[7] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[6], anc[2], q[0] );
		Toffoli( anc[3], anc[8], q[0] );
		CNOT( q[0], anc[3] );
		Toffoli( anc[8], anc[3], anc[7] );
		Toffoli( anc[7], anc[5], q[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[3], anc[7] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[3], anc[8], q[0] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[1], anc[3], anc[2] );
		Toffoli( anc[7], anc[6], anc[1] );
		Toffoli( anc[5], anc[8], anc[2] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[9], anc[3], anc[5] );
		CNOT( anc[4], anc[3] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[6], anc[1], q[0] );
		CNOT( anc[9], anc[0] );
		Toffoli( anc[6], q[0], anc[8] );
		Toffoli( anc[8], anc[4], anc[9] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( anc[5], anc[8] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[9], anc[1], anc[5] );
		Toffoli( anc[7], anc[8], anc[0] );
		CNOT( anc[2], anc[3] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[0], anc[3], anc[9] );
		Toffoli( anc[9], anc[4], anc[1] );
		CNOT( anc[0], anc[7] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[5], anc[2], anc[9] );
		CNOT( anc[5], anc[6] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[6], anc[8] );
		Toffoli( anc[4], anc[0], anc[8] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[7], anc[9], anc[3] );
		CNOT( anc[1], anc[9] );
		Toffoli( anc[4], anc[2], q[0] );
		CNOT( anc[0], anc[4] );
		CNOT( anc[6], anc[7] );
		CNOT( anc[5], anc[1] );
		CNOT( q[0], anc[6] );
		Toffoli( anc[0], anc[4], q[0] );
		CNOT( anc[2], anc[9] );
		CNOT( anc[3], anc[7] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[5], anc[1] );
		CNOT( anc[3], anc[5] );
		Toffoli( anc[1], anc[8], anc[5] );
		Toffoli( anc[3], anc[5], anc[8] );
		CNOT( anc[1], anc[9] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[1], anc[8] );
		Toffoli( anc[1], anc[6], q[0] );
		Toffoli( anc[2], anc[9], anc[8] );
		Toffoli( anc[3], anc[7], anc[6] );
		Toffoli( anc[8], anc[2], anc[7] );
		CNOT( anc[3], anc[1] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[4], anc[5], anc[2] );
		CNOT( anc[9], anc[5] );
		Toffoli( anc[0], anc[3], anc[6] );
		CNOT( anc[6], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[5], anc[9], anc[0] );
		Toffoli( anc[1], anc[5], anc[9] );
		Toffoli( q[0], anc[7], anc[0] );
		Toffoli( anc[9], q[0], anc[1] );
		Toffoli( q[0], anc[6], anc[7] );
		Toffoli( anc[3], anc[4], anc[7] );
		Toffoli( anc[4], anc[8], anc[7] );
		Toffoli( anc[7], anc[3], anc[5] );
		Toffoli( anc[2], anc[1], anc[9] );
		Toffoli( anc[7], anc[2], anc[8] );
		Toffoli( anc[9], anc[5], anc[2] );
		Toffoli( anc[3], anc[6], anc[1] );
		Toffoli( anc[8], anc[5], anc[2] );
		CNOT( anc[2], anc[6] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[2], q[0] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[9], anc[2] );
		Toffoli( anc[4], anc[3], anc[5] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[8], q[0], anc[0] );
		Toffoli( anc[6], anc[9], anc[8] );
		Toffoli( anc[5], anc[7], anc[6] );
		CNOT( anc[3], anc[8] );
		Toffoli( anc[1], anc[3], anc[6] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[3], anc[5], anc[7] );
		Toffoli( anc[9], anc[1], anc[7] );
		Toffoli( anc[8], anc[5], anc[4] );
		CNOT( anc[8], q[0] );
		CNOT( anc[0], anc[7] );
		Toffoli( anc[4], anc[9], anc[0] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[9], anc[0] );
		CNOT( anc[0], anc[8] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[3], anc[6], anc[9] );
		Toffoli( anc[3], anc[6], anc[7] );
		CNOT( anc[5], anc[0] );
		CNOT( anc[8], q[0] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[3], anc[8], anc[1] );
		CNOT( anc[3], anc[9] );
		CNOT( anc[7], anc[1] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[5], anc[9], anc[6] );
		CNOT( anc[6], q[0] );
		Toffoli( anc[3], anc[0], anc[8] );
		Toffoli( anc[0], anc[7], anc[8] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[8], q[0], anc[6] );
		Toffoli( anc[2], q[0], anc[5] );
		Toffoli( anc[0], anc[2], anc[7] );
		Toffoli( q[0], anc[5], anc[1] );
		Toffoli( anc[3], anc[6], anc[5] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[8], anc[7], anc[1] );
		CNOT( anc[5], anc[9] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[4], q[0] );
		Toffoli( anc[6], anc[3], anc[5] );
		Toffoli( anc[6], anc[0], anc[1] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[7], anc[4], anc[8] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[4] );
		CNOT( anc[5], anc[8] );
		Toffoli( anc[1], anc[5], anc[3] );
		Toffoli( anc[4], anc[8], anc[5] );
		Toffoli( anc[3], anc[8], anc[2] );
		CNOT( anc[2], anc[6] );
		CNOT( anc[7], anc[8] );
		CNOT( anc[5], q[0] );
		Toffoli( anc[5], anc[4], anc[1] );
		CNOT( anc[8], anc[4] );
		Toffoli( anc[0], anc[8], anc[7] );
		Toffoli( anc[7], anc[1], anc[0] );
		Toffoli( anc[4], anc[6], anc[8] );
	} Refree(anc, 10) {}
}
// Function 7 with degree 0
// nq: 1, na: 2, ng: 45
void func7(qbit **q, int n) {
printf("func7\n");
fflush(stderr);
	qbit *anc[2]; // ancilla
	qbit *nb[35]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[0];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[0];
	nb[23] = q[0];
	nb[24] = q[0];
	nb[25] = q[0];
	nb[26] = q[0];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[0];
	nb[33] = q[0];
	nb[34] = q[0];
	res[0] = q[0];
	// Leaf function
	Compute (0, 2, 91, 46, 0, 4, 0) {
		acquire(2, anc, 35, nb);
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( q[0], anc[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
	}
	Store {
		CNOT( anc[0], res[0] );
	}
	Uncompute(res, 0, anc, 2, 91, 46){
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( anc[1], anc[0] );
	} Free(anc, 2) {}
}
// Function 7 with degree 0
// nq: 1, na: 2, ng: 45
void func7R(qbit **q, int n) {
printf("func7R\n");
fflush(stderr);
	qbit *anc[2]; // ancilla
	qbit *nb[35]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[0];
	nb[20] = q[0];
	nb[21] = q[0];
	nb[22] = q[0];
	nb[23] = q[0];
	nb[24] = q[0];
	nb[25] = q[0];
	nb[26] = q[0];
	nb[27] = q[0];
	nb[28] = q[0];
	nb[29] = q[0];
	nb[30] = q[0];
	nb[31] = q[0];
	nb[32] = q[0];
	nb[33] = q[0];
	nb[34] = q[0];
	res[0] = q[0];
	// Leaf function
	_computeModule(0, 2, 91, 46, 0, 4, 0);
	acquire(2, anc, 35, nb);
	Recompute (res, 0, anc, 2, 91, 46){
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], q[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( anc[1], anc[0] );
	}
	Restore {
		CNOT( anc[0], res[0] );
	}
	Unrecompute {
		CNOT( anc[1], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		Toffoli( q[0], anc[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( q[0], anc[1] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[0], q[0] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[0] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( anc[1], anc[0], q[0] );
		Toffoli( anc[0], anc[1], q[0] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		Toffoli( q[0], anc[0], anc[1] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( anc[1], q[0], anc[0] );
		Toffoli( q[0], anc[1], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[0], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[1], anc[0], q[0] );
	} Refree(anc, 2) {}
}
// Function 6 with degree 0
// nq: 1, na: 14, ng: 14
void func6(qbit **q, int n) {
printf("func6\n");
fflush(stderr);
	qbit *anc[14]; // ancilla
	qbit *nb[3]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	res[0] = q[0];
	// Leaf function
	Compute (0, 14, 29, 15, 0, 4, 0) {
		acquire(14, anc, 3, nb);
		CNOT( anc[12], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[4], anc[12], anc[11] );
		CNOT( anc[0], anc[12] );
		Toffoli( anc[3], q[0], anc[1] );
		Toffoli( anc[0], anc[9], anc[8] );
		Toffoli( anc[12], anc[6], q[0] );
		CNOT( anc[13], anc[11] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[2], anc[7], anc[4] );
		CNOT( anc[4], anc[2] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[7], anc[9], anc[0] );
	}
	Store {
		CNOT( anc[0], res[0] );
	}
	Uncompute(res, 0, anc, 14, 29, 15){
		Toffoli( anc[7], anc[9], anc[0] );
		CNOT( anc[4], anc[9] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[2], anc[7], anc[4] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[13], anc[11] );
		Toffoli( anc[12], anc[6], q[0] );
		Toffoli( anc[0], anc[9], anc[8] );
		Toffoli( anc[3], q[0], anc[1] );
		CNOT( anc[0], anc[12] );
		Toffoli( anc[4], anc[12], anc[11] );
		CNOT( anc[6], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[12], anc[2] );
	} Free(anc, 14) {}
}
// Function 6 with degree 0
// nq: 1, na: 14, ng: 14
void func6R(qbit **q, int n) {
printf("func6R\n");
fflush(stderr);
	qbit *anc[14]; // ancilla
	qbit *nb[3]; // interacting bits
	qbit *res[1];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	res[0] = q[0];
	// Leaf function
	_computeModule(0, 14, 29, 15, 0, 4, 0);
	acquire(14, anc, 3, nb);
	Recompute (res, 0, anc, 14, 29, 15){
		Toffoli( anc[7], anc[9], anc[0] );
		CNOT( anc[4], anc[9] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[2], anc[7], anc[4] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[13], anc[11] );
		Toffoli( anc[12], anc[6], q[0] );
		Toffoli( anc[0], anc[9], anc[8] );
		Toffoli( anc[3], q[0], anc[1] );
		CNOT( anc[0], anc[12] );
		Toffoli( anc[4], anc[12], anc[11] );
		CNOT( anc[6], anc[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[12], anc[2] );
	}
	Restore {
		CNOT( anc[0], res[0] );
	}
	Unrecompute {
		CNOT( anc[12], anc[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[4], anc[12], anc[11] );
		CNOT( anc[0], anc[12] );
		Toffoli( anc[3], q[0], anc[1] );
		Toffoli( anc[0], anc[9], anc[8] );
		Toffoli( anc[12], anc[6], q[0] );
		CNOT( anc[13], anc[11] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[2], anc[7], anc[4] );
		CNOT( anc[4], anc[2] );
		CNOT( anc[4], anc[9] );
		Toffoli( anc[7], anc[9], anc[0] );
	} Refree(anc, 14) {}
}
// Function 5 with degree 4
// nq: 1, na: 10, ng: 95
void func5(qbit **q, int n) {
printf("func5\n");
fflush(stderr);
	qbit *anc[10]; // ancilla
	qbit *nb[20]; // interacting bits
	qbit *res[1];
	qbit *nq0[2];
	qbit *nq1[2];
	qbit *nq2[2];
	qbit *nq3[2];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[0];
	res[0] = q[0];
	// Non-leaf function
	Compute (0, 10, 191, 96, 4, 4, 0){
		acquire(10, anc, 20, nb);
	nq0[0] = anc[1];
	nq0[1] = anc[4];
	nq1[0] = anc[3];
	nq1[1] = anc[9];
	nq2[0] = anc[8];
	nq2[1] = anc[2];
	nq3[0] = anc[6];
	nq3[1] = q[0];
		Toffoli( anc[0], q[0], anc[1] );
		func18(nq3, 2);
		CNOT( anc[2], anc[6] );
		Toffoli( anc[4], q[0], anc[0] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[0], anc[3], anc[7] );
		CNOT( anc[3], q[0] );
		CNOT( anc[8], anc[2] );
		CNOT( q[0], anc[1] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[1], anc[7], anc[5] );
		CNOT( anc[7], anc[2] );
		Toffoli( anc[2], anc[5], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[3], anc[5] );
		Toffoli( q[0], anc[7], anc[5] );
		Toffoli( anc[2], anc[7], anc[0] );
		Toffoli( anc[6], anc[8], anc[2] );
		CNOT( q[0], anc[9] );
		Toffoli( anc[5], anc[3], anc[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[1], anc[5] );
		Toffoli( anc[2], anc[7], anc[1] );
		Toffoli( anc[6], anc[1], q[0] );
		CNOT( anc[7], q[0] );
		Toffoli( anc[1], anc[8], anc[6] );
		func15(nq0, 2);
		Toffoli( anc[6], anc[3], anc[5] );
		Toffoli( q[0], anc[7], anc[4] );
		Toffoli( anc[0], anc[2], anc[6] );
		Toffoli( anc[3], anc[6], anc[9] );
		Toffoli( anc[5], anc[4], anc[9] );
		CNOT( anc[4], anc[2] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[6], anc[5], anc[2] );
		Toffoli( anc[4], anc[8], anc[2] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[3], anc[9] );
		CNOT( anc[9], anc[3] );
		Toffoli( anc[4], anc[1], anc[7] );
		Toffoli( anc[9], anc[8], anc[4] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[2], anc[4], anc[8] );
		CNOT( anc[6], anc[5] );
		Toffoli( anc[3], anc[1], anc[7] );
		Toffoli( anc[8], anc[2], anc[0] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[1], anc[6], anc[9] );
		Toffoli( anc[7], anc[3], q[0] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[1], anc[6], anc[9] );
		CNOT( anc[7], anc[8] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[1], anc[8], anc[4] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[7], anc[3] );
		CNOT( anc[5], q[0] );
		CNOT( anc[8], anc[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[9], anc[7], anc[5] );
		CNOT( anc[3], anc[2] );
		Toffoli( q[0], anc[3], anc[5] );
		CNOT( anc[7], anc[2] );
		Toffoli( anc[5], anc[8], anc[7] );
		CNOT( anc[2], anc[9] );
		func16(nq1, 2);
		CNOT( anc[8], anc[9] );
		Toffoli( anc[1], anc[8], anc[5] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[0], anc[3], anc[8] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[2], anc[6], anc[8] );
		Toffoli( anc[9], anc[6], anc[1] );
		Toffoli( anc[9], anc[2], anc[1] );
		CNOT( anc[4], anc[1] );
		Toffoli( q[0], anc[4], anc[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[8], anc[3] );
		Toffoli( anc[6], anc[0], anc[5] );
		Toffoli( anc[6], anc[7], anc[8] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[4], q[0], anc[5] );
		CNOT( anc[2], anc[4] );
		func17(nq2, 2);
		Toffoli( q[0], anc[5], anc[9] );
		CNOT( anc[7], anc[3] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[0], anc[0], anc[6] );
		Toffoli( anc[1], anc[5], anc[6] );
		CNOT( anc[6], anc[9] );
		Toffoli( q[0], anc[7], anc[0] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[1], anc[2], anc[4] );
		CNOT( anc[6], anc[7] );
		CNOT( anc[8], anc[4] );
	}
	Store {
		CNOT( anc[1], res[0] );
	}
	Uncompute(res, 0, anc, 10, 191, 96){
		CNOT( anc[8], anc[4] );
		CNOT( anc[6], anc[7] );
		Toffoli( anc[1], anc[2], anc[4] );
		CNOT( anc[0], anc[6] );
		Toffoli( q[0], anc[7], anc[0] );
		CNOT( anc[6], anc[9] );
		Toffoli( anc[1], anc[5], anc[6] );
		Toffoli( q[0], anc[0], anc[6] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[7], anc[3] );
		Toffoli( q[0], anc[5], anc[9] );
		func17R(nq2, 2);
		CNOT( anc[2], anc[4] );
		Toffoli( anc[4], q[0], anc[5] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[6], anc[7], anc[8] );
		Toffoli( anc[6], anc[0], anc[5] );
		CNOT( anc[8], anc[3] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[4], anc[5] );
		Toffoli( q[0], anc[4], anc[0] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[9], anc[2], anc[1] );
		Toffoli( anc[9], anc[6], anc[1] );
		Toffoli( anc[2], anc[6], anc[8] );
		CNOT( anc[8], q[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[0], anc[3], anc[8] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[1], anc[8], anc[5] );
		CNOT( anc[8], anc[9] );
		func16R(nq1, 2);
		CNOT( anc[2], anc[9] );
		Toffoli( anc[5], anc[8], anc[7] );
		CNOT( anc[7], anc[2] );
		Toffoli( q[0], anc[3], anc[5] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[9], anc[7], anc[5] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[8], anc[1] );
		CNOT( anc[5], q[0] );
		CNOT( anc[7], anc[3] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[1], anc[8], anc[4] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[7], anc[8] );
		Toffoli( anc[1], anc[6], anc[9] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[7], anc[3], q[0] );
		Toffoli( anc[1], anc[6], anc[9] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[8], anc[2], anc[0] );
		Toffoli( anc[3], anc[1], anc[7] );
		CNOT( anc[6], anc[5] );
		Toffoli( anc[2], anc[4], anc[8] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[9], anc[8], anc[4] );
		Toffoli( anc[4], anc[1], anc[7] );
		CNOT( anc[9], anc[3] );
		CNOT( anc[3], anc[9] );
		Toffoli( anc[2], anc[6], q[0] );
		Toffoli( anc[4], anc[8], anc[2] );
		Toffoli( anc[6], anc[5], anc[2] );
		CNOT( q[0], anc[2] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[5], anc[4], anc[9] );
		Toffoli( anc[3], anc[6], anc[9] );
		Toffoli( anc[0], anc[2], anc[6] );
		Toffoli( q[0], anc[7], anc[4] );
		Toffoli( anc[6], anc[3], anc[5] );
		func15R(nq0, 2);
		Toffoli( anc[1], anc[8], anc[6] );
		CNOT( anc[7], q[0] );
		Toffoli( anc[6], anc[1], q[0] );
		Toffoli( anc[2], anc[7], anc[1] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[5], anc[3], anc[0] );
		CNOT( q[0], anc[9] );
		Toffoli( anc[6], anc[8], anc[2] );
		Toffoli( anc[2], anc[7], anc[0] );
		Toffoli( q[0], anc[7], anc[5] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[2], anc[5], anc[0] );
		CNOT( anc[7], anc[2] );
		Toffoli( anc[1], anc[7], anc[5] );
		CNOT( anc[6], anc[3] );
		CNOT( q[0], anc[1] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[0], anc[3], anc[7] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[4], q[0], anc[0] );
		CNOT( anc[2], anc[6] );
		func18R(nq3, 2);
		Toffoli( anc[0], q[0], anc[1] );
	} Free(anc, 10) {}
}
// Function 5 with degree 4
// nq: 1, na: 10, ng: 95
void func5R(qbit **q, int n) {
printf("func5R\n");
fflush(stderr);
	qbit *anc[10]; // ancilla
	qbit *nb[20]; // interacting bits
	qbit *res[1];
	qbit *nq0[2];
	qbit *nq1[2];
	qbit *nq2[2];
	qbit *nq3[2];
	nb[0] = q[0];
	nb[1] = q[0];
	nb[2] = q[0];
	nb[3] = q[0];
	nb[4] = q[0];
	nb[5] = q[0];
	nb[6] = q[0];
	nb[7] = q[0];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[0];
	nb[11] = q[0];
	nb[12] = q[0];
	nb[13] = q[0];
	nb[14] = q[0];
	nb[15] = q[0];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[0];
	nb[19] = q[0];
	res[0] = q[0];
	// Non-leaf function
	_computeModule(0, 10, 191, 96, 4, 4, 0);
	acquire(10, anc, 20, nb);
	nq0[0] = anc[1];
	nq0[1] = anc[4];
	nq1[0] = anc[3];
	nq1[1] = anc[9];
	nq2[0] = anc[8];
	nq2[1] = anc[2];
	nq3[0] = anc[6];
	nq3[1] = q[0];
	Recompute(res, 0, anc, 10, 191, 96){
		Toffoli( anc[0], q[0], anc[1] );
		func18(nq3, 2);
		CNOT( anc[2], anc[6] );
		Toffoli( anc[4], q[0], anc[0] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[0], anc[3], anc[7] );
		CNOT( anc[3], q[0] );
		CNOT( anc[8], anc[2] );
		CNOT( q[0], anc[1] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[1], anc[7], anc[5] );
		CNOT( anc[7], anc[2] );
		Toffoli( anc[2], anc[5], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[3], anc[5] );
		Toffoli( q[0], anc[7], anc[5] );
		Toffoli( anc[2], anc[7], anc[0] );
		Toffoli( anc[6], anc[8], anc[2] );
		CNOT( q[0], anc[9] );
		Toffoli( anc[5], anc[3], anc[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[1], anc[5] );
		Toffoli( anc[2], anc[7], anc[1] );
		Toffoli( anc[6], anc[1], q[0] );
		CNOT( anc[7], q[0] );
		Toffoli( anc[1], anc[8], anc[6] );
		func15(nq0, 2);
		Toffoli( anc[6], anc[3], anc[5] );
		Toffoli( q[0], anc[7], anc[4] );
		Toffoli( anc[0], anc[2], anc[6] );
		Toffoli( anc[3], anc[6], anc[9] );
		Toffoli( anc[5], anc[4], anc[9] );
		CNOT( anc[4], anc[2] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[6], anc[5], anc[2] );
		Toffoli( anc[4], anc[8], anc[2] );
		Toffoli( anc[2], anc[6], q[0] );
		CNOT( anc[3], anc[9] );
		CNOT( anc[9], anc[3] );
		Toffoli( anc[4], anc[1], anc[7] );
		Toffoli( anc[9], anc[8], anc[4] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[2], anc[4], anc[8] );
		CNOT( anc[6], anc[5] );
		Toffoli( anc[3], anc[1], anc[7] );
		Toffoli( anc[8], anc[2], anc[0] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[1], anc[6], anc[9] );
		Toffoli( anc[7], anc[3], q[0] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[1], anc[6], anc[9] );
		CNOT( anc[7], anc[8] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[1], anc[8], anc[4] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[7], anc[3] );
		CNOT( anc[5], q[0] );
		CNOT( anc[8], anc[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[9], anc[7], anc[5] );
		CNOT( anc[3], anc[2] );
		Toffoli( q[0], anc[3], anc[5] );
		CNOT( anc[7], anc[2] );
		Toffoli( anc[5], anc[8], anc[7] );
		CNOT( anc[2], anc[9] );
		func16(nq1, 2);
		CNOT( anc[8], anc[9] );
		Toffoli( anc[1], anc[8], anc[5] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[0], anc[3], anc[8] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[8], q[0] );
		Toffoli( anc[2], anc[6], anc[8] );
		Toffoli( anc[9], anc[6], anc[1] );
		Toffoli( anc[9], anc[2], anc[1] );
		CNOT( anc[4], anc[1] );
		Toffoli( q[0], anc[4], anc[0] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[8], anc[3] );
		Toffoli( anc[6], anc[0], anc[5] );
		Toffoli( anc[6], anc[7], anc[8] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[4], q[0], anc[5] );
		CNOT( anc[2], anc[4] );
		func17(nq2, 2);
		Toffoli( q[0], anc[5], anc[9] );
		CNOT( anc[7], anc[3] );
		CNOT( anc[2], anc[1] );
		Toffoli( q[0], anc[0], anc[6] );
		Toffoli( anc[1], anc[5], anc[6] );
		CNOT( anc[6], anc[9] );
		Toffoli( q[0], anc[7], anc[0] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[1], anc[2], anc[4] );
		CNOT( anc[6], anc[7] );
		CNOT( anc[8], anc[4] );
	}
	Restore {
		CNOT( anc[1], res[0] );
	}
	Unrecompute {
		CNOT( anc[8], anc[4] );
		CNOT( anc[6], anc[7] );
		Toffoli( anc[1], anc[2], anc[4] );
		CNOT( anc[0], anc[6] );
		Toffoli( q[0], anc[7], anc[0] );
		CNOT( anc[6], anc[9] );
		Toffoli( anc[1], anc[5], anc[6] );
		Toffoli( q[0], anc[0], anc[6] );
		CNOT( anc[2], anc[1] );
		CNOT( anc[7], anc[3] );
		Toffoli( q[0], anc[5], anc[9] );
		func17R(nq2, 2);
		CNOT( anc[2], anc[4] );
		Toffoli( anc[4], q[0], anc[5] );
		CNOT( anc[0], anc[4] );
		Toffoli( anc[6], anc[7], anc[8] );
		Toffoli( anc[6], anc[0], anc[5] );
		CNOT( anc[8], anc[3] );
		CNOT( anc[4], anc[5] );
		CNOT( anc[4], anc[5] );
		Toffoli( q[0], anc[4], anc[0] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[9], anc[2], anc[1] );
		Toffoli( anc[9], anc[6], anc[1] );
		Toffoli( anc[2], anc[6], anc[8] );
		CNOT( anc[8], q[0] );
		CNOT( anc[1], anc[2] );
		Toffoli( anc[0], anc[3], anc[8] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[1], anc[8], anc[5] );
		CNOT( anc[8], anc[9] );
		func16R(nq1, 2);
		CNOT( anc[2], anc[9] );
		Toffoli( anc[5], anc[8], anc[7] );
		CNOT( anc[7], anc[2] );
		Toffoli( q[0], anc[3], anc[5] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[9], anc[7], anc[5] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[8], anc[1] );
		CNOT( anc[5], q[0] );
		CNOT( anc[7], anc[3] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[1], anc[8], anc[4] );
		CNOT( anc[0], anc[6] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[9], anc[2] );
		CNOT( anc[7], anc[8] );
		Toffoli( anc[1], anc[6], anc[9] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[7], anc[3], q[0] );
		Toffoli( anc[1], anc[6], anc[9] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[8], anc[2], anc[0] );
		Toffoli( anc[3], anc[1], anc[7] );
		CNOT( anc[6], anc[5] );
		Toffoli( anc[2], anc[4], anc[8] );
		CNOT( anc[0], anc[1] );
		Toffoli( anc[9], anc[8], anc[4] );
		Toffoli( anc[4], anc[1], anc[7] );
		CNOT( anc[9], anc[3] );
		CNOT( anc[3], anc[9] );
		Toffoli( anc[2], anc[6], q[0] );
		Toffoli( anc[4], anc[8], anc[2] );
		Toffoli( anc[6], anc[5], anc[2] );
		CNOT( q[0], anc[2] );
		CNOT( anc[4], anc[2] );
		Toffoli( anc[5], anc[4], anc[9] );
		Toffoli( anc[3], anc[6], anc[9] );
		Toffoli( anc[0], anc[2], anc[6] );
		Toffoli( q[0], anc[7], anc[4] );
		Toffoli( anc[6], anc[3], anc[5] );
		func15R(nq0, 2);
		Toffoli( anc[1], anc[8], anc[6] );
		CNOT( anc[7], q[0] );
		Toffoli( anc[6], anc[1], q[0] );
		Toffoli( anc[2], anc[7], anc[1] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[4], anc[5] );
		Toffoli( anc[5], anc[3], anc[0] );
		CNOT( q[0], anc[9] );
		Toffoli( anc[6], anc[8], anc[2] );
		Toffoli( anc[2], anc[7], anc[0] );
		Toffoli( q[0], anc[7], anc[5] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[1], anc[0] );
		Toffoli( anc[2], anc[5], anc[0] );
		CNOT( anc[7], anc[2] );
		Toffoli( anc[1], anc[7], anc[5] );
		CNOT( anc[6], anc[3] );
		CNOT( q[0], anc[1] );
		CNOT( anc[8], anc[2] );
		CNOT( anc[3], q[0] );
		Toffoli( anc[0], anc[3], anc[7] );
		CNOT( anc[8], anc[1] );
		Toffoli( anc[4], q[0], anc[0] );
		CNOT( anc[2], anc[6] );
		func18R(nq3, 2);
		Toffoli( anc[0], q[0], anc[1] );
	} Refree(anc, 10) {}
}
// Function 4 with degree 3
// nq: 4, na: 9, ng: 227
void func4(qbit **q, int n) {
printf("func4\n");
fflush(stderr);
	qbit *anc[9]; // ancilla
	qbit *nb[172]; // interacting bits
	qbit *res[4];
	qbit *nq0[4];
	qbit *nq1[4];
	qbit *nq2[4];
	nb[0] = q[1];
	nb[1] = q[2];
	nb[2] = q[3];
	nb[3] = q[1];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[3];
	nb[7] = q[2];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[1];
	nb[11] = q[2];
	nb[12] = q[3];
	nb[13] = q[1];
	nb[14] = q[3];
	nb[15] = q[2];
	nb[16] = q[3];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[0];
	nb[20] = q[3];
	nb[21] = q[2];
	nb[22] = q[1];
	nb[23] = q[1];
	nb[24] = q[0];
	nb[25] = q[1];
	nb[26] = q[2];
	nb[27] = q[1];
	nb[28] = q[1];
	nb[29] = q[1];
	nb[30] = q[0];
	nb[31] = q[1];
	nb[32] = q[0];
	nb[33] = q[0];
	nb[34] = q[2];
	nb[35] = q[3];
	nb[36] = q[2];
	nb[37] = q[3];
	nb[38] = q[0];
	nb[39] = q[3];
	nb[40] = q[1];
	nb[41] = q[1];
	nb[42] = q[1];
	nb[43] = q[0];
	nb[44] = q[0];
	nb[45] = q[1];
	nb[46] = q[1];
	nb[47] = q[2];
	nb[48] = q[0];
	nb[49] = q[2];
	nb[50] = q[1];
	nb[51] = q[3];
	nb[52] = q[1];
	nb[53] = q[0];
	nb[54] = q[1];
	nb[55] = q[1];
	nb[56] = q[2];
	nb[57] = q[1];
	nb[58] = q[0];
	nb[59] = q[2];
	nb[60] = q[1];
	nb[61] = q[1];
	nb[62] = q[3];
	nb[63] = q[2];
	nb[64] = q[1];
	nb[65] = q[0];
	nb[66] = q[3];
	nb[67] = q[0];
	nb[68] = q[1];
	nb[69] = q[3];
	nb[70] = q[1];
	nb[71] = q[0];
	nb[72] = q[3];
	nb[73] = q[1];
	nb[74] = q[3];
	nb[75] = q[1];
	nb[76] = q[0];
	nb[77] = q[3];
	nb[78] = q[2];
	nb[79] = q[1];
	nb[80] = q[3];
	nb[81] = q[2];
	nb[82] = q[1];
	nb[83] = q[3];
	nb[84] = q[3];
	nb[85] = q[1];
	nb[86] = q[3];
	nb[87] = q[0];
	nb[88] = q[2];
	nb[89] = q[0];
	nb[90] = q[2];
	nb[91] = q[3];
	nb[92] = q[0];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[1];
	nb[96] = q[0];
	nb[97] = q[2];
	nb[98] = q[2];
	nb[99] = q[0];
	nb[100] = q[3];
	nb[101] = q[2];
	nb[102] = q[0];
	nb[103] = q[3];
	nb[104] = q[0];
	nb[105] = q[1];
	nb[106] = q[1];
	nb[107] = q[0];
	nb[108] = q[1];
	nb[109] = q[1];
	nb[110] = q[1];
	nb[111] = q[3];
	nb[112] = q[0];
	nb[113] = q[3];
	nb[114] = q[0];
	nb[115] = q[2];
	nb[116] = q[0];
	nb[117] = q[1];
	nb[118] = q[0];
	nb[119] = q[2];
	nb[120] = q[2];
	nb[121] = q[1];
	nb[122] = q[2];
	nb[123] = q[0];
	nb[124] = q[2];
	nb[125] = q[2];
	nb[126] = q[0];
	nb[127] = q[2];
	nb[128] = q[3];
	nb[129] = q[3];
	nb[130] = q[1];
	nb[131] = q[2];
	nb[132] = q[0];
	nb[133] = q[3];
	nb[134] = q[1];
	nb[135] = q[1];
	nb[136] = q[1];
	nb[137] = q[3];
	nb[138] = q[1];
	nb[139] = q[3];
	nb[140] = q[0];
	nb[141] = q[1];
	nb[142] = q[0];
	nb[143] = q[1];
	nb[144] = q[3];
	nb[145] = q[3];
	nb[146] = q[0];
	nb[147] = q[2];
	nb[148] = q[1];
	nb[149] = q[0];
	nb[150] = q[0];
	nb[151] = q[3];
	nb[152] = q[3];
	nb[153] = q[3];
	nb[154] = q[3];
	nb[155] = q[2];
	nb[156] = q[3];
	nb[157] = q[1];
	nb[158] = q[2];
	nb[159] = q[3];
	nb[160] = q[2];
	nb[161] = q[3];
	nb[162] = q[2];
	nb[163] = q[1];
	nb[164] = q[1];
	nb[165] = q[3];
	nb[166] = q[3];
	nb[167] = q[0];
	nb[168] = q[3];
	nb[169] = q[0];
	nb[170] = q[2];
	nb[171] = q[0];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[1];
	res[3] = q[3];
	// Non-leaf function
	Compute (0, 9, 458, 231, 3, 128, 0){
		acquire(9, anc, 172, nb);
	nq0[0] = q[0];
	nq0[1] = anc[4];
	nq0[2] = anc[1];
	nq0[3] = anc[8];
	nq1[0] = anc[2];
	nq1[1] = q[2];
	nq1[2] = anc[6];
	nq1[3] = anc[5];
	nq2[0] = anc[3];
	nq2[1] = anc[0];
	nq2[2] = anc[7];
	nq2[3] = q[1];
		Toffoli( anc[1], q[0], q[2] );
		Toffoli( q[0], anc[3], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( anc[7], anc[6], anc[3] );
		CNOT( q[2], anc[6] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[6], anc[0], anc[8] );
		CNOT( anc[8], anc[6] );
		CNOT( q[1], q[2] );
		CNOT( anc[5], anc[2] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[6], anc[0] );
		Toffoli( q[2], anc[1], anc[6] );
		CNOT( anc[5], anc[8] );
		CNOT( q[0], q[1] );
		CNOT( anc[8], anc[5] );
		CNOT( anc[0], anc[7] );
		CNOT( anc[1], q[3] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[8], anc[3], q[1] );
		Toffoli( anc[8], anc[1], q[1] );
		Toffoli( anc[8], anc[1], anc[3] );
		Toffoli( q[3], anc[1], anc[8] );
		CNOT( q[1], anc[8] );
		func12(nq0, 4);
		Toffoli( anc[6], anc[5], anc[0] );
		CNOT( anc[0], anc[3] );
		CNOT( anc[4], q[1] );
		CNOT( q[0], anc[4] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[4], q[1] );
		Toffoli( anc[5], anc[3], q[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[2], anc[6], anc[2] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[6], q[2] );
		Toffoli( anc[6], anc[7], q[0] );
		Toffoli( anc[7], anc[1], anc[3] );
		Toffoli( anc[6], anc[8], anc[1] );
		CNOT( q[1], anc[3] );
		CNOT( q[0], anc[4] );
		Toffoli( anc[0], anc[1], anc[5] );
		CNOT( anc[5], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], q[1], anc[1] );
		CNOT( q[1], anc[4] );
		CNOT( q[1], q[3] );
		Toffoli( q[1], q[2], q[0] );
		func14(nq2, 4);
		CNOT( anc[3], q[0] );
		Toffoli( anc[3], q[1], q[3] );
		Toffoli( anc[0], q[2], anc[5] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[7], anc[2], q[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], anc[8] );
		Toffoli( q[3], anc[1], anc[7] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[8], anc[5], anc[7] );
		CNOT( q[0], anc[8] );
		CNOT( anc[5], anc[1] );
		CNOT( q[2], anc[2] );
		Toffoli( q[3], anc[1], anc[3] );
		Toffoli( anc[0], anc[5], q[1] );
		Toffoli( anc[3], anc[1], anc[2] );
		Toffoli( anc[8], q[3], anc[1] );
		CNOT( q[0], anc[2] );
		Toffoli( q[2], q[1], anc[2] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[4], q[0] );
		Toffoli( q[3], anc[2], anc[6] );
		CNOT( q[3], anc[3] );
		Toffoli( anc[4], anc[1], anc[5] );
		Toffoli( q[1], anc[2], anc[3] );
		CNOT( anc[7], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( q[1], anc[6] );
		CNOT( q[1], anc[8] );
		Toffoli( q[1], anc[3], anc[7] );
		CNOT( q[1], q[0] );
		Toffoli( anc[3], anc[8], anc[6] );
		CNOT( anc[4], q[3] );
		Toffoli( anc[2], anc[1], anc[4] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[4], q[2] );
		Toffoli( q[1], anc[5], anc[7] );
		CNOT( anc[2], anc[5] );
		Toffoli( anc[4], anc[3], anc[7] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[0], anc[8], anc[6] );
		Toffoli( q[3], anc[7], anc[2] );
		Toffoli( q[3], anc[0], anc[1] );
		CNOT( anc[2], anc[8] );
		CNOT( q[0], anc[1] );
		CNOT( q[0], q[2] );
		CNOT( q[2], q[1] );
		Toffoli( anc[6], q[0], q[3] );
		CNOT( anc[1], q[2] );
		Toffoli( anc[3], anc[2], anc[7] );
		CNOT( q[1], anc[6] );
		CNOT( anc[1], anc[4] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[6], anc[5], anc[4] );
		CNOT( q[2], anc[6] );
		CNOT( anc[0], anc[2] );
		CNOT( q[1], q[3] );
		Toffoli( anc[7], anc[4], anc[6] );
		Toffoli( anc[8], q[3], anc[6] );
		Toffoli( q[3], anc[8], anc[4] );
		CNOT( q[3], anc[1] );
		CNOT( anc[0], anc[3] );
		CNOT( anc[7], q[2] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], q[2], q[3] );
		Toffoli( q[0], anc[0], anc[8] );
		Toffoli( q[0], anc[3], anc[1] );
		Toffoli( anc[5], anc[8], anc[3] );
		CNOT( q[1], q[0] );
		Toffoli( anc[2], anc[0], anc[3] );
		Toffoli( anc[6], anc[7], q[3] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[2], q[2], q[0] );
		CNOT( anc[7], q[3] );
		Toffoli( anc[6], q[3], anc[8] );
		CNOT( anc[3], anc[4] );
		Toffoli( anc[0], anc[8], anc[4] );
		Toffoli( anc[0], anc[6], anc[3] );
		CNOT( anc[2], anc[5] );
		Toffoli( anc[2], anc[3], anc[5] );
		Toffoli( q[3], anc[2], anc[4] );
		Toffoli( anc[3], anc[8], anc[0] );
		Toffoli( anc[6], anc[1], q[2] );
		CNOT( anc[2], q[3] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[2], anc[8], anc[6] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[1], q[0] );
		CNOT( anc[4], anc[0] );
		Toffoli( anc[5], anc[6], q[1] );
		CNOT( q[1], anc[6] );
		CNOT( q[1], anc[0] );
		CNOT( q[3], anc[0] );
		Toffoli( q[1], anc[1], anc[7] );
		CNOT( anc[7], anc[2] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[4], q[1], anc[6] );
		Toffoli( anc[4], anc[7], anc[8] );
		Toffoli( anc[3], q[0], q[2] );
		CNOT( anc[7], anc[0] );
		Toffoli( q[1], anc[2], anc[5] );
		Toffoli( anc[4], q[0], anc[1] );
		CNOT( q[1], anc[8] );
		Toffoli( anc[8], anc[3], q[3] );
		CNOT( anc[1], anc[6] );
		CNOT( anc[8], q[2] );
		Toffoli( anc[3], anc[8], q[2] );
		CNOT( q[3], q[0] );
		CNOT( anc[2], q[3] );
		CNOT( anc[6], anc[4] );
		CNOT( anc[4], anc[1] );
		CNOT( q[3], anc[7] );
		Toffoli( q[0], q[1], q[3] );
		CNOT( anc[2], anc[8] );
		Toffoli( anc[8], anc[4], q[1] );
		CNOT( anc[6], q[3] );
		Toffoli( anc[6], anc[1], anc[5] );
		CNOT( anc[4], q[2] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[1], anc[7], q[1] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[2], anc[8], q[3] );
		CNOT( q[1], anc[7] );
		Toffoli( q[3], anc[4], anc[2] );
		Toffoli( q[3], anc[4], anc[5] );
		Toffoli( anc[4], anc[7], q[0] );
		Toffoli( q[2], anc[2], anc[5] );
		CNOT( q[3], q[1] );
		func13(nq1, 4);
		CNOT( anc[4], anc[6] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[5], anc[1], q[1] );
		Toffoli( anc[5], anc[6], anc[7] );
		Toffoli( anc[3], q[2], q[1] );
		Toffoli( anc[5], anc[0], anc[1] );
		Toffoli( anc[8], q[1], anc[3] );
		CNOT( anc[0], anc[8] );
		CNOT( q[1], anc[1] );
		Toffoli( q[0], anc[6], anc[2] );
		Toffoli( anc[2], q[0], anc[4] );
		CNOT( anc[8], anc[2] );
		Toffoli( anc[2], anc[1], anc[0] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( q[0], anc[7] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[7], anc[1], anc[0] );
		Toffoli( anc[7], q[2], anc[8] );
		Toffoli( anc[3], q[1], anc[2] );
		Toffoli( anc[3], anc[6], anc[5] );
		CNOT( q[3], anc[2] );
		CNOT( q[0], q[2] );
		Toffoli( anc[7], q[3], q[2] );
		Toffoli( anc[4], anc[0], anc[1] );
		Toffoli( anc[6], q[3], anc[2] );
		Toffoli( anc[8], anc[1], q[0] );
		CNOT( anc[0], anc[5] );
		CNOT( anc[2], q[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[8], anc[5], q[0] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[3], anc[0], q[0] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( q[2], q[1], anc[6] );
		CNOT( anc[2], q[1] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[0], q[2], anc[3] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( anc[6], anc[3], anc[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[5], q[2], anc[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( anc[3], q[3] );
		Toffoli( anc[1], anc[8], anc[2] );
		Toffoli( anc[7], q[2], q[0] );
	}
	Store {
		CNOT( anc[8], res[0] );
		CNOT( anc[0], res[1] );
		CNOT( anc[6], res[2] );
		CNOT( anc[2], res[3] );
	}
	Uncompute(res, 0, anc, 9, 458, 231){
		Toffoli( anc[7], q[2], q[0] );
		Toffoli( anc[1], anc[8], anc[2] );
		CNOT( anc[3], q[3] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[5], q[2], anc[3] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[6], anc[3], anc[0] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( anc[0], q[2], anc[3] );
		CNOT( anc[6], anc[1] );
		CNOT( anc[2], q[1] );
		Toffoli( q[2], q[1], anc[6] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( anc[3], anc[0], q[0] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[8], anc[5], q[0] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[2], q[1] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[8], anc[1], q[0] );
		Toffoli( anc[6], q[3], anc[2] );
		Toffoli( anc[4], anc[0], anc[1] );
		Toffoli( anc[7], q[3], q[2] );
		CNOT( q[0], q[2] );
		CNOT( q[3], anc[2] );
		Toffoli( anc[3], anc[6], anc[5] );
		Toffoli( anc[3], q[1], anc[2] );
		Toffoli( anc[7], q[2], anc[8] );
		Toffoli( anc[7], anc[1], anc[0] );
		CNOT( anc[4], anc[8] );
		CNOT( q[0], anc[7] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( anc[8], anc[2] );
		Toffoli( anc[2], q[0], anc[4] );
		Toffoli( q[0], anc[6], anc[2] );
		CNOT( q[1], anc[1] );
		CNOT( anc[0], anc[8] );
		Toffoli( anc[8], q[1], anc[3] );
		Toffoli( anc[5], anc[0], anc[1] );
		Toffoli( anc[3], q[2], q[1] );
		Toffoli( anc[5], anc[6], anc[7] );
		Toffoli( anc[5], anc[1], q[1] );
		CNOT( q[1], anc[3] );
		CNOT( anc[4], anc[6] );
		func13R(nq1, 4);
		CNOT( q[3], q[1] );
		Toffoli( q[2], anc[2], anc[5] );
		Toffoli( anc[4], anc[7], q[0] );
		Toffoli( q[3], anc[4], anc[5] );
		Toffoli( q[3], anc[4], anc[2] );
		CNOT( q[1], anc[7] );
		Toffoli( anc[2], anc[8], q[3] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[1], anc[7], q[1] );
		CNOT( anc[4], anc[8] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[4], q[2] );
		Toffoli( anc[6], anc[1], anc[5] );
		CNOT( anc[6], q[3] );
		Toffoli( anc[8], anc[4], q[1] );
		CNOT( anc[2], anc[8] );
		Toffoli( q[0], q[1], q[3] );
		CNOT( q[3], anc[7] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[6], anc[4] );
		CNOT( anc[2], q[3] );
		CNOT( q[3], q[0] );
		Toffoli( anc[3], anc[8], q[2] );
		CNOT( anc[8], q[2] );
		CNOT( anc[1], anc[6] );
		Toffoli( anc[8], anc[3], q[3] );
		CNOT( q[1], anc[8] );
		Toffoli( anc[4], q[0], anc[1] );
		Toffoli( q[1], anc[2], anc[5] );
		CNOT( anc[7], anc[0] );
		Toffoli( anc[3], q[0], q[2] );
		Toffoli( anc[4], anc[7], anc[8] );
		Toffoli( anc[4], q[1], anc[6] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[7], anc[2] );
		Toffoli( q[1], anc[1], anc[7] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[5], anc[6], q[1] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[3], anc[4] );
		Toffoli( anc[2], anc[8], anc[6] );
		CNOT( anc[0], q[1] );
		CNOT( anc[2], q[3] );
		Toffoli( anc[6], anc[1], q[2] );
		Toffoli( anc[3], anc[8], anc[0] );
		Toffoli( q[3], anc[2], anc[4] );
		Toffoli( anc[2], anc[3], anc[5] );
		CNOT( anc[2], anc[5] );
		Toffoli( anc[0], anc[6], anc[3] );
		Toffoli( anc[0], anc[8], anc[4] );
		CNOT( anc[3], anc[4] );
		Toffoli( anc[6], q[3], anc[8] );
		CNOT( anc[7], q[3] );
		Toffoli( anc[2], q[2], q[0] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[6], anc[7], q[3] );
		Toffoli( anc[2], anc[0], anc[3] );
		CNOT( q[1], q[0] );
		Toffoli( anc[5], anc[8], anc[3] );
		Toffoli( q[0], anc[3], anc[1] );
		Toffoli( q[0], anc[0], anc[8] );
		Toffoli( anc[1], q[2], q[3] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[7], q[2] );
		CNOT( anc[0], anc[3] );
		CNOT( q[3], anc[1] );
		Toffoli( q[3], anc[8], anc[4] );
		Toffoli( anc[8], q[3], anc[6] );
		Toffoli( anc[7], anc[4], anc[6] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], anc[2] );
		CNOT( q[2], anc[6] );
		Toffoli( anc[6], anc[5], anc[4] );
		CNOT( anc[1], anc[3] );
		CNOT( anc[1], anc[4] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[3], anc[2], anc[7] );
		CNOT( anc[1], q[2] );
		Toffoli( anc[6], q[0], q[3] );
		CNOT( q[2], q[1] );
		CNOT( q[0], q[2] );
		CNOT( q[0], anc[1] );
		CNOT( anc[2], anc[8] );
		Toffoli( q[3], anc[0], anc[1] );
		Toffoli( q[3], anc[7], anc[2] );
		Toffoli( anc[0], anc[8], anc[6] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[4], anc[3], anc[7] );
		CNOT( anc[2], anc[5] );
		Toffoli( q[1], anc[5], anc[7] );
		Toffoli( q[0], anc[4], q[2] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[2], anc[1], anc[4] );
		CNOT( anc[4], q[3] );
		Toffoli( anc[3], anc[8], anc[6] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], anc[3], anc[7] );
		CNOT( q[1], anc[8] );
		CNOT( q[1], anc[6] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[7], anc[2] );
		Toffoli( q[1], anc[2], anc[3] );
		Toffoli( anc[4], anc[1], anc[5] );
		CNOT( q[3], anc[3] );
		Toffoli( q[3], anc[2], anc[6] );
		Toffoli( q[1], anc[4], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[2], q[1], anc[2] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[8], q[3], anc[1] );
		Toffoli( anc[3], anc[1], anc[2] );
		Toffoli( anc[0], anc[5], q[1] );
		Toffoli( q[3], anc[1], anc[3] );
		CNOT( q[2], anc[2] );
		CNOT( anc[5], anc[1] );
		CNOT( q[0], anc[8] );
		Toffoli( anc[8], anc[5], anc[7] );
		CNOT( anc[0], anc[5] );
		Toffoli( q[3], anc[1], anc[7] );
		CNOT( anc[0], anc[8] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[7], anc[2], q[2] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[0], q[2], anc[5] );
		Toffoli( anc[3], q[1], q[3] );
		CNOT( anc[3], q[0] );
		func14R(nq2, 4);
		Toffoli( q[1], q[2], q[0] );
		CNOT( q[1], q[3] );
		CNOT( q[1], anc[4] );
		Toffoli( q[0], q[1], anc[1] );
		CNOT( anc[0], q[1] );
		CNOT( anc[5], q[0] );
		Toffoli( anc[0], anc[1], anc[5] );
		CNOT( q[0], anc[4] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[6], anc[8], anc[1] );
		Toffoli( anc[7], anc[1], anc[3] );
		Toffoli( anc[6], anc[7], q[0] );
		CNOT( anc[6], q[2] );
		CNOT( anc[4], anc[7] );
		Toffoli( q[2], anc[6], anc[2] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[5], anc[3], q[3] );
		CNOT( anc[4], q[1] );
		CNOT( anc[1], anc[5] );
		CNOT( q[0], anc[4] );
		CNOT( anc[4], q[1] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[6], anc[5], anc[0] );
		func12R(nq0, 4);
		CNOT( q[1], anc[8] );
		Toffoli( q[3], anc[1], anc[8] );
		Toffoli( anc[8], anc[1], anc[3] );
		Toffoli( anc[8], anc[1], q[1] );
		Toffoli( anc[8], anc[3], q[1] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[1], q[3] );
		CNOT( anc[0], anc[7] );
		CNOT( anc[8], anc[5] );
		CNOT( q[0], q[1] );
		CNOT( anc[5], anc[8] );
		Toffoli( q[2], anc[1], anc[6] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[5], anc[2] );
		CNOT( q[1], q[2] );
		CNOT( anc[8], anc[6] );
		Toffoli( anc[6], anc[0], anc[8] );
		CNOT( q[1], anc[6] );
		CNOT( q[2], anc[6] );
		Toffoli( anc[7], anc[6], anc[3] );
		CNOT( q[1], q[2] );
		Toffoli( q[0], anc[3], anc[0] );
		Toffoli( anc[1], q[0], q[2] );
	} Free(anc, 9) {}
}
// Function 4 with degree 3
// nq: 4, na: 9, ng: 227
void func4R(qbit **q, int n) {
printf("func4R\n");
fflush(stderr);
	qbit *anc[9]; // ancilla
	qbit *nb[172]; // interacting bits
	qbit *res[4];
	qbit *nq0[4];
	qbit *nq1[4];
	qbit *nq2[4];
	nb[0] = q[1];
	nb[1] = q[2];
	nb[2] = q[3];
	nb[3] = q[1];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[3];
	nb[7] = q[2];
	nb[8] = q[0];
	nb[9] = q[0];
	nb[10] = q[1];
	nb[11] = q[2];
	nb[12] = q[3];
	nb[13] = q[1];
	nb[14] = q[3];
	nb[15] = q[2];
	nb[16] = q[3];
	nb[17] = q[1];
	nb[18] = q[1];
	nb[19] = q[0];
	nb[20] = q[3];
	nb[21] = q[2];
	nb[22] = q[1];
	nb[23] = q[1];
	nb[24] = q[0];
	nb[25] = q[1];
	nb[26] = q[2];
	nb[27] = q[1];
	nb[28] = q[1];
	nb[29] = q[1];
	nb[30] = q[0];
	nb[31] = q[1];
	nb[32] = q[0];
	nb[33] = q[0];
	nb[34] = q[2];
	nb[35] = q[3];
	nb[36] = q[2];
	nb[37] = q[3];
	nb[38] = q[0];
	nb[39] = q[3];
	nb[40] = q[1];
	nb[41] = q[1];
	nb[42] = q[1];
	nb[43] = q[0];
	nb[44] = q[0];
	nb[45] = q[1];
	nb[46] = q[1];
	nb[47] = q[2];
	nb[48] = q[0];
	nb[49] = q[2];
	nb[50] = q[1];
	nb[51] = q[3];
	nb[52] = q[1];
	nb[53] = q[0];
	nb[54] = q[1];
	nb[55] = q[1];
	nb[56] = q[2];
	nb[57] = q[1];
	nb[58] = q[0];
	nb[59] = q[2];
	nb[60] = q[1];
	nb[61] = q[1];
	nb[62] = q[3];
	nb[63] = q[2];
	nb[64] = q[1];
	nb[65] = q[0];
	nb[66] = q[3];
	nb[67] = q[0];
	nb[68] = q[1];
	nb[69] = q[3];
	nb[70] = q[1];
	nb[71] = q[0];
	nb[72] = q[3];
	nb[73] = q[1];
	nb[74] = q[3];
	nb[75] = q[1];
	nb[76] = q[0];
	nb[77] = q[3];
	nb[78] = q[2];
	nb[79] = q[1];
	nb[80] = q[3];
	nb[81] = q[2];
	nb[82] = q[1];
	nb[83] = q[3];
	nb[84] = q[3];
	nb[85] = q[1];
	nb[86] = q[3];
	nb[87] = q[0];
	nb[88] = q[2];
	nb[89] = q[0];
	nb[90] = q[2];
	nb[91] = q[3];
	nb[92] = q[0];
	nb[93] = q[1];
	nb[94] = q[0];
	nb[95] = q[1];
	nb[96] = q[0];
	nb[97] = q[2];
	nb[98] = q[2];
	nb[99] = q[0];
	nb[100] = q[3];
	nb[101] = q[2];
	nb[102] = q[0];
	nb[103] = q[3];
	nb[104] = q[0];
	nb[105] = q[1];
	nb[106] = q[1];
	nb[107] = q[0];
	nb[108] = q[1];
	nb[109] = q[1];
	nb[110] = q[1];
	nb[111] = q[3];
	nb[112] = q[0];
	nb[113] = q[3];
	nb[114] = q[0];
	nb[115] = q[2];
	nb[116] = q[0];
	nb[117] = q[1];
	nb[118] = q[0];
	nb[119] = q[2];
	nb[120] = q[2];
	nb[121] = q[1];
	nb[122] = q[2];
	nb[123] = q[0];
	nb[124] = q[2];
	nb[125] = q[2];
	nb[126] = q[0];
	nb[127] = q[2];
	nb[128] = q[3];
	nb[129] = q[3];
	nb[130] = q[1];
	nb[131] = q[2];
	nb[132] = q[0];
	nb[133] = q[3];
	nb[134] = q[1];
	nb[135] = q[1];
	nb[136] = q[1];
	nb[137] = q[3];
	nb[138] = q[1];
	nb[139] = q[3];
	nb[140] = q[0];
	nb[141] = q[1];
	nb[142] = q[0];
	nb[143] = q[1];
	nb[144] = q[3];
	nb[145] = q[3];
	nb[146] = q[0];
	nb[147] = q[2];
	nb[148] = q[1];
	nb[149] = q[0];
	nb[150] = q[0];
	nb[151] = q[3];
	nb[152] = q[3];
	nb[153] = q[3];
	nb[154] = q[3];
	nb[155] = q[2];
	nb[156] = q[3];
	nb[157] = q[1];
	nb[158] = q[2];
	nb[159] = q[3];
	nb[160] = q[2];
	nb[161] = q[3];
	nb[162] = q[2];
	nb[163] = q[1];
	nb[164] = q[1];
	nb[165] = q[3];
	nb[166] = q[3];
	nb[167] = q[0];
	nb[168] = q[3];
	nb[169] = q[0];
	nb[170] = q[2];
	nb[171] = q[0];
	res[0] = q[0];
	res[1] = q[2];
	res[2] = q[1];
	res[3] = q[3];
	// Non-leaf function
	_computeModule(0, 9, 458, 231, 3, 128, 0);
	acquire(9, anc, 172, nb);
	nq0[0] = q[0];
	nq0[1] = anc[4];
	nq0[2] = anc[1];
	nq0[3] = anc[8];
	nq1[0] = anc[2];
	nq1[1] = q[2];
	nq1[2] = anc[6];
	nq1[3] = anc[5];
	nq2[0] = anc[3];
	nq2[1] = anc[0];
	nq2[2] = anc[7];
	nq2[3] = q[1];
	Recompute(res, 0, anc, 9, 458, 231){
		Toffoli( anc[1], q[0], q[2] );
		Toffoli( q[0], anc[3], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( anc[7], anc[6], anc[3] );
		CNOT( q[2], anc[6] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[6], anc[0], anc[8] );
		CNOT( anc[8], anc[6] );
		CNOT( q[1], q[2] );
		CNOT( anc[5], anc[2] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[6], anc[0] );
		Toffoli( q[2], anc[1], anc[6] );
		CNOT( anc[5], anc[8] );
		CNOT( q[0], q[1] );
		CNOT( anc[8], anc[5] );
		CNOT( anc[0], anc[7] );
		CNOT( anc[1], q[3] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[4], anc[7] );
		Toffoli( anc[8], anc[3], q[1] );
		Toffoli( anc[8], anc[1], q[1] );
		Toffoli( anc[8], anc[1], anc[3] );
		Toffoli( q[3], anc[1], anc[8] );
		CNOT( q[1], anc[8] );
		func12(nq0, 4);
		Toffoli( anc[6], anc[5], anc[0] );
		CNOT( anc[0], anc[3] );
		CNOT( anc[4], q[1] );
		CNOT( q[0], anc[4] );
		CNOT( anc[1], anc[5] );
		CNOT( anc[4], q[1] );
		Toffoli( anc[5], anc[3], q[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( q[2], anc[6], anc[2] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[6], q[2] );
		Toffoli( anc[6], anc[7], q[0] );
		Toffoli( anc[7], anc[1], anc[3] );
		Toffoli( anc[6], anc[8], anc[1] );
		CNOT( q[1], anc[3] );
		CNOT( q[0], anc[4] );
		Toffoli( anc[0], anc[1], anc[5] );
		CNOT( anc[5], q[0] );
		CNOT( anc[0], q[1] );
		Toffoli( q[0], q[1], anc[1] );
		CNOT( q[1], anc[4] );
		CNOT( q[1], q[3] );
		Toffoli( q[1], q[2], q[0] );
		func14(nq2, 4);
		CNOT( anc[3], q[0] );
		Toffoli( anc[3], q[1], q[3] );
		Toffoli( anc[0], q[2], anc[5] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[7], anc[2], q[2] );
		CNOT( anc[1], q[0] );
		CNOT( anc[0], anc[8] );
		Toffoli( q[3], anc[1], anc[7] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[8], anc[5], anc[7] );
		CNOT( q[0], anc[8] );
		CNOT( anc[5], anc[1] );
		CNOT( q[2], anc[2] );
		Toffoli( q[3], anc[1], anc[3] );
		Toffoli( anc[0], anc[5], q[1] );
		Toffoli( anc[3], anc[1], anc[2] );
		Toffoli( anc[8], q[3], anc[1] );
		CNOT( q[0], anc[2] );
		Toffoli( q[2], q[1], anc[2] );
		CNOT( anc[1], anc[2] );
		CNOT( anc[0], q[1] );
		Toffoli( q[1], anc[4], q[0] );
		Toffoli( q[3], anc[2], anc[6] );
		CNOT( q[3], anc[3] );
		Toffoli( anc[4], anc[1], anc[5] );
		Toffoli( q[1], anc[2], anc[3] );
		CNOT( anc[7], anc[2] );
		CNOT( anc[0], anc[1] );
		CNOT( q[1], anc[6] );
		CNOT( q[1], anc[8] );
		Toffoli( q[1], anc[3], anc[7] );
		CNOT( q[1], q[0] );
		Toffoli( anc[3], anc[8], anc[6] );
		CNOT( anc[4], q[3] );
		Toffoli( anc[2], anc[1], anc[4] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( q[0], anc[4], q[2] );
		Toffoli( q[1], anc[5], anc[7] );
		CNOT( anc[2], anc[5] );
		Toffoli( anc[4], anc[3], anc[7] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[0], anc[8], anc[6] );
		Toffoli( q[3], anc[7], anc[2] );
		Toffoli( q[3], anc[0], anc[1] );
		CNOT( anc[2], anc[8] );
		CNOT( q[0], anc[1] );
		CNOT( q[0], q[2] );
		CNOT( q[2], q[1] );
		Toffoli( anc[6], q[0], q[3] );
		CNOT( anc[1], q[2] );
		Toffoli( anc[3], anc[2], anc[7] );
		CNOT( q[1], anc[6] );
		CNOT( anc[1], anc[4] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[6], anc[5], anc[4] );
		CNOT( q[2], anc[6] );
		CNOT( anc[0], anc[2] );
		CNOT( q[1], q[3] );
		Toffoli( anc[7], anc[4], anc[6] );
		Toffoli( anc[8], q[3], anc[6] );
		Toffoli( q[3], anc[8], anc[4] );
		CNOT( q[3], anc[1] );
		CNOT( anc[0], anc[3] );
		CNOT( anc[7], q[2] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[1], q[2], q[3] );
		Toffoli( q[0], anc[0], anc[8] );
		Toffoli( q[0], anc[3], anc[1] );
		Toffoli( anc[5], anc[8], anc[3] );
		CNOT( q[1], q[0] );
		Toffoli( anc[2], anc[0], anc[3] );
		Toffoli( anc[6], anc[7], q[3] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[2], q[2], q[0] );
		CNOT( anc[7], q[3] );
		Toffoli( anc[6], q[3], anc[8] );
		CNOT( anc[3], anc[4] );
		Toffoli( anc[0], anc[8], anc[4] );
		Toffoli( anc[0], anc[6], anc[3] );
		CNOT( anc[2], anc[5] );
		Toffoli( anc[2], anc[3], anc[5] );
		Toffoli( q[3], anc[2], anc[4] );
		Toffoli( anc[3], anc[8], anc[0] );
		Toffoli( anc[6], anc[1], q[2] );
		CNOT( anc[2], q[3] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[2], anc[8], anc[6] );
		CNOT( anc[3], anc[4] );
		CNOT( anc[1], q[0] );
		CNOT( anc[4], anc[0] );
		Toffoli( anc[5], anc[6], q[1] );
		CNOT( q[1], anc[6] );
		CNOT( q[1], anc[0] );
		CNOT( q[3], anc[0] );
		Toffoli( q[1], anc[1], anc[7] );
		CNOT( anc[7], anc[2] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[4], q[1], anc[6] );
		Toffoli( anc[4], anc[7], anc[8] );
		Toffoli( anc[3], q[0], q[2] );
		CNOT( anc[7], anc[0] );
		Toffoli( q[1], anc[2], anc[5] );
		Toffoli( anc[4], q[0], anc[1] );
		CNOT( q[1], anc[8] );
		Toffoli( anc[8], anc[3], q[3] );
		CNOT( anc[1], anc[6] );
		CNOT( anc[8], q[2] );
		Toffoli( anc[3], anc[8], q[2] );
		CNOT( q[3], q[0] );
		CNOT( anc[2], q[3] );
		CNOT( anc[6], anc[4] );
		CNOT( anc[4], anc[1] );
		CNOT( q[3], anc[7] );
		Toffoli( q[0], q[1], q[3] );
		CNOT( anc[2], anc[8] );
		Toffoli( anc[8], anc[4], q[1] );
		CNOT( anc[6], q[3] );
		Toffoli( anc[6], anc[1], anc[5] );
		CNOT( anc[4], q[2] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[1], anc[7], q[1] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[2], anc[8], q[3] );
		CNOT( q[1], anc[7] );
		Toffoli( q[3], anc[4], anc[2] );
		Toffoli( q[3], anc[4], anc[5] );
		Toffoli( anc[4], anc[7], q[0] );
		Toffoli( q[2], anc[2], anc[5] );
		CNOT( q[3], q[1] );
		func13(nq1, 4);
		CNOT( anc[4], anc[6] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[5], anc[1], q[1] );
		Toffoli( anc[5], anc[6], anc[7] );
		Toffoli( anc[3], q[2], q[1] );
		Toffoli( anc[5], anc[0], anc[1] );
		Toffoli( anc[8], q[1], anc[3] );
		CNOT( anc[0], anc[8] );
		CNOT( q[1], anc[1] );
		Toffoli( q[0], anc[6], anc[2] );
		Toffoli( anc[2], q[0], anc[4] );
		CNOT( anc[8], anc[2] );
		Toffoli( anc[2], anc[1], anc[0] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[2], anc[1], q[0] );
		CNOT( q[0], anc[7] );
		CNOT( anc[4], anc[8] );
		Toffoli( anc[7], anc[1], anc[0] );
		Toffoli( anc[7], q[2], anc[8] );
		Toffoli( anc[3], q[1], anc[2] );
		Toffoli( anc[3], anc[6], anc[5] );
		CNOT( q[3], anc[2] );
		CNOT( q[0], q[2] );
		Toffoli( anc[7], q[3], q[2] );
		Toffoli( anc[4], anc[0], anc[1] );
		Toffoli( anc[6], q[3], anc[2] );
		Toffoli( anc[8], anc[1], q[0] );
		CNOT( anc[0], anc[5] );
		CNOT( anc[2], q[1] );
		CNOT( anc[2], anc[0] );
		Toffoli( anc[8], anc[5], q[0] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[3], anc[0], q[0] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( q[2], q[1], anc[6] );
		CNOT( anc[2], q[1] );
		CNOT( anc[6], anc[1] );
		Toffoli( anc[0], q[2], anc[3] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( anc[6], anc[3], anc[0] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[5], q[2], anc[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( anc[3], q[3] );
		Toffoli( anc[1], anc[8], anc[2] );
		Toffoli( anc[7], q[2], q[0] );
	}
	Restore {
		CNOT( anc[8], res[0] );
		CNOT( anc[0], res[1] );
		CNOT( anc[6], res[2] );
		CNOT( anc[2], res[3] );
	}
	Unrecompute {
		Toffoli( anc[7], q[2], q[0] );
		Toffoli( anc[1], anc[8], anc[2] );
		CNOT( anc[3], q[3] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[5], q[2], anc[3] );
		CNOT( anc[2], anc[1] );
		Toffoli( anc[6], anc[3], anc[0] );
		Toffoli( anc[6], anc[5], q[2] );
		Toffoli( anc[0], q[2], anc[3] );
		CNOT( anc[6], anc[1] );
		CNOT( anc[2], q[1] );
		Toffoli( q[2], q[1], anc[6] );
		Toffoli( q[3], anc[0], q[0] );
		Toffoli( anc[3], anc[0], q[0] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[8], anc[5], q[0] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[2], q[1] );
		CNOT( anc[0], anc[5] );
		Toffoli( anc[8], anc[1], q[0] );
		Toffoli( anc[6], q[3], anc[2] );
		Toffoli( anc[4], anc[0], anc[1] );
		Toffoli( anc[7], q[3], q[2] );
		CNOT( q[0], q[2] );
		CNOT( q[3], anc[2] );
		Toffoli( anc[3], anc[6], anc[5] );
		Toffoli( anc[3], q[1], anc[2] );
		Toffoli( anc[7], q[2], anc[8] );
		Toffoli( anc[7], anc[1], anc[0] );
		CNOT( anc[4], anc[8] );
		CNOT( q[0], anc[7] );
		Toffoli( anc[2], anc[1], q[0] );
		Toffoli( anc[4], anc[0], anc[6] );
		Toffoli( anc[2], anc[1], anc[0] );
		CNOT( anc[8], anc[2] );
		Toffoli( anc[2], q[0], anc[4] );
		Toffoli( q[0], anc[6], anc[2] );
		CNOT( q[1], anc[1] );
		CNOT( anc[0], anc[8] );
		Toffoli( anc[8], q[1], anc[3] );
		Toffoli( anc[5], anc[0], anc[1] );
		Toffoli( anc[3], q[2], q[1] );
		Toffoli( anc[5], anc[6], anc[7] );
		Toffoli( anc[5], anc[1], q[1] );
		CNOT( q[1], anc[3] );
		CNOT( anc[4], anc[6] );
		func13R(nq1, 4);
		CNOT( q[3], q[1] );
		Toffoli( q[2], anc[2], anc[5] );
		Toffoli( anc[4], anc[7], q[0] );
		Toffoli( q[3], anc[4], anc[5] );
		Toffoli( q[3], anc[4], anc[2] );
		CNOT( q[1], anc[7] );
		Toffoli( anc[2], anc[8], q[3] );
		CNOT( anc[0], anc[6] );
		Toffoli( anc[1], anc[7], q[1] );
		CNOT( anc[4], anc[8] );
		CNOT( anc[3], anc[5] );
		CNOT( anc[4], q[2] );
		Toffoli( anc[6], anc[1], anc[5] );
		CNOT( anc[6], q[3] );
		Toffoli( anc[8], anc[4], q[1] );
		CNOT( anc[2], anc[8] );
		Toffoli( q[0], q[1], q[3] );
		CNOT( q[3], anc[7] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[6], anc[4] );
		CNOT( anc[2], q[3] );
		CNOT( q[3], q[0] );
		Toffoli( anc[3], anc[8], q[2] );
		CNOT( anc[8], q[2] );
		CNOT( anc[1], anc[6] );
		Toffoli( anc[8], anc[3], q[3] );
		CNOT( q[1], anc[8] );
		Toffoli( anc[4], q[0], anc[1] );
		Toffoli( q[1], anc[2], anc[5] );
		CNOT( anc[7], anc[0] );
		Toffoli( anc[3], q[0], q[2] );
		Toffoli( anc[4], anc[7], anc[8] );
		Toffoli( anc[4], q[1], anc[6] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[7], anc[2] );
		Toffoli( q[1], anc[1], anc[7] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], anc[0] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[5], anc[6], q[1] );
		CNOT( anc[4], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[3], anc[4] );
		Toffoli( anc[2], anc[8], anc[6] );
		CNOT( anc[0], q[1] );
		CNOT( anc[2], q[3] );
		Toffoli( anc[6], anc[1], q[2] );
		Toffoli( anc[3], anc[8], anc[0] );
		Toffoli( q[3], anc[2], anc[4] );
		Toffoli( anc[2], anc[3], anc[5] );
		CNOT( anc[2], anc[5] );
		Toffoli( anc[0], anc[6], anc[3] );
		Toffoli( anc[0], anc[8], anc[4] );
		CNOT( anc[3], anc[4] );
		Toffoli( anc[6], q[3], anc[8] );
		CNOT( anc[7], q[3] );
		Toffoli( anc[2], q[2], q[0] );
		CNOT( q[3], anc[8] );
		Toffoli( anc[6], anc[7], q[3] );
		Toffoli( anc[2], anc[0], anc[3] );
		CNOT( q[1], q[0] );
		Toffoli( anc[5], anc[8], anc[3] );
		Toffoli( q[0], anc[3], anc[1] );
		Toffoli( q[0], anc[0], anc[8] );
		Toffoli( anc[1], q[2], q[3] );
		CNOT( anc[0], anc[2] );
		Toffoli( anc[5], anc[1], anc[6] );
		CNOT( anc[7], q[2] );
		CNOT( anc[0], anc[3] );
		CNOT( q[3], anc[1] );
		Toffoli( q[3], anc[8], anc[4] );
		Toffoli( anc[8], q[3], anc[6] );
		Toffoli( anc[7], anc[4], anc[6] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], anc[2] );
		CNOT( q[2], anc[6] );
		Toffoli( anc[6], anc[5], anc[4] );
		CNOT( anc[1], anc[3] );
		CNOT( anc[1], anc[4] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[3], anc[2], anc[7] );
		CNOT( anc[1], q[2] );
		Toffoli( anc[6], q[0], q[3] );
		CNOT( q[2], q[1] );
		CNOT( q[0], q[2] );
		CNOT( q[0], anc[1] );
		CNOT( anc[2], anc[8] );
		Toffoli( q[3], anc[0], anc[1] );
		Toffoli( q[3], anc[7], anc[2] );
		Toffoli( anc[0], anc[8], anc[6] );
		Toffoli( anc[2], anc[3], anc[1] );
		Toffoli( anc[4], anc[3], anc[7] );
		CNOT( anc[2], anc[5] );
		Toffoli( q[1], anc[5], anc[7] );
		Toffoli( q[0], anc[4], q[2] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[2], anc[1], anc[4] );
		CNOT( anc[4], q[3] );
		Toffoli( anc[3], anc[8], anc[6] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], anc[3], anc[7] );
		CNOT( q[1], anc[8] );
		CNOT( q[1], anc[6] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[7], anc[2] );
		Toffoli( q[1], anc[2], anc[3] );
		Toffoli( anc[4], anc[1], anc[5] );
		CNOT( q[3], anc[3] );
		Toffoli( q[3], anc[2], anc[6] );
		Toffoli( q[1], anc[4], q[0] );
		CNOT( anc[0], q[1] );
		CNOT( anc[1], anc[2] );
		Toffoli( q[2], q[1], anc[2] );
		CNOT( q[0], anc[2] );
		Toffoli( anc[8], q[3], anc[1] );
		Toffoli( anc[3], anc[1], anc[2] );
		Toffoli( anc[0], anc[5], q[1] );
		Toffoli( q[3], anc[1], anc[3] );
		CNOT( q[2], anc[2] );
		CNOT( anc[5], anc[1] );
		CNOT( q[0], anc[8] );
		Toffoli( anc[8], anc[5], anc[7] );
		CNOT( anc[0], anc[5] );
		Toffoli( q[3], anc[1], anc[7] );
		CNOT( anc[0], anc[8] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[7], anc[2], q[2] );
		CNOT( anc[5], anc[2] );
		Toffoli( anc[0], q[2], anc[5] );
		Toffoli( anc[3], q[1], q[3] );
		CNOT( anc[3], q[0] );
		func14R(nq2, 4);
		Toffoli( q[1], q[2], q[0] );
		CNOT( q[1], q[3] );
		CNOT( q[1], anc[4] );
		Toffoli( q[0], q[1], anc[1] );
		CNOT( anc[0], q[1] );
		CNOT( anc[5], q[0] );
		Toffoli( anc[0], anc[1], anc[5] );
		CNOT( q[0], anc[4] );
		CNOT( q[1], anc[3] );
		Toffoli( anc[6], anc[8], anc[1] );
		Toffoli( anc[7], anc[1], anc[3] );
		Toffoli( anc[6], anc[7], q[0] );
		CNOT( anc[6], q[2] );
		CNOT( anc[4], anc[7] );
		Toffoli( q[2], anc[6], anc[2] );
		CNOT( anc[1], anc[3] );
		Toffoli( anc[5], anc[3], q[3] );
		CNOT( anc[4], q[1] );
		CNOT( anc[1], anc[5] );
		CNOT( q[0], anc[4] );
		CNOT( anc[4], q[1] );
		CNOT( anc[0], anc[3] );
		Toffoli( anc[6], anc[5], anc[0] );
		func12R(nq0, 4);
		CNOT( q[1], anc[8] );
		Toffoli( q[3], anc[1], anc[8] );
		Toffoli( anc[8], anc[1], anc[3] );
		Toffoli( anc[8], anc[1], q[1] );
		Toffoli( anc[8], anc[3], q[1] );
		CNOT( anc[4], anc[7] );
		CNOT( anc[6], anc[5] );
		CNOT( anc[1], q[3] );
		CNOT( anc[0], anc[7] );
		CNOT( anc[8], anc[5] );
		CNOT( q[0], q[1] );
		CNOT( anc[5], anc[8] );
		Toffoli( q[2], anc[1], anc[6] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[2], anc[0] );
		CNOT( anc[5], anc[2] );
		CNOT( q[1], q[2] );
		CNOT( anc[8], anc[6] );
		Toffoli( anc[6], anc[0], anc[8] );
		CNOT( q[1], anc[6] );
		CNOT( q[2], anc[6] );
		Toffoli( anc[7], anc[6], anc[3] );
		CNOT( q[1], q[2] );
		Toffoli( q[0], anc[3], anc[0] );
		Toffoli( anc[1], q[0], q[2] );
	} Refree(anc, 9) {}
}
// Function 3 with degree 1
// nq: 4, na: 3, ng: 2
void func3(qbit **q, int n) {
printf("func3\n");
fflush(stderr);
	qbit *anc[3]; // ancilla
	qbit *nb[4]; // interacting bits
	qbit *res[2];
	qbit *nq0[7];
	nb[0] = q[2];
	nb[1] = q[2];
	nb[2] = q[0];
	nb[3] = q[3];
	res[0] = q[1];
	res[1] = q[0];
	// Non-leaf function
	Compute (0, 3, 6, 4, 1, 128, 0){
		acquire(3, anc, 4, nb);
	nq0[0] = anc[2];
	nq0[1] = q[2];
	nq0[2] = anc[1];
	nq0[3] = anc[0];
	nq0[4] = q[0];
	nq0[5] = q[3];
	nq0[6] = q[1];
		func11(nq0, 7);
		CNOT( q[2], anc[1] );
		Toffoli( q[2], q[0], q[3] );
	}
	Store {
		CNOT( anc[1], res[0] );
		CNOT( anc[2], res[1] );
	}
	Uncompute(res, 0, anc, 3, 6, 4){
		Toffoli( q[2], q[0], q[3] );
		CNOT( q[2], anc[1] );
		func11R(nq0, 7);
	} Free(anc, 3) {}
}
// Function 3 with degree 1
// nq: 4, na: 3, ng: 2
void func3R(qbit **q, int n) {
printf("func3R\n");
fflush(stderr);
	qbit *anc[3]; // ancilla
	qbit *nb[4]; // interacting bits
	qbit *res[2];
	qbit *nq0[7];
	nb[0] = q[2];
	nb[1] = q[2];
	nb[2] = q[0];
	nb[3] = q[3];
	res[0] = q[1];
	res[1] = q[0];
	// Non-leaf function
	_computeModule(0, 3, 6, 4, 1, 128, 0);
	acquire(3, anc, 4, nb);
	nq0[0] = anc[2];
	nq0[1] = q[2];
	nq0[2] = anc[1];
	nq0[3] = anc[0];
	nq0[4] = q[0];
	nq0[5] = q[3];
	nq0[6] = q[1];
	Recompute(res, 0, anc, 3, 6, 4){
		func11(nq0, 7);
		CNOT( q[2], anc[1] );
		Toffoli( q[2], q[0], q[3] );
	}
	Restore {
		CNOT( anc[1], res[0] );
		CNOT( anc[2], res[1] );
	}
	Unrecompute {
		Toffoli( q[2], q[0], q[3] );
		CNOT( q[2], anc[1] );
		func11R(nq0, 7);
	} Refree(anc, 3) {}
}
// Function 2 with degree 2
// nq: 4, na: 8, ng: 73
void func2(qbit **q, int n) {
printf("func2\n");
fflush(stderr);
	qbit *anc[8]; // ancilla
	qbit *nb[57]; // interacting bits
	qbit *res[2];
	qbit *nq0[6];
	qbit *nq1[6];
	nb[0] = q[0];
	nb[1] = q[3];
	nb[2] = q[3];
	nb[3] = q[1];
	nb[4] = q[2];
	nb[5] = q[2];
	nb[6] = q[2];
	nb[7] = q[1];
	nb[8] = q[0];
	nb[9] = q[3];
	nb[10] = q[1];
	nb[11] = q[2];
	nb[12] = q[1];
	nb[13] = q[2];
	nb[14] = q[1];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[1];
	nb[19] = q[2];
	nb[20] = q[1];
	nb[21] = q[1];
	nb[22] = q[3];
	nb[23] = q[3];
	nb[24] = q[0];
	nb[25] = q[3];
	nb[26] = q[3];
	nb[27] = q[1];
	nb[28] = q[3];
	nb[29] = q[2];
	nb[30] = q[3];
	nb[31] = q[2];
	nb[32] = q[2];
	nb[33] = q[2];
	nb[34] = q[3];
	nb[35] = q[2];
	nb[36] = q[0];
	nb[37] = q[3];
	nb[38] = q[0];
	nb[39] = q[1];
	nb[40] = q[3];
	nb[41] = q[1];
	nb[42] = q[3];
	nb[43] = q[0];
	nb[44] = q[1];
	nb[45] = q[3];
	nb[46] = q[2];
	nb[47] = q[2];
	nb[48] = q[2];
	nb[49] = q[2];
	nb[50] = q[1];
	nb[51] = q[2];
	nb[52] = q[3];
	nb[53] = q[0];
	nb[54] = q[0];
	nb[55] = q[1];
	nb[56] = q[2];
	res[0] = q[1];
	res[1] = q[3];
	// Non-leaf function
	Compute (0, 8, 148, 75, 2, 128, 0){
		acquire(8, anc, 57, nb);
	nq0[0] = anc[2];
	nq0[1] = anc[7];
	nq0[2] = anc[5];
	nq0[3] = q[3];
	nq0[4] = q[2];
	nq0[5] = q[1];
	nq1[0] = anc[3];
	nq1[1] = anc[4];
	nq1[2] = anc[1];
	nq1[3] = anc[0];
	nq1[4] = q[0];
	nq1[5] = anc[6];
		Toffoli( anc[0], q[2], anc[2] );
		Toffoli( q[3], anc[0], anc[5] );
		CNOT( anc[7], q[2] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], q[3] );
		Toffoli( anc[3], q[3], anc[0] );
		Toffoli( anc[5], anc[7], anc[4] );
		Toffoli( anc[4], q[1], anc[3] );
		Toffoli( q[0], anc[3], anc[5] );
		Toffoli( q[1], anc[0], anc[4] );
		CNOT( q[2], anc[1] );
		func9(nq0, 6);
		Toffoli( q[1], anc[0], q[3] );
		Toffoli( anc[7], anc[5], anc[0] );
		CNOT( anc[3], anc[2] );
		CNOT( q[0], anc[7] );
		CNOT( anc[4], q[2] );
		Toffoli( q[1], anc[0], anc[5] );
		CNOT( anc[6], q[2] );
		CNOT( q[2], anc[6] );
		CNOT( anc[4], q[3] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[5], anc[2], anc[6] );
		Toffoli( anc[7], anc[0], anc[3] );
		Toffoli( q[3], anc[3], anc[4] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[1], anc[2], anc[7] );
		Toffoli( anc[2], q[2], anc[3] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[7], anc[2], anc[4] );
		CNOT( q[1], q[2] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[1], q[1], anc[5] );
		Toffoli( anc[4], q[2], anc[5] );
		CNOT( q[1], anc[6] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[3], anc[6] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[4], anc[6], anc[0] );
		Toffoli( anc[1], q[3], q[1] );
		CNOT( anc[5], anc[7] );
		CNOT( anc[5], anc[6] );
		Toffoli( q[3], anc[2], anc[6] );
		CNOT( anc[3], q[2] );
		Toffoli( q[0], q[3], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( anc[1], anc[7] );
		Toffoli( q[2], q[1], anc[2] );
		Toffoli( q[1], anc[7], q[3] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[1], anc[7], q[0] );
		Toffoli( anc[5], anc[7], q[1] );
		CNOT( anc[3], anc[6] );
		Toffoli( anc[2], q[2], anc[6] );
		CNOT( anc[2], q[3] );
		func10(nq1, 6);
		Toffoli( q[3], anc[2], q[2] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[2], anc[4], q[2] );
		CNOT( anc[5], anc[6] );
		CNOT( q[2], anc[2] );
		CNOT( anc[2], q[2] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[4], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[5], anc[3] );
		CNOT( anc[4], anc[6] );
		Toffoli( anc[0], anc[4], q[1] );
		Toffoli( anc[2], q[2], q[3] );
		CNOT( q[3], anc[1] );
	}
	Store {
		CNOT( q[3], res[0] );
		CNOT( anc[2], res[1] );
	}
	Uncompute(res, 0, anc, 8, 148, 75){
		CNOT( q[3], anc[1] );
		Toffoli( anc[2], q[2], q[3] );
		Toffoli( anc[0], anc[4], q[1] );
		CNOT( anc[4], anc[6] );
		CNOT( anc[5], anc[3] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[2], q[2] );
		CNOT( q[2], anc[2] );
		CNOT( anc[5], anc[6] );
		Toffoli( anc[2], anc[4], q[2] );
		CNOT( anc[2], q[0] );
		Toffoli( q[3], anc[2], q[2] );
		func10R(nq1, 6);
		CNOT( anc[2], q[3] );
		Toffoli( anc[2], q[2], anc[6] );
		CNOT( anc[3], anc[6] );
		Toffoli( anc[5], anc[7], q[1] );
		Toffoli( anc[1], anc[7], q[0] );
		CNOT( anc[5], anc[0] );
		Toffoli( q[1], anc[7], q[3] );
		Toffoli( q[2], q[1], anc[2] );
		CNOT( anc[1], anc[7] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[0], q[3], anc[1] );
		CNOT( anc[3], q[2] );
		Toffoli( q[3], anc[2], anc[6] );
		CNOT( anc[5], anc[6] );
		CNOT( anc[5], anc[7] );
		Toffoli( anc[1], q[3], q[1] );
		Toffoli( anc[4], anc[6], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[3], anc[6] );
		CNOT( anc[4], anc[1] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[4], q[2], anc[5] );
		Toffoli( anc[1], q[1], anc[5] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( q[1], q[2] );
		Toffoli( anc[7], anc[2], anc[4] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[2], q[2], anc[3] );
		Toffoli( anc[1], anc[2], anc[7] );
		CNOT( anc[6], anc[0] );
		Toffoli( q[3], anc[3], anc[4] );
		Toffoli( anc[7], anc[0], anc[3] );
		Toffoli( anc[5], anc[2], anc[6] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], q[3] );
		CNOT( q[2], anc[6] );
		CNOT( anc[6], q[2] );
		Toffoli( q[1], anc[0], anc[5] );
		CNOT( anc[4], q[2] );
		CNOT( q[0], anc[7] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[7], anc[5], anc[0] );
		Toffoli( q[1], anc[0], q[3] );
		func9R(nq0, 6);
		CNOT( q[2], anc[1] );
		Toffoli( q[1], anc[0], anc[4] );
		Toffoli( q[0], anc[3], anc[5] );
		Toffoli( anc[4], q[1], anc[3] );
		Toffoli( anc[5], anc[7], anc[4] );
		Toffoli( anc[3], q[3], anc[0] );
		CNOT( q[0], q[3] );
		CNOT( q[1], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[7], q[2] );
		Toffoli( q[3], anc[0], anc[5] );
		Toffoli( anc[0], q[2], anc[2] );
	} Free(anc, 8) {}
}
// Function 2 with degree 2
// nq: 4, na: 8, ng: 73
void func2R(qbit **q, int n) {
printf("func2R\n");
fflush(stderr);
	qbit *anc[8]; // ancilla
	qbit *nb[57]; // interacting bits
	qbit *res[2];
	qbit *nq0[6];
	qbit *nq1[6];
	nb[0] = q[0];
	nb[1] = q[3];
	nb[2] = q[3];
	nb[3] = q[1];
	nb[4] = q[2];
	nb[5] = q[2];
	nb[6] = q[2];
	nb[7] = q[1];
	nb[8] = q[0];
	nb[9] = q[3];
	nb[10] = q[1];
	nb[11] = q[2];
	nb[12] = q[1];
	nb[13] = q[2];
	nb[14] = q[1];
	nb[15] = q[1];
	nb[16] = q[0];
	nb[17] = q[0];
	nb[18] = q[1];
	nb[19] = q[2];
	nb[20] = q[1];
	nb[21] = q[1];
	nb[22] = q[3];
	nb[23] = q[3];
	nb[24] = q[0];
	nb[25] = q[3];
	nb[26] = q[3];
	nb[27] = q[1];
	nb[28] = q[3];
	nb[29] = q[2];
	nb[30] = q[3];
	nb[31] = q[2];
	nb[32] = q[2];
	nb[33] = q[2];
	nb[34] = q[3];
	nb[35] = q[2];
	nb[36] = q[0];
	nb[37] = q[3];
	nb[38] = q[0];
	nb[39] = q[1];
	nb[40] = q[3];
	nb[41] = q[1];
	nb[42] = q[3];
	nb[43] = q[0];
	nb[44] = q[1];
	nb[45] = q[3];
	nb[46] = q[2];
	nb[47] = q[2];
	nb[48] = q[2];
	nb[49] = q[2];
	nb[50] = q[1];
	nb[51] = q[2];
	nb[52] = q[3];
	nb[53] = q[0];
	nb[54] = q[0];
	nb[55] = q[1];
	nb[56] = q[2];
	res[0] = q[1];
	res[1] = q[3];
	// Non-leaf function
	_computeModule(0, 8, 148, 75, 2, 128, 0);
	acquire(8, anc, 57, nb);
	nq0[0] = anc[2];
	nq0[1] = anc[7];
	nq0[2] = anc[5];
	nq0[3] = q[3];
	nq0[4] = q[2];
	nq0[5] = q[1];
	nq1[0] = anc[3];
	nq1[1] = anc[4];
	nq1[2] = anc[1];
	nq1[3] = anc[0];
	nq1[4] = q[0];
	nq1[5] = anc[6];
	Recompute(res, 0, anc, 8, 148, 75){
		Toffoli( anc[0], q[2], anc[2] );
		Toffoli( q[3], anc[0], anc[5] );
		CNOT( anc[7], q[2] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], q[3] );
		Toffoli( anc[3], q[3], anc[0] );
		Toffoli( anc[5], anc[7], anc[4] );
		Toffoli( anc[4], q[1], anc[3] );
		Toffoli( q[0], anc[3], anc[5] );
		Toffoli( q[1], anc[0], anc[4] );
		CNOT( q[2], anc[1] );
		func9(nq0, 6);
		Toffoli( q[1], anc[0], q[3] );
		Toffoli( anc[7], anc[5], anc[0] );
		CNOT( anc[3], anc[2] );
		CNOT( q[0], anc[7] );
		CNOT( anc[4], q[2] );
		Toffoli( q[1], anc[0], anc[5] );
		CNOT( anc[6], q[2] );
		CNOT( q[2], anc[6] );
		CNOT( anc[4], q[3] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[5], anc[2], anc[6] );
		Toffoli( anc[7], anc[0], anc[3] );
		Toffoli( q[3], anc[3], anc[4] );
		CNOT( anc[6], anc[0] );
		Toffoli( anc[1], anc[2], anc[7] );
		Toffoli( anc[2], q[2], anc[3] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[7], anc[2], anc[4] );
		CNOT( q[1], q[2] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[1], q[1], anc[5] );
		Toffoli( anc[4], q[2], anc[5] );
		CNOT( q[1], anc[6] );
		CNOT( anc[4], anc[1] );
		CNOT( anc[3], anc[6] );
		CNOT( anc[1], q[0] );
		Toffoli( anc[4], anc[6], anc[0] );
		Toffoli( anc[1], q[3], q[1] );
		CNOT( anc[5], anc[7] );
		CNOT( anc[5], anc[6] );
		Toffoli( q[3], anc[2], anc[6] );
		CNOT( anc[3], q[2] );
		Toffoli( q[0], q[3], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( anc[1], anc[7] );
		Toffoli( q[2], q[1], anc[2] );
		Toffoli( q[1], anc[7], q[3] );
		CNOT( anc[5], anc[0] );
		Toffoli( anc[1], anc[7], q[0] );
		Toffoli( anc[5], anc[7], q[1] );
		CNOT( anc[3], anc[6] );
		Toffoli( anc[2], q[2], anc[6] );
		CNOT( anc[2], q[3] );
		func10(nq1, 6);
		Toffoli( q[3], anc[2], q[2] );
		CNOT( anc[2], q[0] );
		Toffoli( anc[2], anc[4], q[2] );
		CNOT( anc[5], anc[6] );
		CNOT( q[2], anc[2] );
		CNOT( anc[2], q[2] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[4], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[5], anc[3] );
		CNOT( anc[4], anc[6] );
		Toffoli( anc[0], anc[4], q[1] );
		Toffoli( anc[2], q[2], q[3] );
		CNOT( q[3], anc[1] );
	}
	Restore {
		CNOT( q[3], res[0] );
		CNOT( anc[2], res[1] );
	}
	Unrecompute {
		CNOT( q[3], anc[1] );
		Toffoli( anc[2], q[2], q[3] );
		Toffoli( anc[0], anc[4], q[1] );
		CNOT( anc[4], anc[6] );
		CNOT( anc[5], anc[3] );
		CNOT( anc[0], anc[1] );
		CNOT( q[0], anc[4] );
		CNOT( anc[4], anc[1] );
		Toffoli( anc[4], anc[0], q[1] );
		CNOT( anc[2], q[2] );
		CNOT( q[2], anc[2] );
		CNOT( anc[5], anc[6] );
		Toffoli( anc[2], anc[4], q[2] );
		CNOT( anc[2], q[0] );
		Toffoli( q[3], anc[2], q[2] );
		func10R(nq1, 6);
		CNOT( anc[2], q[3] );
		Toffoli( anc[2], q[2], anc[6] );
		CNOT( anc[3], anc[6] );
		Toffoli( anc[5], anc[7], q[1] );
		Toffoli( anc[1], anc[7], q[0] );
		CNOT( anc[5], anc[0] );
		Toffoli( q[1], anc[7], q[3] );
		Toffoli( q[2], q[1], anc[2] );
		CNOT( anc[1], anc[7] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( anc[1], q[1] );
		Toffoli( q[0], q[3], anc[1] );
		CNOT( anc[3], q[2] );
		Toffoli( q[3], anc[2], anc[6] );
		CNOT( anc[5], anc[6] );
		CNOT( anc[5], anc[7] );
		Toffoli( anc[1], q[3], q[1] );
		Toffoli( anc[4], anc[6], anc[0] );
		CNOT( anc[1], q[0] );
		CNOT( anc[3], anc[6] );
		CNOT( anc[4], anc[1] );
		CNOT( q[1], anc[6] );
		Toffoli( anc[4], q[2], anc[5] );
		Toffoli( anc[1], q[1], anc[5] );
		CNOT( anc[6], anc[3] );
		Toffoli( anc[2], q[0], anc[3] );
		CNOT( q[1], q[2] );
		Toffoli( anc[7], anc[2], anc[4] );
		CNOT( anc[1], anc[4] );
		Toffoli( anc[2], q[2], anc[3] );
		Toffoli( anc[1], anc[2], anc[7] );
		CNOT( anc[6], anc[0] );
		Toffoli( q[3], anc[3], anc[4] );
		Toffoli( anc[7], anc[0], anc[3] );
		Toffoli( anc[5], anc[2], anc[6] );
		CNOT( anc[6], anc[0] );
		CNOT( anc[4], q[3] );
		CNOT( q[2], anc[6] );
		CNOT( anc[6], q[2] );
		Toffoli( q[1], anc[0], anc[5] );
		CNOT( anc[4], q[2] );
		CNOT( q[0], anc[7] );
		CNOT( anc[3], anc[2] );
		Toffoli( anc[7], anc[5], anc[0] );
		Toffoli( q[1], anc[0], q[3] );
		func9R(nq0, 6);
		CNOT( q[2], anc[1] );
		Toffoli( q[1], anc[0], anc[4] );
		Toffoli( q[0], anc[3], anc[5] );
		Toffoli( anc[4], q[1], anc[3] );
		Toffoli( anc[5], anc[7], anc[4] );
		Toffoli( anc[3], q[3], anc[0] );
		CNOT( q[0], q[3] );
		CNOT( q[1], anc[1] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[3], anc[0] );
		CNOT( anc[7], q[2] );
		Toffoli( q[3], anc[0], anc[5] );
		Toffoli( anc[0], q[2], anc[2] );
	} Refree(anc, 8) {}
}
// Function 1 with degree 4
// nq: 4, na: 2, ng: 139
void func1(qbit **q, int n) {
printf("func1\n");
fflush(stderr);
	qbit *anc[2]; // ancilla
	qbit *nb[247]; // interacting bits
	qbit *res[3];
	qbit *nq0[1];
	qbit *nq1[1];
	qbit *nq2[1];
	qbit *nq3[1];
	nb[0] = q[0];
	nb[1] = q[2];
	nb[2] = q[3];
	nb[3] = q[2];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[1];
	nb[7] = q[0];
	nb[8] = q[2];
	nb[9] = q[1];
	nb[10] = q[2];
	nb[11] = q[0];
	nb[12] = q[3];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[1];
	nb[16] = q[1];
	nb[17] = q[3];
	nb[18] = q[2];
	nb[19] = q[0];
	nb[20] = q[2];
	nb[21] = q[2];
	nb[22] = q[0];
	nb[23] = q[1];
	nb[24] = q[3];
	nb[25] = q[0];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[2];
	nb[29] = q[2];
	nb[30] = q[0];
	nb[31] = q[1];
	nb[32] = q[3];
	nb[33] = q[2];
	nb[34] = q[0];
	nb[35] = q[3];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[2];
	nb[39] = q[1];
	nb[40] = q[3];
	nb[41] = q[2];
	nb[42] = q[1];
	nb[43] = q[3];
	nb[44] = q[3];
	nb[45] = q[1];
	nb[46] = q[2];
	nb[47] = q[0];
	nb[48] = q[2];
	nb[49] = q[3];
	nb[50] = q[2];
	nb[51] = q[1];
	nb[52] = q[3];
	nb[53] = q[0];
	nb[54] = q[1];
	nb[55] = q[3];
	nb[56] = q[1];
	nb[57] = q[2];
	nb[58] = q[1];
	nb[59] = q[3];
	nb[60] = q[1];
	nb[61] = q[1];
	nb[62] = q[0];
	nb[63] = q[1];
	nb[64] = q[2];
	nb[65] = q[0];
	nb[66] = q[3];
	nb[67] = q[2];
	nb[68] = q[3];
	nb[69] = q[0];
	nb[70] = q[3];
	nb[71] = q[2];
	nb[72] = q[2];
	nb[73] = q[3];
	nb[74] = q[1];
	nb[75] = q[3];
	nb[76] = q[2];
	nb[77] = q[3];
	nb[78] = q[1];
	nb[79] = q[1];
	nb[80] = q[3];
	nb[81] = q[1];
	nb[82] = q[0];
	nb[83] = q[3];
	nb[84] = q[3];
	nb[85] = q[1];
	nb[86] = q[0];
	nb[87] = q[1];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[2];
	nb[91] = q[3];
	nb[92] = q[1];
	nb[93] = q[2];
	nb[94] = q[2];
	nb[95] = q[3];
	nb[96] = q[0];
	nb[97] = q[3];
	nb[98] = q[1];
	nb[99] = q[0];
	nb[100] = q[3];
	nb[101] = q[2];
	nb[102] = q[1];
	nb[103] = q[3];
	nb[104] = q[0];
	nb[105] = q[3];
	nb[106] = q[3];
	nb[107] = q[0];
	nb[108] = q[3];
	nb[109] = q[0];
	nb[110] = q[2];
	nb[111] = q[1];
	nb[112] = q[3];
	nb[113] = q[0];
	nb[114] = q[2];
	nb[115] = q[3];
	nb[116] = q[3];
	nb[117] = q[0];
	nb[118] = q[0];
	nb[119] = q[2];
	nb[120] = q[0];
	nb[121] = q[2];
	nb[122] = q[0];
	nb[123] = q[3];
	nb[124] = q[2];
	nb[125] = q[1];
	nb[126] = q[3];
	nb[127] = q[1];
	nb[128] = q[1];
	nb[129] = q[2];
	nb[130] = q[3];
	nb[131] = q[2];
	nb[132] = q[3];
	nb[133] = q[1];
	nb[134] = q[1];
	nb[135] = q[2];
	nb[136] = q[2];
	nb[137] = q[3];
	nb[138] = q[3];
	nb[139] = q[2];
	nb[140] = q[0];
	nb[141] = q[3];
	nb[142] = q[2];
	nb[143] = q[1];
	nb[144] = q[0];
	nb[145] = q[3];
	nb[146] = q[0];
	nb[147] = q[2];
	nb[148] = q[1];
	nb[149] = q[3];
	nb[150] = q[1];
	nb[151] = q[3];
	nb[152] = q[0];
	nb[153] = q[1];
	nb[154] = q[3];
	nb[155] = q[0];
	nb[156] = q[1];
	nb[157] = q[3];
	nb[158] = q[2];
	nb[159] = q[2];
	nb[160] = q[3];
	nb[161] = q[1];
	nb[162] = q[2];
	nb[163] = q[3];
	nb[164] = q[2];
	nb[165] = q[0];
	nb[166] = q[2];
	nb[167] = q[3];
	nb[168] = q[2];
	nb[169] = q[0];
	nb[170] = q[3];
	nb[171] = q[0];
	nb[172] = q[2];
	nb[173] = q[1];
	nb[174] = q[2];
	nb[175] = q[3];
	nb[176] = q[2];
	nb[177] = q[1];
	nb[178] = q[0];
	nb[179] = q[1];
	nb[180] = q[1];
	nb[181] = q[0];
	nb[182] = q[1];
	nb[183] = q[3];
	nb[184] = q[2];
	nb[185] = q[1];
	nb[186] = q[0];
	nb[187] = q[3];
	nb[188] = q[0];
	nb[189] = q[2];
	nb[190] = q[0];
	nb[191] = q[1];
	nb[192] = q[0];
	nb[193] = q[1];
	nb[194] = q[3];
	nb[195] = q[0];
	nb[196] = q[1];
	nb[197] = q[0];
	nb[198] = q[2];
	nb[199] = q[3];
	nb[200] = q[0];
	nb[201] = q[3];
	nb[202] = q[2];
	nb[203] = q[3];
	nb[204] = q[0];
	nb[205] = q[1];
	nb[206] = q[3];
	nb[207] = q[2];
	nb[208] = q[0];
	nb[209] = q[2];
	nb[210] = q[0];
	nb[211] = q[1];
	nb[212] = q[3];
	nb[213] = q[2];
	nb[214] = q[3];
	nb[215] = q[2];
	nb[216] = q[0];
	nb[217] = q[0];
	nb[218] = q[1];
	nb[219] = q[2];
	nb[220] = q[3];
	nb[221] = q[1];
	nb[222] = q[2];
	nb[223] = q[1];
	nb[224] = q[0];
	nb[225] = q[2];
	nb[226] = q[1];
	nb[227] = q[2];
	nb[228] = q[3];
	nb[229] = q[0];
	nb[230] = q[2];
	nb[231] = q[3];
	nb[232] = q[2];
	nb[233] = q[1];
	nb[234] = q[2];
	nb[235] = q[3];
	nb[236] = q[0];
	nb[237] = q[3];
	nb[238] = q[1];
	nb[239] = q[1];
	nb[240] = q[2];
	nb[241] = q[0];
	nb[242] = q[2];
	nb[243] = q[1];
	nb[244] = q[3];
	nb[245] = q[2];
	nb[246] = q[1];
	res[0] = q[2];
	res[1] = q[3];
	res[2] = q[0];
	// Non-leaf function
	Compute (0, 2, 281, 142, 4, 128, 0){
		acquire(2, anc, 247, nb);
	nq0[0] = q[1];
	nq1[0] = q[0];
	nq2[0] = q[3];
	nq3[0] = anc[1];
		Toffoli( anc[1], q[2], q[0] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], q[1], anc[1] );
		CNOT( q[2], anc[1] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[1], q[2], q[1] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( anc[1], q[2] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[2], anc[1], anc[0] );
		Toffoli( anc[1], q[1], q[0] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( q[3], q[1], q[2] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[2], q[3], q[0] );
		CNOT( q[0], q[3] );
		CNOT( anc[0], q[1] );
		CNOT( anc[0], anc[1] );
		Toffoli( q[1], q[3], anc[0] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[1], q[3], anc[0] );
		func7(nq2, 1);
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[2], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[2], q[3] );
		CNOT( q[1], q[2] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], q[2], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[3], anc[1] );
		CNOT( q[2], q[1] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[3], q[0] );
		CNOT( anc[1], q[3] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[0], q[3], anc[1] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( q[1], q[3] );
		Toffoli( q[2], q[0], anc[1] );
		CNOT( q[2], q[1] );
		func6(nq1, 1);
		Toffoli( anc[1], q[3], q[0] );
		func5(nq0, 1);
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[1], anc[0], anc[1] );
		CNOT( q[3], q[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[2], q[1], anc[1] );
		Toffoli( anc[1], q[0], q[2] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], anc[1], q[3] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], anc[1], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( q[0], q[2], q[3] );
		CNOT( anc[1], q[0] );
		Toffoli( q[3], q[2], anc[0] );
		func8(nq3, 1);
		Toffoli( anc[1], q[2], q[0] );
		CNOT( q[1], q[3] );
		Toffoli( anc[1], q[1], anc[0] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( anc[1], q[1], q[3] );
		CNOT( q[1], q[2] );
		CNOT( anc[1], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[1], anc[1], q[3] );
		Toffoli( q[1], q[2], anc[0] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], anc[0], q[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( q[0], anc[1], q[1] );
		CNOT( anc[0], q[3] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[3], q[1], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[0], anc[1] );
		Toffoli( q[1], q[2], anc[1] );
		CNOT( q[0], anc[1] );
		CNOT( q[2], q[1] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( q[0], q[2], anc[0] );
		CNOT( q[3], q[1] );
		CNOT( anc[1], q[3] );
		Toffoli( anc[1], q[0], q[3] );
		CNOT( q[2], q[3] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[2] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], q[1] );
		CNOT( q[3], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[1], q[2], q[3] );
		Toffoli( q[1], q[0], q[2] );
		CNOT( q[1], anc[1] );
		CNOT( q[1], q[0] );
		CNOT( q[3], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[1], q[2] );
		CNOT( q[1], anc[1] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[3], q[0], anc[1] );
		Toffoli( q[2], q[3], q[0] );
		Toffoli( q[1], anc[1], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( anc[0], anc[1], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], q[3], q[0] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( anc[0], q[3] );
		Toffoli( anc[0], q[2], q[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], anc[1] );
		Toffoli( q[3], q[1], anc[1] );
	}
	Store {
		CNOT( anc[0], res[0] );
		CNOT( q[0], res[1] );
		CNOT( anc[1], res[2] );
	}
	Uncompute(res, 0, anc, 2, 281, 142){
		Toffoli( q[3], q[1], anc[1] );
		CNOT( q[1], anc[1] );
		CNOT( q[3], anc[0] );
		Toffoli( q[3], anc[0], q[2] );
		Toffoli( anc[0], q[2], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[3], anc[0], q[2] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], q[3], q[0] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], anc[1], q[2] );
		CNOT( anc[0], q[3] );
		Toffoli( q[1], anc[1], anc[0] );
		Toffoli( q[2], q[3], q[0] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( q[3], q[2] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[1], anc[1] );
		CNOT( anc[1], q[2] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[3], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[1], anc[1] );
		Toffoli( q[1], q[0], q[2] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], q[1] );
		CNOT( q[3], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[1] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( anc[0], q[2] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], q[3] );
		Toffoli( anc[1], q[0], q[3] );
		CNOT( anc[1], q[3] );
		CNOT( q[3], q[1] );
		Toffoli( q[0], q[2], anc[0] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( q[2], q[1] );
		CNOT( q[0], anc[1] );
		Toffoli( q[1], q[2], anc[1] );
		CNOT( q[0], anc[1] );
		Toffoli( q[1], q[2], q[3] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[3], q[1], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( q[0], anc[1], q[1] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( q[1], q[2], anc[0] );
		Toffoli( q[1], anc[1], q[3] );
		CNOT( q[2], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( anc[1], q[1], q[3] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( anc[1], q[1], anc[0] );
		CNOT( q[1], q[3] );
		Toffoli( anc[1], q[2], q[0] );
		func8R(nq3, 1);
		Toffoli( q[3], q[2], anc[0] );
		CNOT( anc[1], q[0] );
		Toffoli( q[0], q[2], q[3] );
		CNOT( q[2], anc[0] );
		Toffoli( q[1], anc[1], q[2] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], anc[1], q[3] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[1], q[0], q[2] );
		Toffoli( q[2], q[1], anc[1] );
		CNOT( q[3], q[2] );
		CNOT( q[3], q[0] );
		Toffoli( q[1], anc[0], anc[1] );
		Toffoli( q[2], anc[0], q[3] );
		func5R(nq0, 1);
		Toffoli( anc[1], q[3], q[0] );
		func6R(nq1, 1);
		CNOT( q[2], q[1] );
		Toffoli( q[2], q[0], anc[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[0], q[3], anc[1] );
		Toffoli( anc[0], q[3], q[2] );
		CNOT( anc[1], q[3] );
		CNOT( q[3], q[0] );
		Toffoli( anc[0], q[0], q[2] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( q[2], q[1] );
		CNOT( q[3], anc[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], q[2], q[1] );
		Toffoli( q[2], q[0], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( q[1], q[2] );
		CNOT( q[2], q[3] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[0], q[2] );
		func7R(nq2, 1);
		Toffoli( anc[1], q[3], anc[0] );
		CNOT( anc[1], q[1] );
		Toffoli( q[1], q[3], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[3] );
		Toffoli( q[2], q[3], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[3], q[1], q[2] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( anc[1], q[1], q[0] );
		Toffoli( q[2], anc[1], anc[0] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( anc[1], q[2] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], anc[0], q[1] );
		Toffoli( anc[1], q[2], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[2], anc[1] );
		Toffoli( q[2], q[1], anc[1] );
		CNOT( q[3], q[0] );
		Toffoli( anc[1], q[2], q[0] );
	} Free(anc, 2) {}
}
// Function 1 with degree 4
// nq: 4, na: 2, ng: 139
void func1R(qbit **q, int n) {
printf("func1R\n");
fflush(stderr);
	qbit *anc[2]; // ancilla
	qbit *nb[247]; // interacting bits
	qbit *res[3];
	qbit *nq0[1];
	qbit *nq1[1];
	qbit *nq2[1];
	qbit *nq3[1];
	nb[0] = q[0];
	nb[1] = q[2];
	nb[2] = q[3];
	nb[3] = q[2];
	nb[4] = q[2];
	nb[5] = q[1];
	nb[6] = q[1];
	nb[7] = q[0];
	nb[8] = q[2];
	nb[9] = q[1];
	nb[10] = q[2];
	nb[11] = q[0];
	nb[12] = q[3];
	nb[13] = q[3];
	nb[14] = q[2];
	nb[15] = q[1];
	nb[16] = q[1];
	nb[17] = q[3];
	nb[18] = q[2];
	nb[19] = q[0];
	nb[20] = q[2];
	nb[21] = q[2];
	nb[22] = q[0];
	nb[23] = q[1];
	nb[24] = q[3];
	nb[25] = q[0];
	nb[26] = q[1];
	nb[27] = q[0];
	nb[28] = q[2];
	nb[29] = q[2];
	nb[30] = q[0];
	nb[31] = q[1];
	nb[32] = q[3];
	nb[33] = q[2];
	nb[34] = q[0];
	nb[35] = q[3];
	nb[36] = q[1];
	nb[37] = q[0];
	nb[38] = q[2];
	nb[39] = q[1];
	nb[40] = q[3];
	nb[41] = q[2];
	nb[42] = q[1];
	nb[43] = q[3];
	nb[44] = q[3];
	nb[45] = q[1];
	nb[46] = q[2];
	nb[47] = q[0];
	nb[48] = q[2];
	nb[49] = q[3];
	nb[50] = q[2];
	nb[51] = q[1];
	nb[52] = q[3];
	nb[53] = q[0];
	nb[54] = q[1];
	nb[55] = q[3];
	nb[56] = q[1];
	nb[57] = q[2];
	nb[58] = q[1];
	nb[59] = q[3];
	nb[60] = q[1];
	nb[61] = q[1];
	nb[62] = q[0];
	nb[63] = q[1];
	nb[64] = q[2];
	nb[65] = q[0];
	nb[66] = q[3];
	nb[67] = q[2];
	nb[68] = q[3];
	nb[69] = q[0];
	nb[70] = q[3];
	nb[71] = q[2];
	nb[72] = q[2];
	nb[73] = q[3];
	nb[74] = q[1];
	nb[75] = q[3];
	nb[76] = q[2];
	nb[77] = q[3];
	nb[78] = q[1];
	nb[79] = q[1];
	nb[80] = q[3];
	nb[81] = q[1];
	nb[82] = q[0];
	nb[83] = q[3];
	nb[84] = q[3];
	nb[85] = q[1];
	nb[86] = q[0];
	nb[87] = q[1];
	nb[88] = q[0];
	nb[89] = q[1];
	nb[90] = q[2];
	nb[91] = q[3];
	nb[92] = q[1];
	nb[93] = q[2];
	nb[94] = q[2];
	nb[95] = q[3];
	nb[96] = q[0];
	nb[97] = q[3];
	nb[98] = q[1];
	nb[99] = q[0];
	nb[100] = q[3];
	nb[101] = q[2];
	nb[102] = q[1];
	nb[103] = q[3];
	nb[104] = q[0];
	nb[105] = q[3];
	nb[106] = q[3];
	nb[107] = q[0];
	nb[108] = q[3];
	nb[109] = q[0];
	nb[110] = q[2];
	nb[111] = q[1];
	nb[112] = q[3];
	nb[113] = q[0];
	nb[114] = q[2];
	nb[115] = q[3];
	nb[116] = q[3];
	nb[117] = q[0];
	nb[118] = q[0];
	nb[119] = q[2];
	nb[120] = q[0];
	nb[121] = q[2];
	nb[122] = q[0];
	nb[123] = q[3];
	nb[124] = q[2];
	nb[125] = q[1];
	nb[126] = q[3];
	nb[127] = q[1];
	nb[128] = q[1];
	nb[129] = q[2];
	nb[130] = q[3];
	nb[131] = q[2];
	nb[132] = q[3];
	nb[133] = q[1];
	nb[134] = q[1];
	nb[135] = q[2];
	nb[136] = q[2];
	nb[137] = q[3];
	nb[138] = q[3];
	nb[139] = q[2];
	nb[140] = q[0];
	nb[141] = q[3];
	nb[142] = q[2];
	nb[143] = q[1];
	nb[144] = q[0];
	nb[145] = q[3];
	nb[146] = q[0];
	nb[147] = q[2];
	nb[148] = q[1];
	nb[149] = q[3];
	nb[150] = q[1];
	nb[151] = q[3];
	nb[152] = q[0];
	nb[153] = q[1];
	nb[154] = q[3];
	nb[155] = q[0];
	nb[156] = q[1];
	nb[157] = q[3];
	nb[158] = q[2];
	nb[159] = q[2];
	nb[160] = q[3];
	nb[161] = q[1];
	nb[162] = q[2];
	nb[163] = q[3];
	nb[164] = q[2];
	nb[165] = q[0];
	nb[166] = q[2];
	nb[167] = q[3];
	nb[168] = q[2];
	nb[169] = q[0];
	nb[170] = q[3];
	nb[171] = q[0];
	nb[172] = q[2];
	nb[173] = q[1];
	nb[174] = q[2];
	nb[175] = q[3];
	nb[176] = q[2];
	nb[177] = q[1];
	nb[178] = q[0];
	nb[179] = q[1];
	nb[180] = q[1];
	nb[181] = q[0];
	nb[182] = q[1];
	nb[183] = q[3];
	nb[184] = q[2];
	nb[185] = q[1];
	nb[186] = q[0];
	nb[187] = q[3];
	nb[188] = q[0];
	nb[189] = q[2];
	nb[190] = q[0];
	nb[191] = q[1];
	nb[192] = q[0];
	nb[193] = q[1];
	nb[194] = q[3];
	nb[195] = q[0];
	nb[196] = q[1];
	nb[197] = q[0];
	nb[198] = q[2];
	nb[199] = q[3];
	nb[200] = q[0];
	nb[201] = q[3];
	nb[202] = q[2];
	nb[203] = q[3];
	nb[204] = q[0];
	nb[205] = q[1];
	nb[206] = q[3];
	nb[207] = q[2];
	nb[208] = q[0];
	nb[209] = q[2];
	nb[210] = q[0];
	nb[211] = q[1];
	nb[212] = q[3];
	nb[213] = q[2];
	nb[214] = q[3];
	nb[215] = q[2];
	nb[216] = q[0];
	nb[217] = q[0];
	nb[218] = q[1];
	nb[219] = q[2];
	nb[220] = q[3];
	nb[221] = q[1];
	nb[222] = q[2];
	nb[223] = q[1];
	nb[224] = q[0];
	nb[225] = q[2];
	nb[226] = q[1];
	nb[227] = q[2];
	nb[228] = q[3];
	nb[229] = q[0];
	nb[230] = q[2];
	nb[231] = q[3];
	nb[232] = q[2];
	nb[233] = q[1];
	nb[234] = q[2];
	nb[235] = q[3];
	nb[236] = q[0];
	nb[237] = q[3];
	nb[238] = q[1];
	nb[239] = q[1];
	nb[240] = q[2];
	nb[241] = q[0];
	nb[242] = q[2];
	nb[243] = q[1];
	nb[244] = q[3];
	nb[245] = q[2];
	nb[246] = q[1];
	res[0] = q[2];
	res[1] = q[3];
	res[2] = q[0];
	// Non-leaf function
	_computeModule(0, 2, 281, 142, 4, 128, 0);
	acquire(2, anc, 247, nb);
	nq0[0] = q[1];
	nq1[0] = q[0];
	nq2[0] = q[3];
	nq3[0] = anc[1];
	Recompute(res, 0, anc, 2, 281, 142){
		Toffoli( anc[1], q[2], q[0] );
		CNOT( q[3], q[0] );
		Toffoli( q[2], q[1], anc[1] );
		CNOT( q[2], anc[1] );
		CNOT( anc[0], q[1] );
		Toffoli( anc[1], q[2], q[1] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( anc[1], q[2] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[2], anc[1], anc[0] );
		Toffoli( anc[1], q[1], q[0] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( q[3], q[1], q[2] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[2], q[3], q[0] );
		CNOT( q[0], q[3] );
		CNOT( anc[0], q[1] );
		CNOT( anc[0], anc[1] );
		Toffoli( q[1], q[3], anc[0] );
		CNOT( anc[1], q[1] );
		Toffoli( anc[1], q[3], anc[0] );
		func7(nq2, 1);
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[2], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( anc[1], q[0] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( q[2], q[3] );
		CNOT( q[1], q[2] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[3], q[2], q[1] );
		CNOT( q[0], q[1] );
		CNOT( q[3], anc[1] );
		CNOT( q[2], q[1] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( anc[0], q[0], q[1] );
		Toffoli( anc[0], q[0], q[2] );
		CNOT( q[3], q[0] );
		CNOT( anc[1], q[3] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[0], q[3], anc[1] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( q[1], q[3] );
		Toffoli( q[2], q[0], anc[1] );
		CNOT( q[2], q[1] );
		func6(nq1, 1);
		Toffoli( anc[1], q[3], q[0] );
		func5(nq0, 1);
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( q[1], anc[0], anc[1] );
		CNOT( q[3], q[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[2], q[1], anc[1] );
		Toffoli( anc[1], q[0], q[2] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[0], anc[1], q[3] );
		CNOT( q[1], q[0] );
		Toffoli( q[1], anc[1], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( q[0], q[2], q[3] );
		CNOT( anc[1], q[0] );
		Toffoli( q[3], q[2], anc[0] );
		func8(nq3, 1);
		Toffoli( anc[1], q[2], q[0] );
		CNOT( q[1], q[3] );
		Toffoli( anc[1], q[1], anc[0] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( anc[1], q[1], q[3] );
		CNOT( q[1], q[2] );
		CNOT( anc[1], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[1], anc[1], q[3] );
		Toffoli( q[1], q[2], anc[0] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], anc[0], q[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( q[0], anc[1], q[1] );
		CNOT( anc[0], q[3] );
		CNOT( q[0], anc[0] );
		Toffoli( q[1], anc[0], q[0] );
		Toffoli( q[3], q[1], q[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[0], anc[1] );
		Toffoli( q[1], q[2], anc[1] );
		CNOT( q[0], anc[1] );
		CNOT( q[2], q[1] );
		Toffoli( anc[0], q[0], anc[1] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( q[0], q[2], anc[0] );
		CNOT( q[3], q[1] );
		CNOT( anc[1], q[3] );
		Toffoli( anc[1], q[0], q[3] );
		CNOT( q[2], q[3] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[2] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( q[1], anc[1] );
		CNOT( q[0], q[1] );
		CNOT( q[3], anc[0] );
		CNOT( anc[0], q[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[1], q[2], q[3] );
		Toffoli( q[1], q[0], q[2] );
		CNOT( q[1], anc[1] );
		CNOT( q[1], q[0] );
		CNOT( q[3], q[0] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( anc[1], q[2] );
		CNOT( q[1], anc[1] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[3], q[2] );
		Toffoli( q[3], q[0], anc[1] );
		Toffoli( q[2], q[3], q[0] );
		Toffoli( q[1], anc[1], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( anc[0], anc[1], q[2] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], q[3], q[0] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( anc[0], q[3] );
		Toffoli( anc[0], q[2], q[1] );
		Toffoli( q[3], anc[0], q[2] );
		CNOT( q[3], anc[0] );
		CNOT( q[1], anc[1] );
		Toffoli( q[3], q[1], anc[1] );
	}
	Restore {
		CNOT( anc[0], res[0] );
		CNOT( q[0], res[1] );
		CNOT( anc[1], res[2] );
	}
	Unrecompute {
		Toffoli( q[3], q[1], anc[1] );
		CNOT( q[1], anc[1] );
		CNOT( q[3], anc[0] );
		Toffoli( q[3], anc[0], q[2] );
		Toffoli( anc[0], q[2], q[1] );
		CNOT( anc[0], q[3] );
		Toffoli( q[3], anc[0], q[2] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( q[2], anc[0], q[1] );
		Toffoli( q[2], q[3], q[1] );
		CNOT( q[2], anc[0] );
		Toffoli( q[2], q[3], q[0] );
		CNOT( q[2], anc[0] );
		Toffoli( anc[0], anc[1], q[2] );
		CNOT( anc[0], q[3] );
		Toffoli( q[1], anc[1], anc[0] );
		Toffoli( q[2], q[3], q[0] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( q[3], q[2] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[1], anc[1] );
		CNOT( anc[1], q[2] );
		Toffoli( q[0], q[1], anc[0] );
		CNOT( q[3], q[0] );
		CNOT( q[1], q[0] );
		CNOT( q[1], anc[1] );
		Toffoli( q[1], q[0], q[2] );
		Toffoli( q[1], q[2], q[3] );
		CNOT( q[1], q[3] );
		CNOT( anc[0], q[1] );
		CNOT( q[3], anc[0] );
		CNOT( q[0], q[1] );
		CNOT( q[1], anc[1] );
		Toffoli( q[2], q[1], q[3] );
		CNOT( anc[0], q[2] );
		CNOT( q[0], anc[0] );
		CNOT( q[2], q[3] );
		Toffoli( anc[1], q[0], q[3] );
		CNOT( anc[1], q[3] );
		CNOT( q[3], q[1] );
		Toffoli( q[0], q[2], anc[0] );
		Toffoli( anc[0], q[3], q[1] );
		Toffoli( anc[0], q[0], anc[1] );
		CNOT( q[2], q[1] );
		CNOT( q[0], anc[1] );
		Toffoli( q[1], q[2], anc[1] );
		CNOT( q[0], anc[1] );
		Toffoli( q[1], q[2], q[3] );
		Toffoli( q[2], q[0], anc[0] );
		Toffoli( q[0], q[1], anc[1] );
		Toffoli( q[3], q[1], q[0] );
		Toffoli( q[1], anc[0], q[0] );
		CNOT( q[0], anc[0] );
		CNOT( anc[0], q[3] );
		Toffoli( q[0], anc[1], q[1] );
		Toffoli( q[0], q[3], anc[0] );
		Toffoli( anc[0], q[3], q[2] );
		Toffoli( q[2], anc[0], q[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[2], q[3], q[1] );
		Toffoli( q[1], q[2], anc[0] );
		Toffoli( q[1], anc[1], q[3] );
		CNOT( q[2], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[1], q[2] );
		Toffoli( anc[1], q[1], q[3] );
		Toffoli( q[2], anc[0], q[3] );
		Toffoli( anc[1], q[1], anc[0] );
		CNOT( q[1], q[3] );
		Toffoli( anc[1], q[2], q[0] );
		func8R(nq3, 1);
		Toffoli( q[3], q[2], anc[0] );
		CNOT( anc[1], q[0] );
		Toffoli( q[0], q[2], q[3] );
		CNOT( q[2], anc[0] );
		Toffoli( q[1], anc[1], q[2] );
		CNOT( q[1], q[0] );
		Toffoli( anc[0], anc[1], q[3] );
		CNOT( q[0], anc[0] );
		Toffoli( anc[1], q[0], q[2] );
		Toffoli( q[2], q[1], anc[1] );
		CNOT( q[3], q[2] );
		CNOT( q[3], q[0] );
		Toffoli( q[1], anc[0], anc[1] );
		Toffoli( q[2], anc[0], q[3] );
		func5R(nq0, 1);
		Toffoli( anc[1], q[3], q[0] );
		func6R(nq1, 1);
		CNOT( q[2], q[1] );
		Toffoli( q[2], q[0], anc[1] );
		CNOT( q[1], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[0], anc[0], q[3] );
		Toffoli( q[0], q[3], anc[1] );
		Toffoli( anc[0], q[3], q[2] );
		CNOT( anc[1], q[3] );
		CNOT( q[3], q[0] );
		Toffoli( anc[0], q[0], q[2] );
		Toffoli( anc[0], q[0], q[1] );
		CNOT( q[3], anc[0] );
		Toffoli( anc[1], q[0], q[1] );
		CNOT( q[2], q[1] );
		CNOT( q[3], anc[1] );
		CNOT( q[0], q[1] );
		Toffoli( q[3], q[2], q[1] );
		Toffoli( q[2], q[0], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( q[3], anc[0], q[1] );
		CNOT( q[1], q[2] );
		CNOT( q[2], q[3] );
		Toffoli( q[0], anc[0], q[1] );
		CNOT( anc[1], q[0] );
		CNOT( anc[1], anc[0] );
		CNOT( q[2], q[0] );
		Toffoli( anc[0], q[0], q[2] );
		func7R(nq2, 1);
		Toffoli( anc[1], q[3], anc[0] );
		CNOT( anc[1], q[1] );
		Toffoli( q[1], q[3], anc[0] );
		CNOT( anc[0], anc[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[0], q[3] );
		Toffoli( q[2], q[3], q[0] );
		Toffoli( anc[0], q[2], q[3] );
		Toffoli( q[3], q[2], anc[0] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[3], q[1], q[2] );
		Toffoli( q[1], q[3], anc[1] );
		Toffoli( anc[1], q[1], q[0] );
		Toffoli( q[2], anc[1], anc[0] );
		Toffoli( q[2], anc[1], q[3] );
		Toffoli( q[2], q[1], q[3] );
		Toffoli( q[2], anc[0], q[3] );
		CNOT( anc[1], q[2] );
		Toffoli( q[3], q[0], anc[1] );
		CNOT( q[0], anc[0] );
		Toffoli( q[3], anc[0], q[1] );
		Toffoli( anc[1], q[2], q[1] );
		CNOT( anc[0], q[1] );
		CNOT( q[2], anc[1] );
		Toffoli( q[2], q[1], anc[1] );
		CNOT( q[3], q[0] );
		Toffoli( anc[1], q[2], q[0] );
	} Refree(anc, 2) {}
}
// main function
int main() {
	qbit *new[16];
	acquire(16, new, 0, NULL);
	// Intialize inputs
	X (new[3]);
	// Start computation
	qbit *nq0[4];
	qbit *nq1[4];
	qbit *nq2[4];
	qbit *nq3[4];
	nq0[0] = new[0];
	nq0[1] = new[12];
	nq0[2] = new[6];
	nq0[3] = new[2];
	nq1[0] = new[10];
	nq1[1] = new[4];
	nq1[2] = new[9];
	nq1[3] = new[7];
	nq2[0] = new[14];
	nq2[1] = new[8];
	nq2[2] = new[13];
	nq2[3] = new[1];
	nq3[0] = new[15];
	nq3[1] = new[3];
	nq3[2] = new[11];
	nq3[3] = new[5];
	for (int i = 0; i < LOOP; i++) {
		func1(nq0, 4);
		func2(nq1, 4);
		func3(nq2, 4);
		func4(nq3, 4);
	}
	return 0;
}
