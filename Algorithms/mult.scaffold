#include <stdlib.h>
#include "qalloc.h"

//void acquire(int n, qbit **addr) {
//	qbit *new = (qbit *)malloc(sizeof(qbit)*n);
//	*addr = new;
//}
//
//void release(qbit **out, int n1, qbit **anc, int n2);

void ctrlAddMod_n2(qbit **ctrl, qbit **a, qbit **b, int n) {
	qbit *all_anc[1];
	acquire(1, all_anc);
	qbit **c = &all_anc[0];
//	qbit **ctrl = &all_anc[1];
	Toffoli(a[0],ctrl[0],b[0]);
	CNOT(a[0],c[0]);
	Toffoli(c[0],b[0],a[0]);
	Toffoli(a[n-1],ctrl[0],b[n-1]);
	Toffoli(a[n-2],ctrl[0],b[n-1]);
	Toffoli(c[0],b[0],a[0]);
	CNOT(a[0],c[0]);
	Toffoli(c[0],ctrl[0],b[0]);
	release(b,64,all_anc,1);
}
void ctrlAddMod(qbit **ctrl, qbit **a, qbit **b, int n, int start, int end) {
	qbit *c[1];
	acquire(1, c);
	
	Toffoli(a[0], ctrl[0], b[start]);
	CNOT(a[0], c[0]);
	Toffoli(c[0], b[start], a[0]);
	for (int i = 1; i < n-1; i++) {
		Toffoli(a[i],ctrl[0],b[i+start]);
		CNOT(a[i],a[i-1]);
		Toffoli(a[i-1],b[i+start],a[i]);
	}
	Toffoli(a[n-1], ctrl[0],b[start+n-1]);
	Toffoli(a[n-2], ctrl[0],b[start+n-1]);

	for (int i = 2; i < n; i++) {
		Toffoli(a[n-i-1],b[start+n-i],a[n-i]);
		CNOT(a[n-i],a[n-i-1]);
		Toffoli(a[n-i-1],ctrl[0],b[start+n-i]);
	}
	Toffoli(c[0], b[start], a[0]);
	CNOT(a[0], c[0]);
	Toffoli(c[0],ctrl[0],b[start]);
	release(b, 64, c, 1);
}
int main() {
	int n = 64;
	qbit *new[3*64];
	acquire(3*64, new);
	qbit **a = &new[0];
	qbit **b = &new[n];
	qbit **res =&new[2*n];
	for (int i = 0; i < n; i++){
		//Create new result subarray
		ctrlAddMod(&a[i], b, res, n, i, i+n-1);
	}
	return 0;
	
}
